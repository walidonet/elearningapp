webpackJsonp([2],{

/***/ 1015:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ForumBlock; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_config__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__services_forum__ = __webpack_require__(48);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__pages_topicdirectory_topicdirectory__ = __webpack_require__(577);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var ForumBlock = /** @class */ (function () {
    function ForumBlock(navCtrl, navParams, config, forumService, loadingController, toastCtrl, alertCtrl) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.config = config;
        this.forumService = forumService;
        this.loadingController = loadingController;
        this.toastCtrl = toastCtrl;
        this.alertCtrl = alertCtrl;
        this.topicpPage = __WEBPACK_IMPORTED_MODULE_4__pages_topicdirectory_topicdirectory__["a" /* TopicdirectoryPage */];
    }
    ForumBlock.prototype.ngOnInit = function () {
        if (this.forum.post_date) {
            var new_time = Math.floor((new Date().getTime() - Date.parse(this.forum.post_date)) / 1000);
            this.forum.post_date = new_time;
        }
    };
    ForumBlock.prototype.goToNextPage = function (forum) {
        var $this = this;
        $this.navCtrl.push(this.topicpPage, forum);
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])('forum'),
        __metadata("design:type", Object)
    ], ForumBlock.prototype, "forum", void 0);
    ForumBlock = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'ForumBlock',template:/*ion-inline-start:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\components\forumblock\forumblock.html"*/'<ion-card class="forum_container" (click)="goToNextPage(forum)">\n	<div class="user">\n	   <img *ngIf="forum.user.image" [src]="forum.user.image" alt="">\n	   <span *ngIf="forum.post_date" ><friendlytime [time]="forum.post_date"></friendlytime></span>\n	</div>\n	<div class="value">\n		<div *ngIf="forum.post_title" class="post_title">\n			<span [innerHtml]="forum.post_title"></span>\n		</div>\n\n		<div *ngIf="forum.post_content" class="post_content">\n			<span [innerHtml]="forum.post_content"></span>\n		</div>\n	</div>\n</ion-card>'/*ion-inline-end:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\components\forumblock\forumblock.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__services_config__["a" /* ConfigService */],
            __WEBPACK_IMPORTED_MODULE_3__services_forum__["a" /* ForumService */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* LoadingController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* ToastController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */]])
    ], ForumBlock);
    return ForumBlock;
}());

//# sourceMappingURL=forumblock.js.map

/***/ }),

/***/ 114:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PushNotificationService; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ionic_storage__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__config__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_ionic_angular__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__ionic_native_push__ = __webpack_require__(320);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};








var PushNotificationService = /** @class */ (function () {
    function PushNotificationService(http, config, storage, push, platform, toastCtrl) {
        this.http = http;
        this.config = config;
        this.storage = storage;
        this.push = push;
        this.platform = platform;
        this.toastCtrl = toastCtrl;
    }
    PushNotificationService.prototype.push_notifcation_firebase = function () {
        var _this = this;
        // check if cordova and enable push notification
        if (this.platform.is('cordova') && this.config.push_notification && this.config.push_notification.enable_push_notification) {
            this.push.hasPermission().then(function (res) {
                if (res.isEnabled) {
                    console.log('We have permission to send push notifications');
                }
                else {
                    console.log('We do not have permission to send push notifications');
                }
            });
            var options = {
                android: {
                    'senderID': this.config.push_notification.senderID
                },
                ios: {
                    alert: 'true',
                    badge: true,
                    sound: 'false'
                }
            };
            var pushObject = this.push.init(options);
            pushObject.on('notification').subscribe(function (notification) {
                console.log('Received a notification', notification);
                if (notification.message) {
                    var toast = _this.toastCtrl.create({
                        message: notification.message,
                        duration: _this.config.push_notification.duration,
                        position: 'bottom'
                    });
                    toast.present();
                }
            });
            pushObject.on('registration').subscribe(function (registration) {
                console.log('Device registered', registration);
                if (registration.registrationId) {
                    _this.config.push_notification.registrationId = registration.registrationId;
                    _this.storage.set('registrationId', registration.registrationId);
                    var toast = _this.toastCtrl.create({
                        message: 'Device registered for Push Notification',
                        duration: _this.config.push_notification.duration,
                        position: 'bottom'
                    });
                    toast.present();
                }
            });
            pushObject.on('error').subscribe(function (error) { return console.error('Error with Push plugin', error); });
        }
    };
    PushNotificationService.prototype.add_user_to_user_notification_list = function (user) {
        var _this = this;
        console.log('add_user_to_user_notification_list');
        this.platform.ready().then(function () {
            if (_this.config.push_notification && _this.config.push_notification.enable_push_notification) {
                if (_this.config.isLoggedIn) {
                    var opt_1 = _this.config.getUserAuthorizationHeaders();
                    console.log('#1');
                    _this.storage.get('registrationId').then(function (registrationId) {
                        if (registrationId) {
                            var data = {
                                'registrationId': registrationId
                            };
                            _this.http.post(_this.config.baseUrl + "user/add-registrationId", data, opt_1)
                                .map(function (res) { return res.json(); })
                                .subscribe(function (res) {
                                if (res.status) {
                                    console.log(res);
                                    if (res.message) {
                                        var toast = _this.toastCtrl.create({
                                            message: res.message,
                                            duration: _this.config.push_notification.duration,
                                            position: 'bottom'
                                        });
                                        toast.present();
                                    }
                                }
                            });
                        }
                        else {
                            if (_this.config.push_notification.registrationId) {
                                var data = {
                                    'registrationId': _this.config.push_notification.registrationId
                                };
                                _this.http.post(_this.config.baseUrl + "user/add-registrationId", data, opt_1)
                                    .map(function (res) { return res.json(); })
                                    .subscribe(function (res) {
                                    if (res.status) {
                                        console.log(res);
                                        if (res.message) {
                                            var toast = _this.toastCtrl.create({
                                                message: res.message,
                                                duration: _this.config.push_notification.duration,
                                                position: 'bottom'
                                            });
                                            toast.present();
                                        }
                                    }
                                });
                            }
                        }
                    });
                }
            }
        });
    };
    PushNotificationService.prototype.delete_user_to_user_notification_list = function () {
        var _this = this;
        var opt = this.config.getUserAuthorizationHeaders();
        this.storage.get('registrationId').then(function (registrationId) {
            var data = {
                'registrationId': registrationId
            };
            _this.http.post(_this.config.baseUrl + "user/delete-registrationId", data, opt)
                .map(function (res) { return res.json(); })
                .subscribe(function (res) {
                if (res.status) {
                    console.log(res);
                    if (res.message) {
                        var toast = _this.toastCtrl.create({
                            message: res.message,
                            duration: _this.config.push_notification.duration,
                            position: 'bottom'
                        });
                        toast.present();
                    }
                }
            });
        });
    };
    PushNotificationService = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Http */],
            __WEBPACK_IMPORTED_MODULE_3__config__["a" /* ConfigService */],
            __WEBPACK_IMPORTED_MODULE_2__ionic_storage__["b" /* Storage */],
            __WEBPACK_IMPORTED_MODULE_6__ionic_native_push__["a" /* Push */],
            __WEBPACK_IMPORTED_MODULE_5_ionic_angular__["o" /* Platform */],
            __WEBPACK_IMPORTED_MODULE_5_ionic_angular__["q" /* ToastController */]])
    ], PushNotificationService);
    return PushNotificationService;
}());

//# sourceMappingURL=push_notification.js.map

/***/ }),

/***/ 115:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ActivityService; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_ionic_angular__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_map__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_observable_of__ = __webpack_require__(40);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_observable_of___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_add_observable_of__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__authentication__ = __webpack_require__(33);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__config__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__ionic_storage__ = __webpack_require__(11);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};








var ActivityService = /** @class */ (function () {
    function ActivityService(http, platform, storage, auth, config) {
        var _this = this;
        this.http = http;
        this.platform = platform;
        this.storage = storage;
        this.auth = auth;
        this.config = config;
        this.activity = {};
        this.activities = [];
        this.lastpushed = 0;
        this.baseUrl = this.config.baseUrl;
        if (this.config.isLoggedIn) {
            this.storage.get('activity_' + this.config.user.id).then(function (ac) {
                _this.activities = ac;
            });
        }
    }
    ActivityService.prototype.addActivity = function (activity) {
        var _this = this;
        this.activity['user_id'] = activity['user_id'];
        this.activity['component'] = 'course';
        this.activity['type'] = activity['type'];
        this.activity['action'] = this.config.get_translation(activity['action']);
        if (!('content' in activity)) {
            this.activity['content'] = this.config.get_translation(activity['action'] + '_content');
        }
        else {
            this.activity['content'] = activity.content;
        }
        this.activity.date_recorded = new Date().getTime();
        this.activities.push(this.activity);
        this.storage.set('activity_' + activity['user_id'], this.activities);
        if ((this.lastpushed + this.config.settings.per_view < this.activities.length)) {
            //time to push
            var opt = this.auth.getUserAuthorizationHeaders();
            var newactivities = [];
            for (var i = this.lastpushed; i < this.config.settings.per_view; i++) {
                newactivities.push(this.activities);
            }
            var url = this.config.baseUrl + "user/activity";
            this.http.post(url, newactivities, opt).subscribe(function (res) {
                _this.lastpushed = _this.activities.length;
                _this.storage.set('recorded_activity_count_' + activity['user_id'], _this.lastpushed);
            });
        }
    };
    ActivityService.prototype.getActivities = function () {
        return this.storage.get('activity_' + this.config.user.id);
    };
    ActivityService = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Http */],
            __WEBPACK_IMPORTED_MODULE_2_ionic_angular__["o" /* Platform */],
            __WEBPACK_IMPORTED_MODULE_7__ionic_storage__["b" /* Storage */],
            __WEBPACK_IMPORTED_MODULE_5__authentication__["a" /* AuthenticationService */],
            __WEBPACK_IMPORTED_MODULE_6__config__["a" /* ConfigService */]])
    ], ActivityService);
    return ActivityService;
}());

//# sourceMappingURL=activity.js.map

/***/ }),

/***/ 116:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CourseStatusPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_platform_browser__ = __webpack_require__(44);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__ionic_native_in_app_browser__ = __webpack_require__(58);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__ionic_native_file_transfer__ = __webpack_require__(182);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__ionic_native_file__ = __webpack_require__(88);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__search_search__ = __webpack_require__(61);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__course_course__ = __webpack_require__(62);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__reviewcourse_reviewcourse__ = __webpack_require__(327);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__profile_profile__ = __webpack_require__(22);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__services_course__ = __webpack_require__(49);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__services_users__ = __webpack_require__(29);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__services_status__ = __webpack_require__(184);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__services_config__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__services_quiz__ = __webpack_require__(185);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__services_activity__ = __webpack_require__(115);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__ionic_storage__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__unitcomment_unitcomment__ = __webpack_require__(328);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__uploadassignment_uploadassignment__ = __webpack_require__(329);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19__services_upload_assignment__ = __webpack_require__(187);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




















var CourseStatusPage = /** @class */ (function () {
    function CourseStatusPage(navCtrl, navParams, modalCtrl, alert, userService, courseStatusService, config, toastCtrl, storage, courseService, quizService, activityService, loadingCtrl, domSanitizer, upload_assignment, iab, transfer, file, platform, fileTransfer) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.modalCtrl = modalCtrl;
        this.alert = alert;
        this.userService = userService;
        this.courseStatusService = courseStatusService;
        this.config = config;
        this.toastCtrl = toastCtrl;
        this.storage = storage;
        this.courseService = courseService;
        this.quizService = quizService;
        this.activityService = activityService;
        this.loadingCtrl = loadingCtrl;
        this.domSanitizer = domSanitizer;
        this.upload_assignment = upload_assignment;
        this.iab = iab;
        this.transfer = transfer;
        this.file = file;
        this.platform = platform;
        this.fileTransfer = fileTransfer;
        this.unitCommentPage = __WEBPACK_IMPORTED_MODULE_17__unitcomment_unitcomment__["a" /* UnitCommentPage */];
        this.uploadAssignmentPage = __WEBPACK_IMPORTED_MODULE_18__uploadassignment_uploadassignment__["a" /* UploadAssignmentPage */];
        this.isLoggedIn = true;
        this.saving = false;
        this.quiz_saved = false;
        this.timelineactive = 1;
        this.iframeUrls = [];
    }
    CourseStatusPage.prototype.ngOnInit = function () {
        var _this = this;
        this.platform.ready().then(function () {
            if (_this.platform.is('ios')) {
                _this.storageDirectory = _this.file.dataDirectory;
            }
            else if (_this.platform.is('android')) {
                _this.storageDirectory = _this.file.externalDataDirectory;
            }
            else {
                _this.storageDirectory = _this.file.cacheDirectory;
            }
        });
        var data;
        data = this.navParams.data;
        if (data.hasOwnProperty('course')) {
            this.storage.set('lastcourse', data);
        }
        else {
            data = this.courseService.getLastCourse();
        }
        this.quizService.getQuizStarted();
        this.course = data['course'];
        this.user = data['user'];
        this.current_i = 0;
        if (this.course) {
            if (!('name' in this.course)) {
                this.storage.get('course_' + this.user.id).then(function (res) {
                    if (res && Array.isArray(res)) {
                        for (var k = 0; k < res.length; k++) {
                            if (_this.course.id == res[k].id) {
                                _this.course = res[k];
                            }
                        }
                    }
                });
            }
            var progress = parseFloat(this.course.user_progress);
            this.coursestatus = {
                'course_id': this.course.id,
                'user_id': this.user.id,
                'progress': Number(progress),
                'current_unit_key': 0,
                'courseitems': [],
                'status': this.course.user_status,
            };
            var loading_1 = this.loadingCtrl.create({
                content: '<img src="assets/images/bubbles.svg">',
                duration: 15000,
                spinner: 'hide',
                showBackdrop: true,
            });
            loading_1.present();
            this.courseStatusService.getCourseStatus(this.coursestatus).subscribe(function (res) {
                _this.coursestatus = res;
                loading_1.dismiss();
            });
            if (this.course.status == 1) {
                var a = {
                    'user_id': this.user.id,
                    'type': 'start_course',
                    'action': 'start_course',
                    'content': this.config.get_translation('user_started_course') + ' ' + this.course.name,
                    'item_id': this.coursestatus.course_id,
                    'secondary_item_id': this.coursestatus.courseitems[this.current_i].id,
                };
                this.activityService.addActivity(a);
            }
        }
    };
    CourseStatusPage.prototype.ionViewDidLoad = function () {
        var _this = this;
        if (this.course.id != this.coursestatus.course_id) { // New course has been loaded
            console.log('New course to be loaded');
            var progress = parseFloat(this.course.user_progress);
            this.coursestatus = {
                'course_id': this.course.id,
                'user_id': this.user.id,
                'progress': Number(progress),
                'current_unit_key': 0,
                'courseitems': [],
                'status': this.course.user_status,
            };
            var loading_2 = this.loadingCtrl.create({
                content: '<img src="assets/images/bubbles.svg">',
                duration: 15000,
                spinner: 'hide',
                showBackdrop: true,
            });
            loading_2.present();
            this.get_progress();
            this.courseStatusService.getCourseStatus(this.coursestatus).subscribe(function (res) {
                _this.coursestatus = res;
                _this.get_progress();
                loading_2.dismiss();
            });
        }
    };
    CourseStatusPage.prototype.ionViewWillUnload = function () {
    };
    CourseStatusPage.prototype.openSearch = function () {
        var modal = this.modalCtrl.create(__WEBPACK_IMPORTED_MODULE_6__search_search__["a" /* SearchPage */]);
        modal.present();
    };
    CourseStatusPage.prototype.toggleTimeline = function () {
        if (this.timelineactive) {
            this.timelineactive = 0;
        }
        else {
            this.get_progress();
            this.timelineactive = 1;
        }
    };
    CourseStatusPage.prototype.get_progress = function () {
        var unit_count = 0;
        for (var k = 0; k < this.coursestatus.courseitems.length; k++) {
            if (this.coursestatus.courseitems[k].type != 'section') {
                unit_count++;
            }
        }
        if (unit_count == 0) {
            unit_count = 1;
        }
        //Get progress
        this.coursestatus['progress'] = 0;
        for (var i = 0; i < this.coursestatus.courseitems.length; i++) {
            if (this.coursestatus.courseitems[i].status) {
                this.coursestatus.progress = this.coursestatus.progress + parseFloat((100 / unit_count).toFixed(2));
                if (this.coursestatus.progress > 100) {
                    this.coursestatus.progress = 100;
                }
            }
        }
        if (this.userService && this.userService.profile && this.userService.profile.data['courses']) {
            for (var i = 0; i < this.userService.profile.data['courses'].length; i++) {
                if (this.userService.profile.data['courses'][i].id == this.coursestatus.course_id) {
                    this.userService.profile.data['courses'][i].user_progress = this.coursestatus.progress;
                }
            }
        }
    };
    CourseStatusPage.prototype.getsection = function (key) {
        for (var i = key; i >= 0; i--) {
            if (this.coursestatus.courseitems[i].type == 'section') {
                return this.coursestatus.courseitems[i].title;
            }
        }
        return '';
    };
    CourseStatusPage.prototype.getsectionduration = function (key) {
        var duration = 0;
        for (var i = key + 1; i <= this.coursestatus.courseitems.length; i++) {
            if (this.coursestatus.courseitems[i]) {
                if (this.coursestatus.courseitems[i].type == 'section') {
                    return duration;
                }
                else {
                    duration = duration + this.coursestatus.courseitems[i].duration;
                }
            }
        }
    };
    CourseStatusPage.prototype.in_section = function (unitkey, sectionkey) {
        for (var i = unitkey; i > sectionkey; i--) {
            if (this.coursestatus.courseitems[i].type == 'section')
                return false;
        }
        return true;
    };
    CourseStatusPage.prototype.forceReload = function () {
        var _this = this;
        var loading = this.loadingCtrl.create({
            content: '<img src="assets/images/bubbles.svg">',
            spinner: 'hide',
            showBackdrop: true,
            duration: 15000,
        });
        loading.present();
        var index = this.courseStatusItems.getActiveIndex();
        this.config.removeFromTracker('statusitems', this.coursestatus.courseitems[index].id);
        this.courseStatusService.getCourseStatusItem(this.coursestatus, index).subscribe(function (res) {
            _this.coursestatus = res;
            console.log(JSON.stringify(res));
            console.log('----------' + _this.coursestatus.courseitems[_this.current_i].hasOwnProperty('meta') + '###' + _this.coursestatus.courseitems[_this.current_i].meta.hasOwnProperty('audio'));
            console.log(res);
            if (1) {
                console.log('#1');
                if (_this.coursestatus.courseitems[_this.current_i].meta.audio.length) {
                    console.log('#2');
                    _this.coursestatus.courseitems[_this.current_i].meta.audio.map(function (audio, index) {
                        console.log('#3 ->' + _this.coursestatus.courseitems[_this.current_i].meta.audio[index]);
                        _this.getLocalAudio(_this.coursestatus.courseitems[_this.current_i].meta.audio[index]).then(function (url) {
                            _this.coursestatus.courseitems[_this.current_i].meta['audio'][index] = url;
                            _this.courseStatusService.updateCourseStatus(_this.coursestatus);
                            console.log('YAY ' + url);
                        });
                    });
                }
            }
            _this.checkQuizStatus();
            _this.checkAssignmentStatus();
            _this.get_progress();
            loading.dismiss();
        });
    };
    CourseStatusPage.prototype.loadAssignment = function (assignment, unit_id) {
        if (this.coursestatus.courseitems[this.current_i].meta.hasOwnProperty('assignments')) {
            var i = this.coursestatus.courseitems[this.current_i].meta.assignments.findIndex(function (ass) { return ass.id === assignment.id; });
            if (assignment.hasOwnProperty('flag') && assignment.flag <= 1) {
                this.coursestatus.courseitems[this.current_i].meta.assignments[i]['flag'] = 1;
                this.courseStatusService.updateCourseStatus(this.coursestatus);
            }
        }
        assignment['current_unit_id'] = unit_id;
        assignment['coursestatus'] = JSON.stringify(this.coursestatus);
        assignment['current_i'] = this.current_i;
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_18__uploadassignment_uploadassignment__["a" /* UploadAssignmentPage */], assignment);
    };
    CourseStatusPage.prototype.checkAssignmentStatus = function () {
        this.upload_assignment.assignments = this.coursestatus.courseitems[this.current_i].meta.assignments;
    };
    CourseStatusPage.prototype.iframeSanitizer = function (iframe) {
        return this.domSanitizer.bypassSecurityTrustResourceUrl(iframe);
    };
    CourseStatusPage.prototype.onSlideChanged = function () {
        var _this = this;
        console.log('on slide change top');
        this.upload_assignment.assignments = []; // done for when we change unit all assignment should be removed first
        var index = this.courseStatusItems.getActiveIndex();
        console.log(index);
        this.content.scrollToTop();
        if (this.coursestatus.courseitems.length > index) {
            this.current_i = index;
            if (this.coursestatus.courseitems[index].type != 'section') {
                if (!this.coursestatus.courseitems[index].content || !this.coursestatus.courseitems[index].meta.access) {
                    var loading_3 = this.loadingCtrl.create({
                        content: '<img src="assets/images/bubbles.svg">',
                        duration: 15000,
                        spinner: 'hide',
                        showBackdrop: true,
                    });
                    loading_3.present();
                    var temp_course_items = void 0;
                    temp_course_items = JSON.parse(JSON.stringify(this.coursestatus));
                    for (var i = 0; i < (temp_course_items.courseitems.length); i++) {
                        if (temp_course_items.courseitems[i].meta && !temp_course_items.courseitems[i].meta.access) {
                            temp_course_items.courseitems[i].content = '';
                        }
                    }
                    this.courseStatusService.getCourseStatusItem(temp_course_items, index).subscribe(function (res) {
                        _this.coursestatus = res;
                        _this.checkQuizStatus();
                        _this.checkAssignmentStatus();
                        console.log('on slide change');
                        _this.get_progress();
                        loading_3.dismiss();
                        if (_this.coursestatus.courseitems[index].type == 'unit' && _this.config.settings.open_units_in_inappbrowser_auto) {
                            if (_this.coursestatus.courseitems[index].meta.link) {
                                _this.openIabunit(_this.coursestatus.courseitems[index].meta.link);
                            }
                        }
                    });
                }
                if (this.coursestatus.courseitems[index].status == 0 && this.coursestatus.courseitems[index].type != 'quiz') {
                    if (this.coursestatus.courseitems[index].meta.access == 1) {
                        this.coursestatus.courseitems[index].status = 1;
                        this.get_progress();
                        this.courseStatusService.markUnitComplete(this.coursestatus, this.coursestatus.courseitems[index]);
                    }
                }
                if (this.coursestatus.courseitems[index].type == 'quiz') {
                    if (!this.coursestatus.courseitems[index].meta.hasOwnProperty('progress')) {
                        this.coursestatus.courseitems[index].meta['progress'] = 0;
                        this.quiz_start = true;
                    }
                }
                this.courseStatusService.updateCourseStatus(this.coursestatus);
                if (this.coursestatus.courseitems[index].type == 'unit' && this.config.settings.open_units_in_inappbrowser_auto) {
                    console.log('courseitems[index].meta.link');
                    console.log(this.coursestatus.courseitems[index].meta.link);
                    if (this.coursestatus.courseitems[index].meta.link) {
                        this.openIabunit(this.coursestatus.courseitems[index].meta.link);
                    }
                }
            }
        }
        this.checkAssignmentStatus();
        console.log('on slide change bottom');
    };
    CourseStatusPage.prototype.checkQuizStatus = function () {
        if (this.coursestatus && this.coursestatus.courseitems && typeof this.coursestatus.courseitems[this.current_i].meta != "undefined" &&
            typeof this.coursestatus.courseitems[this.current_i].meta.status != "undefined") {
            switch (this.coursestatus.courseitems[this.current_i].meta.status) {
                case 0:
                    this.quizService.removeQuizStarted(this.coursestatus.courseitems[this.current_i]);
                    break;
                case 1:
                case 2:
                    if ('remaining' in this.coursestatus.courseitems[this.current_i]) {
                        this.coursestatus.courseitems[this.current_i].duration = this.coursestatus.courseitems[this.current_i].meta.remaining;
                        this.coursestatus.courseitems[this.current_i].duration = this.quizService.getRemainingTimer(this.coursestatus.courseitems[this.current_i].id, this.coursestatus.courseitems[this.current_i].duration);
                    }
                    else {
                        this.coursestatus.courseitems[this.current_i].duration = 0;
                        this.coursestatus.courseitems[this.current_i].content = this.coursestatus.courseitems[this.current_i].meta.completion_message;
                        this.coursestatus.courseitems[this.current_i].meta.status = 3;
                    }
                    break;
                case 3:
                    this.quizService.stopTimer(this.coursestatus.courseitems[this.current_i].id);
                    this.coursestatus.courseitems[this.current_i].status = 1;
                    break;
                case 4:
                    this.quizService.stopTimer(this.coursestatus.courseitems[this.current_i].id);
                    if (this.quizService.quiz_started) {
                        this.quizService.quiz_started.push(this.coursestatus.courseitems[this.current_i].id);
                    }
                    this.coursestatus.courseitems[this.current_i].status = 1;
                    break;
                default:
                    break;
            }
        }
        if (this.coursestatus) {
            this.courseStatusService.updateCourseStatus(this.coursestatus);
        }
    };
    CourseStatusPage.prototype.triggerQuizStart = function () {
        if (typeof this.coursestatus != "undefined" && this.coursestatus.courseitems[this.current_i].meta.status < 2) {
            this.coursestatus.courseitems[this.current_i].meta.status = 2;
            this.courseStatusService.updateCourseStatus(this.coursestatus);
            var a = {
                'user_id': this.coursestatus.user_id,
                'type': 'quiz_start',
                'content': this.config.get_translation('user_quiz_started') + ' ' + this.coursestatus.courseitems[this.current_i].title,
                'item_id': this.coursestatus.course_id,
                'secondary_item_id': this.coursestatus.courseitems[this.current_i].id,
            };
            this.activityService.addActivity(a);
        }
        this.quizService.addQuizStarted(this.coursestatus.courseitems[this.current_i].id);
        this.coursestatus.courseitems[this.current_i].duration = this.quizService.getRemainingTimer(this.coursestatus.courseitems[this.current_i].id, this.coursestatus.courseitems[this.current_i].duration);
        return this.coursestatus.courseitems[this.current_i].meta.status;
        //send post request to update quiz status;
    };
    CourseStatusPage.prototype.onQuestionSlide = function () {
        var index = this.courseStatusItems.getActiveIndex();
        this.content.scrollToTop();
    };
    CourseStatusPage.prototype.showQuizControls = function () {
        if (typeof this.coursestatus != "undefined" && this.coursestatus.courseitems.length > this.current_i) {
            if (this.coursestatus.courseitems[this.current_i].type == 'quiz') {
                if ("meta" in this.coursestatus.courseitems[this.current_i]) {
                    if (this.coursestatus.courseitems[this.current_i].meta.status >= 1 && this.coursestatus.courseitems[this.current_i].meta.status < 3) {
                        this.quiz_start = false;
                        return 1;
                    }
                }
            }
        }
        return 0;
    };
    CourseStatusPage.prototype.triggerQuizSave = function () {
        this.saving = true;
        this.courseStatusService.saveQuiz(this.coursestatus.courseitems[this.current_i], this.user);
        this.quiz_saved = true;
        this.saving = false;
    };
    CourseStatusPage.prototype.triggerQuizSubmit = function () {
        if (this.coursestatus.courseitems[this.current_i] && this.coursestatus.courseitems[this.current_i].type == 'quiz') {
            var markedAll = true;
            var meta2 = this.coursestatus.courseitems[this.current_i].meta;
            if (meta2) {
                if (this.config.settings.force_mark_all_questions) {
                    for (var i = 0; i < meta2.questions.length; i++) {
                        if (meta2.questions[i].status <= 0) {
                            markedAll = false;
                            break;
                        }
                    }
                    if (markedAll) {
                        this.processTriggerQuizSubmit();
                    }
                    else {
                        var markquestionalert = this.alert.create({
                            title: this.config.get_translation('markallquestions'),
                            buttons: [this.config.get_translation('dismiss')]
                        });
                        markquestionalert.present();
                    }
                }
                else {
                    this.processTriggerQuizSubmit();
                }
            }
        }
    };
    CourseStatusPage.prototype.processTriggerQuizSubmit = function () {
        //Record activity
        var meta2 = this.coursestatus.courseitems[this.current_i].meta;
        var a = {
            'user_id': this.coursestatus.user_id,
            'type': 'quiz_submit',
            'content': this.config.get_translation('user_submitted_quiz') + ' ' + this.coursestatus.courseitems[this.current_i].title,
            'item_id': this.coursestatus.course_id,
            'secondary_item_id': this.coursestatus.courseitems[this.current_i].id,
        };
        this.activityService.addActivity(a);
        //Stop timer
        this.quizService.stopTimer(this.coursestatus.courseitems[this.current_i].id);
        this.quizService.removeQuizStarted(this.coursestatus.courseitems[this.current_i].id);
        //Show Result
        if (this.coursestatus.courseitems[this.current_i].meta.auto) {
            this.coursestatus.courseitems[this.current_i].meta.status = 4;
            this.quizService.addQuizStarted(this.coursestatus.courseitems[this.current_i].id);
            var a_1 = {
                'user_id': this.coursestatus.user_id,
                'type': 'quiz_evaluate',
                'content': this.config.get_translation('user_quiz_evaluated') + ' ' + this.coursestatus.courseitems[this.current_i].title,
                'item_id': this.coursestatus.course_id,
                'secondary_item_id': this.coursestatus.courseitems[this.current_i].id,
                'meta': this.coursestatus.courseitems[this.current_i].meta.questions
            };
            this.activityService.addActivity(a_1);
        }
        else {
            this.coursestatus.courseitems[this.current_i].meta.status = 3;
        }
        if (meta2.questions && meta2.questions.length) {
            for (var i = 0; i < meta2.questions.length; i++) {
                if (meta2.questions[i].status < 2) {
                    meta2.questions[i].status = 2;
                }
            }
        }
        this.courseStatusService.submitQuiz(this.coursestatus, this.current_i);
        this.coursestatus.courseitems[this.current_i].status = 1;
        this.courseStatusService.updateCourseStatus(this.coursestatus);
        this.get_progress();
    };
    CourseStatusPage.prototype.quizSaved = function () {
        return this.quiz_saved;
    };
    CourseStatusPage.prototype.endQuiz = function (quiz) {
        this.processTriggerQuizSubmit();
    };
    CourseStatusPage.prototype.selectedItem = function (i) {
        this.timelineactive = 0;
        this.courseStatusItems.slideTo(i, 500);
        this.content.scrollToTop();
    };
    CourseStatusPage.prototype.QuestionChecked = function (question, index) {
        this.quiz_saved = false;
        this.updateQuizMeta();
    };
    CourseStatusPage.prototype.increaseProgress = function (question, index) {
        var marked_count = 0;
        var meta = this.coursestatus.courseitems[this.current_i].meta;
        for (var i = 0; i < meta.questions.length; i++) {
            if (meta.questions[i].status > 0) {
                marked_count++;
            }
        }
        this.coursestatus.courseitems[this.current_i].meta.progress = Math.floor(100 * (marked_count / meta.questions.length));
    };
    CourseStatusPage.prototype.updateQuizMeta = function () {
        var meta = this.coursestatus.courseitems[this.current_i].meta;
        var marked_count = 0;
        var score = 0;
        for (var i = 0; i < meta.questions.length; i++) {
            if (meta.questions[i].status > 0) {
                marked_count++;
            }
            score = score + meta.questions[i].user_marks;
        }
        this.coursestatus.courseitems[this.current_i].meta.progress = Math.floor(100 * (marked_count / meta.questions.length));
        this.coursestatus.courseitems[this.current_i].meta.marks = score;
        this.courseStatusService.updateCourseStatus(this.coursestatus);
    };
    CourseStatusPage.prototype.retakeQuiz = function () {
        var _this = this;
        var loading = this.loadingCtrl.create({
            content: '<img src="assets/images/bubbles.svg">',
            duration: 15000,
            spinner: 'hide',
            showBackdrop: true,
        });
        loading.present();
        var index = this.courseStatusItems.getActiveIndex();
        this.courseStatusService.retakeQuizService(this.coursestatus, index).subscribe(function (res) {
            if (res) {
                if (res['status']) {
                    _this.config.removeFromTracker('statusitems', _this.coursestatus.courseitems[index].id);
                    _this.courseStatusService.getCourseStatusItem(_this.coursestatus, index).subscribe(function (res) {
                        _this.coursestatus = res;
                        _this.quizService.removeQuizStarted(_this.coursestatus.courseitems[index].id);
                        _this.checkQuizStatus();
                        _this.get_progress();
                        if (loading) {
                            loading.dismiss();
                        }
                    });
                    /*this.selectedItem(index);*/
                }
                else {
                    var toast = _this.toastCtrl.create({
                        message: res.message,
                        duration: 1000,
                        position: 'bottom'
                    });
                    toast.present();
                }
            }
            else {
                var toast = _this.toastCtrl.create({
                    message: res.message,
                    duration: 1000,
                    position: 'bottom'
                });
                toast.present();
            }
        });
    };
    CourseStatusPage.prototype.backToCourse = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_7__course_course__["a" /* CoursePage */], { 'id': this.coursestatus.course_id });
    };
    CourseStatusPage.prototype.reviewCourse = function () {
        var modal = this.modalCtrl.create(__WEBPACK_IMPORTED_MODULE_8__reviewcourse_reviewcourse__["a" /* ReviewCoursePage */], { 'course': this.course });
        modal.present();
    };
    CourseStatusPage.prototype.finishCourse = function () {
        var _this = this;
        if (this.coursestatus.progress >= 100) {
            var loading_4 = this.loadingCtrl.create({
                content: '<img src="assets/images/bubbles.svg">',
                duration: 15000,
                spinner: 'hide',
                showBackdrop: true,
            });
            this.storage.get('courses_' + this.coursestatus.user_id).then(function (courses) {
                if (courses.length) {
                    for (var k = 0; k < courses.length; k++) {
                        if (courses[k].id == _this.coursestatus.course_id) {
                            courses[k].user_progress = 100;
                            courses[k].user_status = 4;
                            //Update my courses
                            _this.storage.set('courses_' + _this.coursestatus.user_id, courses);
                        }
                    }
                }
            });
            this.courseStatusService.finishCourse(this.coursestatus).subscribe(function (res) {
                if (res['status']) {
                    _this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_9__profile_profile__["a" /* ProfilePage */]);
                    var options = {
                        title: _this.config.get_translation('finish_course'),
                        message: res['message'],
                        cssClass: 'finish_course_alert',
                        buttons: [
                            {
                                text: _this.config.get_translation('close'),
                                role: 'cancel',
                                handler: function () {
                                }
                            },
                        ]
                    };
                    var alert_1 = _this.alert.create(options);
                    alert_1.present();
                }
                loading_4.dismiss();
            });
        }
        else {
            var options = {
                title: this.config.get_translation('course_incomplete'),
                inputs: [],
                message: this.config.get_translation('finish_this_course'),
                buttons: [
                    {
                        text: this.config.get_translation('ok'),
                        role: 'cancel',
                        handler: function () {
                            console.log('Cancel clicked');
                        }
                    },
                ]
            };
            var alert_2 = this.alert.create(options);
            alert_2.present();
        }
    };
    CourseStatusPage.prototype.showQuizStart = function () {
        if (typeof this.coursestatus != "undefined" && this.coursestatus.courseitems[this.current_i]) {
            if (this.coursestatus.courseitems[this.current_i].type == 'quiz') {
                return !this.quizService.checkQuizStarted(this.coursestatus.courseitems[this.current_i].id);
            }
        }
        return false;
    };
    CourseStatusPage.prototype.onPlayerReady = function (api) {
        var _this = this;
        this.api = api;
        this.api.getDefaultMedia().subscriptions.ended.subscribe(function () {
            // Set the video to the beginning
            _this.api.getDefaultMedia().currentTime = 0;
            console.log('ended');
        });
    };
    CourseStatusPage.prototype.openIab = function (frameUrl) {
        this.iab.create(frameUrl, "_blank");
    };
    CourseStatusPage.prototype.openIabunit = function (frameUrl) {
        var _this = this;
        console.log(this.config.settings.units_in_inappbrowser);
        this.browser = this.iab.create(frameUrl + '&access_token=' + encodeURIComponent(this.config.settings.access_token), "_blank", "location=no");
        this.browser.insertCSS({ code: "header,footer{display:none;}" });
        this.browser.show();
        this.browser.on('exit').subscribe(function (event) {
            _this.browser.close();
        });
    };
    CourseStatusPage.prototype.isObject = function (obj) {
        return typeof obj === 'object';
    };
    CourseStatusPage.prototype.gettimediff = function (time) {
        var remaining_time = time - Math.floor(new Date().getTime() / 1000); //this.config.timestamp ;
        return remaining_time;
    };
    CourseStatusPage.prototype.doRefresh = function (refresher) {
        var _this = this;
        console.log('do refresher unit');
        var index = this.courseStatusItems.getActiveIndex();
        this.courseStatusService.doRefreshStatus(this.coursestatus, index).subscribe(function (res) {
            _this.coursestatus = res;
            _this.checkQuizStatus();
            _this.checkAssignmentStatus();
            refresher.complete();
        });
    };
    CourseStatusPage.prototype.download_video = function (url) {
        var _this = this;
        url = url[0];
        return new Promise(function (resolve) {
            _this.storage.get(url).then(function (res) {
                if (res) {
                    resolve(res);
                }
                else {
                    //capture name from URL
                    var name_1 = url.substring(url.lastIndexOf('/') + 1);
                    var extension = url.split('.').pop();
                    console.log(name_1);
                    console.log(extension);
                    var toast1 = _this.toastCtrl.create({
                        message: 'بداية التحميل',
                        duration: 5000,
                        position: 'top'
                    });
                    toast1.present();
                    ;
                    _this.fileTransfer.download((url), _this.storageDirectory + name_1).then(function (entry) {
                        var toast = _this.toastCtrl.create({
                            message: 'إنتهاء التحميل ',
                            duration: 10000,
                            position: 'bottom'
                        });
                        toast.present();
                    }, function (error) {
                        var toast = _this.toastCtrl.create({
                            message: error.code,
                            duration: 10000,
                            position: 'bottom'
                        });
                        toast.present();
                    });
                }
            });
        });
    };
    CourseStatusPage.prototype.getLocalAudio = function (url) {
        var _this = this;
        console.log(url);
        console.log('#####');
        return new Promise(function (resolve) {
            _this.storage.get(url).then(function (res) {
                console.log(res);
                console.log('*');
                if (res) {
                    resolve(res);
                }
                else {
                    //capture name from URL
                    var name_2 = url.substring(url.lastIndexOf('/') + 1);
                    var extension = url.split('.').pop();
                    console.log(name_2);
                    _this.fileTransfer.download(url, _this.file.dataDirectory + name_2).then(function (entry) {
                        console.log('download complete: ' + entry.toURL());
                        console.dir(entry.bypassSecurityTrustResourceUrl);
                        _this.storage.set(url, entry.toURL());
                        resolve(entry.toURL());
                    }),
                        function (error) {
                            console.log("download error source " + error.source);
                            console.log("download error target " + error.target);
                            console.log("download error code" + error.code);
                        },
                        false, {
                        headers: {
                            "Authorization": "Basic dGVzdHVzZXJuYW1lOnRlc3RwYXNzd29yZA=="
                        }
                    };
                }
            });
        });
    };
    CourseStatusPage.prototype.get_audio = function (url) {
        var $this = this;
        this.getLocalAudio(url).then(function (res) {
            $this.playAudio(res);
            console.log('get_audio');
            console.log(res);
        });
    };
    CourseStatusPage.prototype.playAudio = function (toURL) {
        console.log('playAudio');
        this.audio = new Audio();
        this.audio.src = toURL;
        this.audio.load();
        this.audio.play();
    };
    CourseStatusPage.prototype.pauseAudio = function () {
        if (this.audio) {
            console.log('##');
            this.audio.pause();
        }
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('CourseStatusItems'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["p" /* Slides */])
    ], CourseStatusPage.prototype, "courseStatusItems", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('QuizQuestions'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["p" /* Slides */])
    ], CourseStatusPage.prototype, "quizQuestions", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["d" /* Content */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["d" /* Content */])
    ], CourseStatusPage.prototype, "content", void 0);
    CourseStatusPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-course-status',template:/*ion-inline-start:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\pages\course-status\course-status.html"*/'<ion-header>\n    <ion-navbar  color="transparent" >\n        <ion-buttons start>\n            <button ion-button menuToggle>\n                <ion-icon name="md-menu"></ion-icon>\n            </button>\n        </ion-buttons>\n        <ion-title>\n            {{(course && course.name)?course.name:\'\'}}\n            <span *ngIf="course.instructor && course.instructor.name">\n                {{course.instructor.name}}\n            </span> \n        </ion-title>\n            <ion-buttons end>\n                <button ion-button (click)="openSearch()">\n                    <ion-icon name="md-search"></ion-icon>\n                </button>\n            </ion-buttons>\n            <ion-buttons end>\n                <button ion-button [navPush]="profilePage" [navParams]="userdata">\n                    <ion-icon name="md-contact" *ngIf="!user"></ion-icon>\n                    <img *ngIf="user" [src]="user?.avatar">\n                </button>\n            </ion-buttons>\n    </ion-navbar>\n</ion-header>\n\n<ion-content>\n\n\n    <div id="toggleTimeline">\n        <button (click)="toggleTimeline()" class="main" icon-only fab fab-floating ion-fab color="orange" absolute-drag startLeft="40" startTop="200">\n            <ion-icon name="md-menu"></ion-icon>\n        </button>\n    </div>\n    <ion-refresher (ionRefresh)="doRefresh($event)" *ngIf="!timelineactive">\n        <ion-refresher-content pullingText="{{config.get_translation(\'pull_to_refresh\')}}"\n        pullingIcon="arrow-dropdown"\n        refreshingSpinner="circles"\n        refreshingText="{{config.get_translation(\'refreshing\')}}"></ion-refresher-content>\n    </ion-refresher>\n\n\n    <div id="toggleExtras">\n        <button ion-button icon-only class="quiz_button" *ngIf="showQuizStart()" (click)="triggerQuizStart()">\n            <ion-icon name="md-play"></ion-icon> \n        </button>\n\n        <div *ngIf="showQuizControls()">\n            <button class="quiz_button" ion-button icon-only (click)="triggerQuizSave()">\n                <ion-icon *ngIf="!saving" name="md-cloud-done"></ion-icon>\n                <ion-spinner *ngIf="saving" name="lines" class="spinner-calm"></ion-spinner>\n            </button>\n            <button class="quiz_button" ion-button icon-only *ngIf="quizSaved()" (click)="triggerQuizSubmit()">\n                <ion-icon name="md-done-all"></ion-icon>\n            </button>\n        </div>\n    </div>\n\n    <div id="course_timeline" [ngClass]="{active: timelineactive > 0}">\n        <progress-bar *ngIf="coursestatus.progress && coursestatus.progress > -1" [progress]="coursestatus.progress"></progress-bar>\n        <div id="curriculum_timeline">\n            <ion-list>\n                <ion-item *ngFor="let item of coursestatus.courseitems; let i=index;" (click)="selectedItem(i)" [class]="item.type">\n                    <strong><strong [innerHtml]=item.title></strong>\n                        <span [ngClass]="{ \'active\': (coursestatus.current_unit_key === i), \'done\': (item.status > 0) }"></span>\n                    </strong>\n                </ion-item>\n            </ion-list>\n        </div> \n        <div id="course_buttons">\n            <button ion-button outline full color="white" (click)="backToCourse()">{{config.get_translation(\'back_to_course\')}}</button>\n            <button ion-button outline full color="white" (click)="reviewCourse()">{{config.get_translation(\'review_course\')}}</button>\n            <button ion-button outline full color="white" *ngIf="coursestatus.status < 3" (click)="finishCourse()">{{config.get_translation(\'finish_course\')}}</button>\n        </div>\n\n      \n  <!--       <div *ngIf="coursestatus && coursestatus.package">\n            1\n            <div *ngIf="coursestatus.package.path">\n                2  {{coursestatus.package.path}}\n                <iframe width="100%" height="100%" [src]="coursestatus.package.path | safeUrl" frameborder="0" allowfullscreen></iframe>\n            </div>\n        </div>  -->\n    </div>\n\n    <div id="course_status_content">\n        <ion-slides dir="{{config.settings.rtl ? \'rtl\' : undefined }}" id="course_status_items" #CourseStatusItems (ionSlideDidChange)="onSlideChanged()" autoHeight>\n\n\n            <ion-slide *ngFor="let item of coursestatus.courseitems; let i=index;">\n\n\n                <h3 class="heading">\n                    <span [innerHtml]="item.title"></span>\n                    <friendlytime [time]="item.duration" *ngIf="item.type == \'unit\'"></friendlytime>\n                    <friendlytime [time]=getsectionduration(i) *ngIf="item.type == \'section\'"></friendlytime>\n                    <span class="section_heading" [innerHtml]="getsection(i)" *ngIf="item.type != \'section\'"></span>\n                    <span  *ngIf="(item.type == \'unit\') && (item.status > 0)" class="complete">{{config.get_translation(\'completed\')}}</span>\n         \n\n                    <ion-grid *ngIf="(item.type == \'quiz\')">\n                        <ion-row>\n                            <ion-col>\n                                <div class="user_progress">\n                                    <p>{{config.get_translation(\'progress\')}}</p>\n                                    <span *ngIf="item && item.meta && item.meta.progress"><progress-bar [progress]="item.meta.progress"></progress-bar></span>\n                                </div> \n                            </ion-col>\n                            <ion-col>\n                                <div class="user_marks">\n                                    <p>{{config.get_translation(\'score\')}}</p>\n                                    <span *ngIf="item.meta.status > 3">{{item.meta.marks}}</span> / <strong>{{item.meta.max}}</strong> \n                                </div>\n                            </ion-col>\n                            <ion-col *ngIf="item.meta.status < 3">\n                                <div class="user_timer">\n                                    <p>{{config.get_translation(\'time\')}}</p>\n                                    <timer [time]="item.duration" [quiz]="item.id" *ngIf="item.duration < 9999" [start]="quizService.checkQuizStarted(item.id)" \n                                    (QuizEnded)="endQuiz($event)"></timer>\n                                </div>\n                            </ion-col>\n                        </ion-row>\n                    </ion-grid>\n                </h3>\n\n\n\n     \n      \n\n                <div *ngIf="config.settings.units_in_inappbrowser && item.type == \'unit\' && item.meta.link && item.meta.link.length">\n                    <button ion-button (click)="openIabunit(item.meta.link)" [innerHtml]="config.get_translation(\'open_in_new_window\')"></button>\n                </div>\n\n                <div *ngIf="item.type == \'unit\' && item.meta.video">\n                    \n                    <vg-player (onPlayerReady)="onPlayerReady($event)" *ngFor="let video of item.meta.video" vg-responsive="true">\n                        <vg-controls [vgFor]="my-video" [vgAutohide]="true" [vgAutohideTime]="5">\n\n                            <vg-play-pause [vgFor]="my-video"></vg-play-pause>\n                            <vg-playback-button></vg-playback-button>\n\n                            <vg-time-display [vgFor]="my-video" vgProperty="current" vgFormat="mm:ss"></vg-time-display>\n                            <vg-scrub-bar [vgFor]="my-video">\n                                <vg-scrub-bar-current-time></vg-scrub-bar-current-time>\n                            </vg-scrub-bar>\n                            <vg-volume [vgFor]="my-video"></vg-volume>\n                            <vg-fullscreen></vg-fullscreen>\n                            <vg-overlay-play></vg-overlay-play>\n                        </vg-controls>\n                        <video #myMedia\n                               [vgMedia]="myMedia"\n                               id="my-video"\n                               [src]="video"\n                               type="video/mp4">\n                        </video>\n                    </vg-player>\n                </div> \n\n                <div *ngIf="item.type == \'unit\' && item.meta.audio" class="audio-container">\n                <div *ngFor="let audio of item.meta.audio">\n                    <vg-player style="height: 50px;" (onPlayerReady)="onPlayerReady($event)"  vg-responsive="true">\n                            <vg-controls [vgAutohide]="false">\n                                <vg-play-pause></vg-play-pause>\n                                <vg-playback-button></vg-playback-button>\n\n                                <vg-time-display vgProperty="current" vgFormat="mm:ss"></vg-time-display>\n\n                                <vg-scrub-bar>\n                                    <vg-scrub-bar-current-time></vg-scrub-bar-current-time>\n                                </vg-scrub-bar>\n\n                                <vg-time-display vgProperty="total" vgFormat="mm:ss"></vg-time-display>\n\n                                <vg-mute></vg-mute>\n\n                            </vg-controls>\n                                                                                                                                                                                                                                            \n                            <audio #media [vgMedia]="media" id="myAudio" >\n                                <source [src]="audio" type="audio/mp3">\n                            </audio>\n                        </vg-player>\n                        <button ion-button icon-only clear (click)="download_video(item.meta.audio)">تحميل من هنا</button>\n                        \n\n                               \n                </div>   \n\n                \n                </div> \n\n\n                <div *ngIf="item.type == \'unit\' && item.meta.iframes && item.meta.iframes.length">\n                    <div class="course_item_iframe" *ngFor="let iframeUrl of item.meta.iframes">\n                        <div *ngIf="!((iframeUrl.shortcode) &&( iframeUrl.shortcode==\'wplms_bbb\'))" [class]="iframeUrl.shortcode">\n                        <div *ngIf="!((iframeUrl.shortcode) &&( iframeUrl.shortcode==\'videotube\'))" [class]="iframeUrl.shortcode">\n\n                            <iframe *ngIf="!isObject(iframeUrl)" width="100%" height="100%" [src]="iframeUrl | safeUrl" frameborder="0" allowfullscreen></iframe>\n                            <button *ngIf="!isObject(iframeUrl)" ion-button (click)="openIab(iframeUrl)" [innerHtml]="config.get_translation(\'open_in_new_window\')"></button>\n\n                            <div *ngIf="isObject(iframeUrl)" [class]="iframeUrl.shortcode">\n                                <iframe width="100%" height="100%" [src]="iframeUrl.value | safeUrl" frameborder="0" allowfullscreen></iframe>\n                            </div>\n                        </div>\n                        </div>    \n                         <div *ngIf="(iframeUrl.shortcode) &&( iframeUrl.shortcode==\'wplms_bbb\')" [class]="iframeUrl.shortcode">\n                             \n                                        \n                        <button *ngIf="(iframeUrl.status==1)" ion-button (click)="openIab(iframeUrl.value)" [innerHtml]="config.get_translation(\'bbb_buuton\')"></button>\n                        <span  *ngIf="(iframeUrl.status==0)"   [innerHtml]="iframeUrl.value"></span>\n\n                        </div>\n                           <div *ngIf="(iframeUrl.shortcode) && iframeUrl.value &&( iframeUrl.shortcode==\'videotube\')" [class]="iframeUrl.shortcode">\n                             \n                              <iframe *ngIf="!isObject(iframeUrl)" width="100%" height="100%" [src]="iframeUrl | safeUrl" frameborder="0" allowfullscreen></iframe>     <div *ngIf="isObject(iframeUrl)" [class]="iframeUrl.shortcode">\n                            <iframe width="100%" height="100%" [src]="iframeUrl.value | safeUrl" frameborder="0" allowfullscreen></iframe>\n                              <iframe width="100%" height="100%" [src]="iframeUrl.value | safeUrl" frameborder="0" allowfullscreen></iframe>\n\n                                 <button ion-button icon-only clear (click)="download_video(iframeUrl.value)">download from here</button>\n                            \n\n                            </div>        \n                       \n                        </div>\n\n                    </div>\n                </div>\n                  \n\n                <div id="maincontent" class="pinchzoom" *ngIf="item.type == \'unit\'" [innerHtml]="item.content | safeHtml" padding></div>\n                <div id="unit_attachments" *ngIf="item.type == \'unit\' && item.meta && item.meta.attachments && item.meta.attachments.length">\n                    <h4 [innerHtml]="config.get_translation(\'unit_attachments\')"></h4>\n                    <ul>\n                        <!--<li *ngFor="let attachments of item.meta.attachments">\n                            <a [href]="attachments.link">{{attachments.name}}</a>\n                        </li>-->\n                        <li>\n                            <p> hello</p>\n                        </li>\n                    </ul> \n                </div> \n\n\n\n                <div  id="unit_attachments" *ngIf="item.type == \'unit\' && item.meta && item.meta.assignments && item.meta.assignments.length">\n                   <h4 [innerHtml]="config.get_translation(\'all_assignment\')"></h4>\n                    <ul > \n                        <li *ngFor="let assignment of upload_assignment.assignments"  (click)="loadAssignment(assignment,coursestatus.courseitems[this.current_i].id)">\n                             \n                            <strong [innerHtml]="assignment.title"></strong> \n\n                            <a class="button" *ngIf="assignment.flag==0">\n                                <span  class="assignment_max_marks">{{config.get_translation(\'start_now\')}}</span>  \n                            </a>\n\n                            <span class="assignment_max_marks" *ngIf="assignment.flag == 0 || assignment.flag == 1 " >\n                                <span >{{assignment.max_marks}}</span>\n                            </span>\n\n                            <span class="assignment_max_marks" *ngIf="assignment.flag == 2">\n                                <span>{{assignment.status}} / {{assignment.max_marks}}</span>\n                            </span>\n\n                            <span class="assignment_status" *ngIf="assignment.flag == 1"> \n                                {{upload_assignment.toFriendlyTime(gettimediff((assignment.started+assignment.duration)))}}\n                            </span>\n                        \n                        \n                        </li>\n                    </ul>\n                    \n                </div>\n  \n                <button *ngIf="item.meta.comments >= 0" ion-button clear [navPush]="unitCommentPage" [navParams]="coursestatus.courseitems[this.current_i].id"><ion-icon name="md-send"></ion-icon><span [innerHtml]="config.get_translation(\'show_notes\')"></span> ({{item.meta.comments}})</button>\n\n                <div *ngIf="!item.meta.access && item.type == \'unit\'">\n                    <button ion-button icon-only clear (click)="forceReload()"><ion-icon name="md-refresh"></ion-icon></button>\n                </div>\n                <div *ngIf="!item.meta.access && item.type == \'quiz\' && !item.max">\n                    <button ion-button icon-only clear (click)="forceReload()"><ion-icon name="md-refresh"></ion-icon></button>\n                </div>\n                <div id="maincontent" *ngIf="item.type == \'section\'" padding>\n                    <ul class="sectionunits">\n                        <li *ngFor="let sectionitem of coursestatus.courseitems;let key=index;" (click)="selectedItem(key)">\n                            <div *ngIf="key > i && sectionitem.type != \'section\' && in_section(key,i)" [ngClass]="{active:sectionitem.status > 0}">\n                                <span [innerHtml]="sectionitem.title"></span>\n                                <friendlytime [time]="sectionitem.duration"></friendlytime>\n                            </div>\n                        </li>\n                    </ul>\n                </div>\n\n                <div id="maincontent" *ngIf="item.type == \'quiz\'" padding>\n                    \n                    <div *ngIf="item.meta.status <= 1 " [innerHtml]="item.content"></div>\n                    \n                    <div *ngIf="item.meta.status > 1 && item.meta.status < 3">\n                        <ion-slides dir="{{config.settings.rtl ? \'rtl\' : undefined }}" id="quiz_questions" #QuizQuestions (ionSlideDidChange)="onQuestionSlide()" autoHeight pager paginationType="progress">\n                            <ion-slide *ngFor="let question of item.meta.questions;let q=index;">\n                                <div class="quiz_question {{question.status}}">\n                                    <question [question]="question" [display]="0" (answerChecked)="QuestionChecked($event,q)"\n                                    (markedQuestion)="increaseProgress($event,q)"> </question>\n                                </div>\n                            </ion-slide> \n                        </ion-slides>\n                    </div>\n\n                    <div *ngIf="item.meta.status == 3">\n                        <h3 [innerHtml]="config.get_translation(\'awaiting_results\')"></h3>\n                        <div [innerHtml]="item.meta.completion_message"></div>\n                    </div>\n                    <div *ngIf="item.meta.status > 3">\n                        <h3 [innerHtml]="config.get_translation(\'quiz_results\')"></h3>\n                        <div *ngIf="item.meta.auto">\n                            <ion-card *ngFor="let question of item.meta.questions">\n                                <question [question]="question" [display]="1"></question>\n                            </ion-card>\n                        </div>\n                        <div *ngIf="item.meta.retakes > 0 && !showQuizStart()">\n                            <button ion-button class="retake_quiz" (click)="retakeQuiz()" [innerHtml]="\n                            config.get_translation(\'retake_quiz\') + \n                            \'<span> ( \' +item.meta.retakes+\' \'+config.get_translation(\'retakes_remaining\')+\')</span>\'\n                            " ></button>\n                        </div>\n                    </div>\n                </div>\n            </ion-slide>\n        </ion-slides>\n    </div>\n</ion-content>\n'/*ion-inline-end:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\pages\course-status\course-status.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* ModalController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */],
            __WEBPACK_IMPORTED_MODULE_11__services_users__["a" /* UserService */],
            __WEBPACK_IMPORTED_MODULE_12__services_status__["a" /* CourseStatusService */],
            __WEBPACK_IMPORTED_MODULE_13__services_config__["a" /* ConfigService */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* ToastController */],
            __WEBPACK_IMPORTED_MODULE_16__ionic_storage__["b" /* Storage */],
            __WEBPACK_IMPORTED_MODULE_10__services_course__["a" /* CourseService */],
            __WEBPACK_IMPORTED_MODULE_14__services_quiz__["a" /* QuizService */],
            __WEBPACK_IMPORTED_MODULE_15__services_activity__["a" /* ActivityService */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* LoadingController */],
            __WEBPACK_IMPORTED_MODULE_2__angular_platform_browser__["c" /* DomSanitizer */],
            __WEBPACK_IMPORTED_MODULE_19__services_upload_assignment__["a" /* UploadAssignmentService */],
            __WEBPACK_IMPORTED_MODULE_3__ionic_native_in_app_browser__["a" /* InAppBrowser */],
            __WEBPACK_IMPORTED_MODULE_4__ionic_native_file_transfer__["a" /* FileTransfer */],
            __WEBPACK_IMPORTED_MODULE_5__ionic_native_file__["a" /* File */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["o" /* Platform */],
            __WEBPACK_IMPORTED_MODULE_4__ionic_native_file_transfer__["b" /* FileTransferObject */]])
    ], CourseStatusPage);
    return CourseStatusPage;
}());

//# sourceMappingURL=course-status.js.map

/***/ }),

/***/ 117:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return BlogService; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ionic_storage__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__config__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_Observable__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_Observable__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






/**
 * This service is used for displaying blog and posts
 */
var BlogService = /** @class */ (function () {
    function BlogService(http, storage, config) {
        this.http = http;
        this.storage = storage;
        this.config = config;
        this.paged = 1;
        this.posts = [];
        this.fullposts = [];
    }
    /**
    * Get Posts from Blog, if cached show cached posts
    * @return {Observable}
    */
    BlogService.prototype.getPosts = function (paged) {
        //console.log('PAGED '+paged+' Loaded Posts = '+this.posts.length+' Tacker Posts ='+this.config.trackComponents('blog'));
        var _this = this;
        if (paged === void 0) { paged = 1; }
        if (this.posts && this.config.trackComponents('allposts') >= paged * this.config.settings.per_view) {
            if (this.posts.length >= paged * this.config.settings.per_view) {
                return __WEBPACK_IMPORTED_MODULE_5_rxjs_Observable__["Observable"].of(this.posts);
            }
            else {
                console.log('fetching blog psots from localstorage)');
                this.allpostssobservable = __WEBPACK_IMPORTED_MODULE_5_rxjs_Observable__["Observable"].fromPromise(this.storage.get('posts').then(function (posts) {
                    if (posts) {
                        console.log(posts);
                        _this.posts = posts;
                    }
                }));
            }
        }
        else {
            var url = this.config.baseUrl + "blog/?per_page=" + this.config.settings.per_view + '&page=' + paged;
            if (this.allpostssobservable) {
                return this.allpostssobservable;
            }
            else {
                this.allpostssobservable = this.http.get(url).map(function (res) {
                    _this.allpostssobservable = null;
                    res = res.json();
                    console.log('FETCHING RES');
                    console.log(res);
                    if (res && Array.isArray(res)) {
                        if (Array.isArray(_this.posts)) {
                            _this.mergePosts(_this.posts, res);
                        }
                        else {
                            _this.posts = res;
                        }
                        console.log("posts stored");
                        _this.storage.set('posts', _this.posts);
                        _this.config.updateComponents('allposts', _this.posts.length);
                        return _this.posts;
                    }
                });
            }
        }
        return this.allpostssobservable;
    };
    /**
    * Merge Posts
    * @return {array}
    */
    BlogService.prototype.mergePosts = function (postsA, postsB) {
        for (var i = 0; i < postsB.length; i++) {
            var flag = 1;
            for (var j = 0; j < postsA.length; j++) {
                if (postsB[i].id == postsA[j].id) {
                    flag = 0;
                }
            }
            if (flag) {
                postsA.push(postsB[i]);
            }
        }
        return postsA;
    };
    /**
    * Get single post from blog
    * @return {Observable}
    */
    BlogService.prototype.getPost = function (postID) {
        var _this = this;
        var allp = this.config.trackComponents('fullposts');
        if (allp && allp.indexOf(postID) != -1) {
            var flag = 1;
            if (Array.isArray(this.fullposts)) {
                if (this.fullposts.length) {
                    for (var i = 0; i < this.fullposts.length; i++) {
                        if (this.fullposts[i].id == postID) {
                            flag = 0;
                            return __WEBPACK_IMPORTED_MODULE_5_rxjs_Observable__["Observable"].of(this.fullposts[i]); //return if already cached
                        }
                    }
                }
            }
            if (flag) {
                console.log('Storage Full course');
                this.postobservable = __WEBPACK_IMPORTED_MODULE_5_rxjs_Observable__["Observable"].fromPromise(this.storage.get('fullpost_' + postID).then(function (fullpost) {
                    if (fullpost) {
                        _this.fullposts.push(fullpost);
                        return fullpost;
                    }
                }));
            }
        }
        else {
            var url = this.config.baseUrl + "blog/" + postID;
            if (this.postobservable) {
                return this.postobservable;
            }
            else {
                this.postobservable = this.http.get(url).map(function (res) {
                    _this.postobservable = null;
                    res = res.json();
                    console.log('FETCHING RES');
                    console.log(res);
                    if (res) {
                        if (Array.isArray(_this.fullposts)) {
                            _this.mergePosts(_this.fullposts, [res]);
                        }
                        else {
                            _this.fullposts = [res];
                        }
                        _this.storage.set('fullposts', _this.fullposts);
                        //this.config.updateComponents('blog',this.posts.length);
                    }
                    return res;
                });
            }
        }
        return this.postobservable;
    };
    BlogService = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Http */],
            __WEBPACK_IMPORTED_MODULE_2__ionic_storage__["b" /* Storage */],
            __WEBPACK_IMPORTED_MODULE_3__config__["a" /* ConfigService */]])
    ], BlogService);
    return BlogService;
}());

//# sourceMappingURL=blog.js.map

/***/ }),

/***/ 118:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return InstructorPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__directory_directory__ = __webpack_require__(72);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__services_config__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__services_course__ = __webpack_require__(49);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__services_users__ = __webpack_require__(29);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






var InstructorPage = /** @class */ (function () {
    function InstructorPage(navCtrl, navParams, viewCtrl, config, courseService, userService) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.viewCtrl = viewCtrl;
        this.config = config;
        this.courseService = courseService;
        this.userService = userService;
        this.fullinstructor = {
            'bio': '',
            'about': [],
            'social': [],
            'courses': []
        };
        this.directoryPage = __WEBPACK_IMPORTED_MODULE_2__directory_directory__["a" /* DirectoryPage */];
    }
    InstructorPage.prototype.ngOnInit = function () {
        var _this = this;
        console.log(this.instructor);
        this.instructor = this.navParams.data;
        this.instructortabs = [
            { 'key': 'profile', 'label': this.config.get_translation('profile') },
            { 'key': 'about', 'label': this.config.get_translation('about') },
            { 'key': 'courses', 'label': this.config.get_translation('courses') }
        ];
        if (typeof this.instructor.id !== 'undefined') {
            this.userService.getInstructor(this.instructor.id).subscribe(function (res) {
                console.log(res);
                _this.fullinstructor = res;
            });
        }
        //Fetch instructor profile
    };
    InstructorPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad Instructor');
    };
    InstructorPage.prototype.onClose = function () {
        this.viewCtrl.dismiss();
    };
    InstructorPage.prototype.selectedTab = function (index) {
        this.instructorSlides.slideTo(index, 500);
    };
    InstructorPage.prototype.onTabChanged = function () {
        var index = this.instructorTabs.getActiveIndex();
        this.instructorSlides.slideTo(index, 500);
    };
    InstructorPage.prototype.onSlideChanged = function () {
        var index = this.instructorSlides.getActiveIndex();
        this.instructorTabs.slideTo(index, 500);
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('InstructorTabs'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["p" /* Slides */])
    ], InstructorPage.prototype, "instructorTabs", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('InstructorSlides'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["p" /* Slides */])
    ], InstructorPage.prototype, "instructorSlides", void 0);
    InstructorPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-instructor',template:/*ion-inline-start:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\pages\instructor\instructor.html"*/'<ion-header>\n  	<ion-buttons start>\n        <button ion-button icon-only (click)="onClose()">\n            <ion-icon name="md-arrow-back"></ion-icon>\n        </button>\n    </ion-buttons>\n</ion-header>\n<ion-content>\n<ion-grid>\n    <ion-row>\n        <ion-col col-12 col-sm-4>\n            <div class="instructor_main">\n            	<div class="instructor_image">\n            		<img [src]="instructor.avatar">\n            	</div>\n\n            	<div class="instructor_content">\n            		<h3 [innerHtml]="instructor.name"></h3>\n            		<p *ngIf="instructor.sub != \'false\'" [innerHtml]="instructor.sub"></p>\n            	</div>\n            </div>\n        </ion-col>\n        <ion-col col-12 col-sm-8>\n        <ion-slides dir="{{config.settings.rtl ? \'rtl\' : undefined }}" #InstructorTabs id="instructortabs" spaceBetween="0" slidesPerView="3" (ionSlideDidChange)="onTabChanged()">\n            <ion-slide *ngFor="let tab of instructortabs; let i=index;">\n              <button ion-button clear (click)="selectedTab(i)">\n                {{tab.label}}\n              </button>\n            </ion-slide>\n        </ion-slides>\n         <div id="instructorcontent" padding>\n            <ion-slides id="instructorslides" #InstructorSlides (ionSlideDidChange)="onSlideChanged()" dir="{{config.settings.rtl ? \'rtl\' : undefined }}">\n                <ion-slide *ngFor="let tab of instructortabs; let i=index;">\n                    <h3 class="heading"><span>{{tab.label}}</span></h3>\n                    <div *ngIf="tab.key == \'profile\'">\n                    	<ion-list>\n                    		<ion-item>\n                    			<ion-label>Number of Students</ion-label>\n        						<strong>{{instructor.student_count}}</strong>\n                    		</ion-item>\n                    		<ion-item>\n                    			<ion-label>Number of Courses</ion-label>\n        						<strong>{{instructor.course_count}}</strong>\n                    		</ion-item>\n                    		<ion-item>\n                    			<ion-label>Cumulative Average Rating</ion-label>\n                    			<star-rating [rating]="instructor.average_rating" align-right></star-rating>\n                    		</ion-item>\n                    	</ion-list >\n                    	<ion-grid>\n                    		<ion-row>\n                    			<ion-col>\n        							<ion-icon name="md-contacts"></ion-icon>\n        							<strong>{{instructor.student_count}}</strong>\n        						</ion-col>\n        						<ion-col>\n        							<ion-icon name="md-book"></ion-icon>\n        							<strong>{{instructor.course_count}}</strong>\n        						</ion-col>\n        						<ion-col>\n        							<star-rating [rating]="instructor.average_rating" align-right></star-rating>\n        						</ion-col>\n                    		</ion-row>\n                    		<ion-row>\n                    			<ion-col>\n                    				<div *ngIf="fullinstructor.bio" [innerHtml]="fullinstructor.bio"></div>\n                    			</ion-col>\n                    		</ion-row>\n                    		<ion-row>\n                    			<div class="social-icons" *ngIf="fullinstructor.social.length">\n                    				<ion-col *ngFor="let icons of fullinstructor.social" >\n                						<a [href]="icons.value" [innerHtml]="icons.name" *ngIf="icons.value != false"></a>\n                    				</ion-col>\n                    			</div>\n                    		</ion-row>\n                    	</ion-grid>\n                    </div>\n                    <div *ngIf="tab.key == \'about\'">\n                    	<ion-list *ngIf="fullinstructor.about.length">\n                    		<ion-item *ngFor="let field of fullinstructor.about">\n                    			<div *ngIf="field.value != \'false\'">\n        	            			<ion-col [innerHtml]="field.name"></ion-col>\n        	            			<ion-col [innerHtml]="field.value"></ion-col>\n                    			</div>\n                    		</ion-item>\n                    	</ion-list>\n                    </div>\n                    <div *ngIf="tab.key == \'courses\'">\n                    	<ion-slides dir="{{config.settings.rtl ? \'rtl\' : undefined }}" pager slidesPerView="2">\n                    		<ion-slide *ngFor="let course of fullinstructor.courses">\n                                <coursecard [course]="course.data"></coursecard>\n                    		</ion-slide>\n                    	</ion-slides>\n                    	<button ion-button block full [navPush]="directoryPage" [navParams]="instructor" [innerHtml]="config.get_translation(\'get_all_course_by_instructor\')"></button>\n                    </div>\n                </ion-slide>\n            </ion-slides>\n        </div>\n        </ion-col>\n    </ion-row>\n</ion-grid>\n\n</ion-content>\n'/*ion-inline-end:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\pages\instructor\instructor.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["r" /* ViewController */],
            __WEBPACK_IMPORTED_MODULE_3__services_config__["a" /* ConfigService */],
            __WEBPACK_IMPORTED_MODULE_4__services_course__["a" /* CourseService */],
            __WEBPACK_IMPORTED_MODULE_5__services_users__["a" /* UserService */]])
    ], InstructorPage);
    return InstructorPage;
}());

//# sourceMappingURL=instructor.js.map

/***/ }),

/***/ 120:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return NotesDiscussionService; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_ionic_angular__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_map__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_Observable__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_Observable__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_observable_of__ = __webpack_require__(40);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_observable_of___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_add_observable_of__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_observable_fromPromise__ = __webpack_require__(60);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_observable_fromPromise___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_rxjs_add_observable_fromPromise__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_add_operator_toPromise__ = __webpack_require__(59);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_add_operator_toPromise___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_rxjs_add_operator_toPromise__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__authentication__ = __webpack_require__(33);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__config__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__ionic_storage__ = __webpack_require__(11);
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

// import { NavController, NavParams, ModalController,LoadingController } from 'ionic-angular';
// import { Component,OnInit } from '@angular/core';










var NotesDiscussionService = /** @class */ (function () {
    function NotesDiscussionService(http, platform, storage, toastCtrl, auth, config) {
        this.http = http;
        this.platform = platform;
        this.storage = storage;
        this.toastCtrl = toastCtrl;
        this.auth = auth;
        this.config = config;
        this.comments = [];
        this.lastpushed = 0;
        this.paged = 0;
        this.res_check = true;
        this.baseUrl = this.config.baseUrl;
    }
    NotesDiscussionService.prototype.getComments = function (unit_id, force_paged) {
        var _this = this;
        if (force_paged === void 0) { force_paged = -1; }
        var loaded_comments = this.config.trackComponents('comments');
        if (force_paged < 0 && typeof loaded_comments !== 'undefined' && loaded_comments.findIndex(function (item) { return item === unit_id; }) >= 0) {
            return __WEBPACK_IMPORTED_MODULE_4_rxjs_Observable__["Observable"].fromPromise(this.storage.get('comments_' + unit_id).then(function (comments) {
                if (comments) {
                    _this.comments = comments;
                    var total_1 = 1;
                    //IDIOT reduce does not work
                    _this.comments.reduce(function (acc, item) { if (parseInt(item.comment_parent) === 0) {
                        total_1++;
                        acc++;
                    } return acc; });
                    console.log(total_1);
                    _this.paged = Math.floor((total_1) / _this.config.per_page_comment);
                }
                return _this.comments;
            }));
        }
        else {
            if (force_paged >= 0) {
                this.paged = force_paged;
            }
            var opt = this.auth.getUserAuthorizationHeaders();
            this.commentsobservable = this.http.get(this.config.baseUrl + "user/unitcomments/" + unit_id + "/?page=" + this.paged + "&per_page=" + this.config.per_page_comment, opt)
                .map(function (response) {
                var body = response.json();
                if (body && body.length) {
                    if (force_paged == 0) {
                        //replce on force refresh
                        _this.comments = body;
                    }
                    else {
                        console.log('appending');
                        body.map(function (comment) {
                            console.log('#1');
                            if (_this.comments.findIndex(function (c) { return c.comment_ID === comment.comment_ID; }) < 0) {
                                //add only unique comments
                                _this.comments.push(comment);
                            }
                        });
                    }
                    var total_2 = 1;
                    _this.comments.reduce(function (acc, item) { if (parseInt(item.comment_parent) === 0) {
                        total_2++;
                        acc++;
                    } return acc; });
                    _this.paged = Math.floor((total_2) / _this.config.per_page_comment);
                    console.log('from service ' + _this.paged);
                    _this.storage.set('comments_' + unit_id, _this.comments);
                    _this.config.addToTracker('comments', unit_id);
                }
                return body;
            });
            return this.commentsobservable;
        }
    };
    NotesDiscussionService.prototype.parse_index_reply = function (comments, comment_id, new_comment) {
        for (var i = 0; i < comments.length; i++) {
            if (comments[i].comment_ID == comment_id) {
                if (comments[i].child && comments[i].child.length) {
                    console.log('push 1');
                    comments[i].child.unshift(new_comment);
                }
                else {
                    console.log('push 2');
                    comments[i].child = [];
                    comments[i].child.push(new_comment);
                }
            }
            if (comments[i].child && comments[i].child.length) {
                this.parse_index_reply(comments[i].child, comment_id, new_comment);
            }
        }
    };
    NotesDiscussionService.prototype.parse_index_edit = function (comments, comment_id, new_comment) {
        for (var i = 0; i < comments.length; i++) {
            if (comments[i].comment_ID == comment_id) {
                comments[i] = new_comment;
            }
            if (comments[i].child && comments[i].child.length) {
                this.parse_index_edit(comments[i].child, comment_id, new_comment);
            }
        }
    };
    NotesDiscussionService.prototype.parse_index_edit_content = function (comments, comment_id, new_comment) {
        for (var i = 0; i < comments.length; i++) {
            if (comments[i].comment_ID == comment_id) {
                comments[i].comment_content = new_comment.comment_content;
            }
            if (comments[i].child && comments[i].child.length) {
                this.parse_index_edit(comments[i].child, comment_id, new_comment);
            }
        }
    };
    NotesDiscussionService.prototype.addEditCommentPage = function (comment_id, type, postcomment) {
        var _this = this;
        if (postcomment.comment_content.length < 2) {
            var toast = this.toastCtrl.create({
                message: this.config.get_translation('insufficient_content'),
                duration: 200,
                position: 'bottom'
            });
            toast.present();
        }
        this.addEditComments(comment_id, type, postcomment).subscribe(function (res) {
            // this.parse_index_reply(this.comments,comment_id,res.comment_data); 
            var toast = _this.toastCtrl.create({
                message: res.message,
                duration: 200,
                position: 'bottom'
            });
            toast.present();
        });
    };
    NotesDiscussionService.prototype.addEditComments = function (comment_id, type, new_comment) {
        var _this = this;
        if (type == 'new') {
            var opt = this.auth.getUserAuthorizationHeaders();
            var new_comment_id_1 = 0;
            if (this.comments.length) {
                new_comment_id_1 = (123345);
            }
            else {
                new_comment_id_1 = 1;
            }
            var comment = __assign({ comment_ID: new_comment_id_1, loading: true }, new_comment);
            console.log(comment);
            this.comments.unshift(comment);
            this.commentsobservable = this.http.post(this.config.baseUrl + "user/unitcomments/" + new_comment.comment_post_ID + "/new/0", comment, opt)
                .map(function (response) {
                var body = response.json();
                if (body.hasOwnProperty('comment_data')) {
                    var index = _this.comments.findIndex(function (comment) {
                        console.log(comment.comment_ID);
                        return parseInt(comment.comment_ID) == new_comment_id_1;
                    });
                    if (index >= 0) {
                        body.comment_data['user'] = _this.config.user;
                        _this.comments.splice(index, 1, body.comment_data);
                        console.log('this comments notes');
                        console.log(_this.comments);
                        //localstorage save
                        _this.storage.set('comments_' + new_comment.comment_post_ID, _this.comments);
                        _this.config.addToTracker('comments', new_comment.comment_post_ID);
                    }
                }
                return body;
            });
        }
        if (type == 'reply') {
            var new_comment_id_2 = 123456;
            var comment = __assign({ comment_ID: new_comment_id_2 }, new_comment, { comment_parent: comment_id });
            this.parse_index_reply(this.comments, comment_id, comment);
            var opt = this.auth.getUserAuthorizationHeaders();
            this.commentsobservable = this.http.post(this.config.baseUrl + "user/unitcomments/" + new_comment.comment_post_ID + "/reply/" + comment_id, comment, opt)
                .map(function (response) {
                var body = response.json();
                if (body.hasOwnProperty('comment_data')) {
                    _this.parse_index_edit(_this.comments, new_comment_id_2, body.comment_data);
                }
                return body;
            });
            this.storage.set('comments_' + new_comment.comment_post_ID, this.comments);
            this.config.addToTracker('comments', new_comment.comment_post_ID);
        }
        if (type == 'edit') {
            this.parse_index_edit_content(this.comments, comment_id, new_comment);
            var opt = this.auth.getUserAuthorizationHeaders();
            var comment = { 'comment_content': new_comment.comment_content };
            this.commentsobservable = this.http.post(this.config.baseUrl + "user/unitcomments/" + new_comment.comment_post_ID + "/edit/" + comment_id, comment, opt)
                .map(function (response) {
                var body = response.json();
                _this.parse_index_edit_content(_this.comments, comment_id, body.comment_data);
                return body;
            });
            this.storage.set('comments_' + new_comment.comment_post_ID, this.comments);
            this.config.addToTracker('comments', new_comment.comment_post_ID);
        }
        return this.commentsobservable;
    };
    NotesDiscussionService = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Http */],
            __WEBPACK_IMPORTED_MODULE_2_ionic_angular__["o" /* Platform */],
            __WEBPACK_IMPORTED_MODULE_10__ionic_storage__["b" /* Storage */],
            __WEBPACK_IMPORTED_MODULE_2_ionic_angular__["q" /* ToastController */],
            __WEBPACK_IMPORTED_MODULE_8__authentication__["a" /* AuthenticationService */],
            __WEBPACK_IMPORTED_MODULE_9__config__["a" /* ConfigService */]])
    ], NotesDiscussionService);
    return NotesDiscussionService;
}());

//# sourceMappingURL=notes_discussions.js.map

/***/ }),

/***/ 121:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MessagePage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_config__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__services_chat__ = __webpack_require__(87);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__ionic_storage__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






var debounce = function (func, delay) {
    var inDebounce;
    return function () {
        var context = this;
        var args = arguments;
        clearTimeout(inDebounce);
        inDebounce = setTimeout(function () { return func.apply(context, args); }, delay);
    };
};
var MessagePage = /** @class */ (function () {
    // @ViewChild('InfiniteScroll') infinite: InfiniteScroll; 
    //@ViewChild(InfiniteScroll) infiniteScroll: InfiniteScroll;
    function MessagePage(config, chatService, toastCtrl, storage, navCtrl, loadingCtrl, navParams) {
        this.config = config;
        this.chatService = chatService;
        this.toastCtrl = toastCtrl;
        this.storage = storage;
        this.navCtrl = navCtrl;
        this.loadingCtrl = loadingCtrl;
        this.navParams = navParams;
        this.loadMoreMessagesHandler = 1;
        this.sendMessageObj = {};
        this.typing_user = {};
        this.typing_event = [];
        this.myInput = '';
        this.currentIndex = 0;
        this.toggle_search = 0;
        this.toggled = false;
        this.messageTabslist = [];
    }
    MessagePage.prototype.ngOnInit = function () {
        var _this = this;
        var $this = this;
        this.messageTabslist = [
            {
                'key': 'messages',
                'label': this.config.get_translation('messages'),
                'icon': 'ios-chatbubbles'
            },
            {
                'key': 'members',
                'label': this.config.get_translation('members'),
                'icon': 'md-person-add'
            }
        ];
        this.navData = this.navParams.data;
        this.currentKey = this.navData.chat_key;
        this.chatService.fetchMyMessages('ngoninit', this.currentKey).then(function (mychats) {
            if (mychats < _this.config.chat.message_number) {
                _this.loadMoreMessagesHandler = 0;
            }
        });
        this.userTyping(this.currentKey); // user typing event listner       
        this.scrolltoLast();
        setTimeout(function () {
            document.getElementById('slide-zoom_wrapper').addEventListener("scroll", function (event) {
                if (event && event.target) {
                    if (event.target.scrollTop == 0 && $this.loadMoreMessagesHandler) {
                        console.log('called');
                        $this.icon_loadMoreMessages();
                    }
                }
            });
        }, 300);
    };
    MessagePage.prototype.onSlideChanged = function () {
        this.currentIndex = this.messageSlides.getActiveIndex();
        var index = this.currentIndex;
        if (this.messageTabslist[index]) {
            switch (this.messageTabslist[index].key) {
                case 'messages':
                    break;
                case 'members':
                    break;
                default:
                    break;
            }
        }
    };
    MessagePage.prototype.memberSearchSlide = function () {
        this.messageSlides.slideTo(1, 500);
    };
    MessagePage.prototype.backtoChat = function () {
        this.messageSlides.slideTo(0, 500);
    };
    /* Handle emoji selection and append to the messages */
    MessagePage.prototype.handleSelection = function (event) {
        if (!this.sendMessageObj.text_message) {
            this.sendMessageObj.text_message = '';
        }
        this.sendMessageObj.text_message += event.char;
    };
    MessagePage.prototype.scrolltoLast = function () {
        setTimeout(function () {
            if (document.getElementById('all_chat_messages_wrapper')) {
                var height = document.getElementById('all_chat_messages_wrapper').offsetHeight;
                document.getElementById('slide-zoom_wrapper').scroll(0, height);
            }
        }, 1000);
    };
    /*ionViewDidLoad(): void {
      // Disable to give time for loading & scrolling
      this.infiniteScroll.enable(false);

      loadFirstTenChats().then(() => {
        // Fiddle with the timing depending on what you are doing.

        // If you have footers or other dynamic content to worry about.
        setTimeout( () => this.content.resize(), 100);

        // Scroll to the bottom once the size has been calculated:
        setTimeout( () => this.content.scrollToBottom(100), 200);

        // The scroll above has to be finished before enabling or
        // else the IS might think it needs to load the next batch.
        setTimeout( () => this.infiniteScroll.enable(true), 1000);
      });
    }*/
    MessagePage.prototype.loadMoreMessages = function (event) {
        var _this = this;
        this.loadMoreMessagesHandler = 0;
        this.chatService.fetchMyMessages('loadMoreMessages', this.currentKey).then(function (mychats) {
            event.complete();
            if (mychats > 1) {
                _this.loadMoreMessagesHandler = 1;
            }
        });
    };
    MessagePage.prototype.icon_loadMoreMessages = function () {
        var _this = this;
        this.loadMoreMessagesHandler = 0;
        this.chatService.fetchMyMessages('loadMoreMessages', this.currentKey).then(function (mychats) {
            if (mychats > 1) {
                document.getElementById('slide-zoom_wrapper').scroll(0, 2);
                _this.loadMoreMessagesHandler = 1;
            }
        });
    };
    MessagePage.prototype.doRefresh = function (refresher) {
        var _this = this;
        this.chatService.fetchMyMessages('doRefresh', this.currentKey).then(function (mychats) {
            refresher.complete();
            _this.scrolltoLast();
        });
    };
    MessagePage.prototype.changeListener = function ($event) {
        this.file = $event.target.files[0];
        if (this.file) {
            var toast = this.toastCtrl.create({
                message: this.config.get_translation('file_selected'),
                duration: 3000,
                position: 'bottom'
            });
            toast.present();
        }
        else {
            var toast = this.toastCtrl.create({
                message: this.config.get_translation('file_not_selected'),
                duration: 3000,
                position: 'bottom'
            });
            toast.present();
        }
    };
    MessagePage.prototype.attachment_restriction = function (file) {
        if (file.size <= this.config.chat.file_size && (this.config.chat.file_type.indexOf(file.type) >= 0)) {
            return true;
        }
        else {
            return false;
        }
    };
    MessagePage.prototype.logForm = function () {
        var _this = this;
        if (this.sendMessageObj.text_message) {
            if (this.file) {
                if (this.attachment_restriction(this.file)) {
                    /*check restriction for file upload */
                    var loading_1 = this.loadingCtrl.create({
                        content: '<img src="assets/images/bubbles.svg">',
                        duration: 3000,
                        spinner: 'hide',
                        showBackdrop: true,
                    });
                    loading_1.present();
                    this.chatService.uploadChatAttachment(this.file).then(function (attachment) {
                        loading_1.dismiss();
                        _this.sendMessageObj.attachment = attachment.url;
                        _this.sendMessageObj.attachment_type = attachment.type;
                        _this.chatService.sendMessageService(_this.sendMessageObj, _this.currentKey).then(function () {
                            _this.sendMessageObj = {};
                            _this.sendMessageObj.text_message = '';
                            _this.scrolltoLast();
                        });
                    });
                }
                else {
                    /* check restiction does not qualified */
                    var toast = this.toastCtrl.create({
                        message: this.config.get_translation('file_not_valid'),
                        duration: 3000,
                        position: 'bottom'
                    });
                    toast.present();
                }
            }
            else {
                this.chatService.sendMessageService(this.sendMessageObj, this.currentKey).then(function () {
                    _this.sendMessageObj = {};
                    _this.sendMessageObj.text_message = '';
                    _this.scrolltoLast();
                });
            }
        }
        else {
            var toast = this.toastCtrl.create({
                message: this.config.get_translation('type_something'),
                duration: 3000,
                position: 'bottom'
            });
            toast.present();
        }
    };
    MessagePage.prototype.isTyping = function (status) {
        this.chatService.isTypingService(this.currentKey, status).then(function () {
        });
    };
    MessagePage.prototype.userTyping = function (currentKey) {
        this.chatService.userTyping(this.currentKey).then(function (typing_user) {
        });
    };
    MessagePage.prototype.onInput = function ($event) {
        var $this = this;
        if ($this.myInput.length > 3) {
            $this.chatService.search_user_firebase($this.myInput).then(function (response) {
            });
        }
    };
    MessagePage.prototype.onCancel = function ($event) {
        this.reset_searched_users();
    };
    /*
       send invitation to user regarding chat
    */
    MessagePage.prototype.add_user_to_chat = function (user) {
        var _this = this;
        var current_chat_key = this.currentKey; // set current chat key  // not neccessRY to send current_chat key
        this.chatService.add_user_to_chat(current_chat_key, user).then(function (response) {
            //return => {'notification_key':nk.key}console.log(resolve);
            var toast = _this.toastCtrl.create({
                message: _this.config.get_translation('notification_send'),
                duration: 3000,
                position: 'bottom'
            });
            toast.present();
        });
        this.reset_searched_users();
    };
    MessagePage.prototype.reset_searched_users = function () {
        this.chatService.searched_users = [];
    };
    MessagePage.prototype.toggle_search_bar = function () {
        if (this.toggle_search == 0) {
            this.toggle_search = 1;
        }
        else {
            this.toggle_search = 0;
        }
        this.reset_searched_users();
    };
    MessagePage.prototype.getMessageLastTime = function (message) {
        return Math.floor((new Date().getTime() - message.time) / 1000);
    };
    MessagePage.prototype.exit_from_chat = function () {
        var $this = this;
        var current_chat_key = $this.currentKey;
        $this.chatService.exit_from_chat(current_chat_key).then(function (response) {
            $this.navCtrl.pop();
        });
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('MessageTabs'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["p" /* Slides */])
    ], MessagePage.prototype, "messageTabs", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('MessageSlides'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["p" /* Slides */])
    ], MessagePage.prototype, "messageSlides", void 0);
    MessagePage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-message',template:/*ion-inline-start:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\pages\message\message.html"*/'<ion-header>\n    <ion-navbar  *ngIf="config.isLoggedIn">\n        <div start>\n          <div class="title_chat_users" *ngIf="chatService.myChats && chatService.myChats.length && chatService.myChats[chatService.current_index] && chatService.myChats[chatService.current_index][\'chat_users\'] && chatService.myChats[chatService.current_index][\'chat_users\'].length">\n                \n                <div *ngFor="let user of chatService.myChats[chatService.current_index].chat_users; let i = index">\n                    <img *ngIf="user.image" [src]="user.image"   />\n                </div>\n              <div *ngIf="chatService.myChats && chatService.myChats.length && chatService.myChats[chatService.current_index] && chatService.myChats[chatService.current_index][\'chat_users\'] && chatService.myChats[chatService.current_index][\'chat_users\'].length">\n              <div *ngIf="chatService.myChats[chatService.current_index][\'chat_users\'].length > 5" >\n                {{(chatService.myChats[chatService.current_index][\'chat_users\'].length - 5)}} more\n              </div>\n        </div>\n          </div>\n        </div>\n\n        \n      <ion-buttons end>\n             <button ion-button icon-only  (click)="memberSearchSlide()">\n                <ion-icon name="md-person-add" ></ion-icon>\n            </button>\n            <button ion-button icon-only  (click)="exit_from_chat()">\n                <ion-icon name="md-exit" ></ion-icon>\n            </button>\n        </ion-buttons>\n    </ion-navbar>\n    <ion-navbar *ngIf="!config.isLoggedIn">\n          <div start>\n              <div class="title_chat_users" *ngIf="chatService.myChats && chatService.myChats.length && chatService.myChats[chatService.current_index] && chatService.myChats[chatService.current_index][\'chat_users\'] && chatService.myChats[chatService.current_index][\'chat_users\'].length">\n                    \n                    <div *ngFor="let user of chatService.myChats[chatService.current_index].chat_users; let i = index">\n                        <img *ngIf="user.image" [src]="user.image"   />\n                    </div>\n                  <div *ngIf="chatService.myChats && chatService.myChats.length && chatService.myChats[chatService.current_index] && chatService.myChats[chatService.current_index][\'chat_users\'] && chatService.myChats[chatService.current_index][\'chat_users\'].length">\n                  <div *ngIf="chatService.myChats[chatService.current_index][\'chat_users\'].length > 5" >\n                    {{(chatService.myChats[chatService.current_index][\'chat_users\'].length - 5)}} {{config.get_translation(\'more\')}}\n                  </div>\n            </div>\n          </div>\n        </div>\n    </ion-navbar>\n</ion-header>\n     \n<ion-content padding> \n\n    <ion-slides dir="{{config.settings.rtl ? \'rtl\' : undefined }}" id="messageslides" #MessageSlides (ionSlideDidChange)="onSlideChanged()">\n        <ion-slide >\n            <div id="slide-zoom_wrapper">\n                <div id="all_chat_messages_wrapper" *ngIf="chatService.myChats && chatService.myChats.length && chatService.myChats[chatService.current_index] && chatService.myChats[chatService.current_index].allMessages && chatService.myChats[chatService.current_index].allMessages.length">\n\n                    <!-- <button (click)="icon_loadMoreMessages()" *ngIf="loadMoreMessagesHandler==1">{{config.get_translation(\'load_new_messages\')}}</button> -->\n                    <span id="load_more"></span>\n                    <div class="chat_message_wrapper"  *ngFor="let chat of chatService.myChats[chatService.current_index].allMessages.slice().reverse()">\n                            <MessageBlock [chat]="chat"></MessageBlock>\n\n                    </div>\n                    <div class="is_typing" *ngIf="chatService.myChats && chatService.myChats[chatService.current_index] && chatService.myChats[chatService.current_index].typing && chatService.myChats[chatService.current_index].typing.id">\n                        <span>{{chatService.myChats[chatService.current_index].typing.name}}</span>\n                        <div>\n                        <svg width="100%" height="100%" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100" preserveAspectRatio="xMidYMid" class="lds-ellipsis3"><!--circle(cx="16",cy="50",r="10")--><circle cx="84" cy="50" r="0" fill="#cdcdcd"><animate attributeName="r" values="10;0;0;0;0" keyTimes="0;0.25;0.5;0.75;1" keySplines="0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1" calcMode="spline" dur="2s" repeatCount="indefinite" begin="0s"></animate><animate attributeName="cx" values="84;84;84;84;84" keyTimes="0;0.25;0.5;0.75;1" keySplines="0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1" calcMode="spline" dur="2s" repeatCount="indefinite" begin="0s"></animate></circle><circle cx="45.2725" cy="50" r="10" fill="#cdcdcd"><animate attributeName="r" values="0;10;10;10;0" keyTimes="0;0.25;0.5;0.75;1" keySplines="0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1" calcMode="spline" dur="2s" repeatCount="indefinite" begin="-1s"></animate><animate attributeName="cx" values="16;16;50;84;84" keyTimes="0;0.25;0.5;0.75;1" keySplines="0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1" calcMode="spline" dur="2s" repeatCount="indefinite" begin="-1s"></animate></circle><circle cx="16" cy="50" r="8.60957" fill="#cdcdcd"><animate attributeName="r" values="0;10;10;10;0" keyTimes="0;0.25;0.5;0.75;1" keySplines="0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1" calcMode="spline" dur="2s" repeatCount="indefinite" begin="-0.5s"></animate><animate attributeName="cx" values="16;16;50;84;84" keyTimes="0;0.25;0.5;0.75;1" keySplines="0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1" calcMode="spline" dur="2s" repeatCount="indefinite" begin="-0.5s"></animate></circle><circle cx="84" cy="50" r="1.39043" fill="#b0b0b0"><animate attributeName="r" values="0;10;10;10;0" keyTimes="0;0.25;0.5;0.75;1" keySplines="0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1" calcMode="spline" dur="2s" repeatCount="indefinite" begin="0s"></animate><animate attributeName="cx" values="16;16;50;84;84" keyTimes="0;0.25;0.5;0.75;1" keySplines="0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1" calcMode="spline" dur="2s" repeatCount="indefinite" begin="0s"></animate></circle><circle cx="79.2725" cy="50" r="10" fill="#cdcdcd"><animate attributeName="r" values="0;0;10;10;10" keyTimes="0;0.25;0.5;0.75;1" keySplines="0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1" calcMode="spline" dur="2s" repeatCount="indefinite" begin="0s"></animate><animate attributeName="cx" values="16;16;16;50;84" keyTimes="0;0.25;0.5;0.75;1" keySplines="0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1" calcMode="spline" dur="2s" repeatCount="indefinite" begin="0s"></animate></circle></svg>\n                        </div>\n                    </div>\n                   <!--   <ion-infinite-scroll #infinite (ionInfinite)="loadMoreMessages($event)" *ngIf="loadMoreMessagesHandler==1" position="top">\n                         <ion-infinite-scroll-content></ion-infinite-scroll-content>\n                      </ion-infinite-scroll> -->\n                </div>\n\n            </div>\n              \n        </ion-slide>\n\n        <ion-slide *ngIf="config.isLoggedIn">\n            <div class="searchblock">\n              <button ion-button (click)="backtoChat()">\n                  <ion-icon name="md-person-add">{{\' \'+config.get_translation(\'back_to_chat\')}}</ion-icon>\n              </button>\n              <ion-searchbar \n                [(ngModel)]="myInput"\n                debounced-input\n                [showCancelButton]="true"\n                (ionInput)="onInput($event)">\n              </ion-searchbar>\n            </div>\n            <div class="search_results" *ngIf="chatService.searched_users && chatService.searched_users">\n                <div *ngFor="let user of chatService.searched_users">\n                    <div (click)="add_user_to_chat(user)">\n                         <div class="user_online">\n                           <img [src]="user.image" />    \n                            <div>\n                              <div class="user_online_content">\n                                <p [innerHtml]="user.name"></p>\n                              </div>\n                            </div>\n                       </div>\n                    </div>    \n                </div>\n            </div>\n            \n        </ion-slide>\n    </ion-slides>\n    <div class="message_form" *ngIf="currentIndex == 0">\n        <div class="message_form_content">\n            <div class="buttons_group">\n              <button ion-button clear icon-only class="chat_icon_button" (click)="toggled = !toggled" [(emojiPickerIf)]="toggled" [emojiPickerDirection]="\'top\'"\n                  (emojiPickerSelect)="handleSelection($event)">\n                  <ion-icon name="md-happy"></ion-icon>\n              </button>\n              <div  *ngIf="config.isLoggedIn" ion-button clear icon-only class="chat_icon_button">\n                  <label for="chat_attachment_input"><ion-icon name="md-attach"></ion-icon></label>\n                  <input id="chat_attachment_input" type="file" name="file" (change)="changeListener($event)"/>\n              </div>\n            </div>\n            <form (ngSubmit)="logForm()" class="sendMessage">\n                \n                <ion-item>\n                  <ion-textarea type="text" [(ngModel)]="sendMessageObj.text_message" name="text_message" [placeholder]="config.get_translation(\'type_message\')" (keyup)="isTyping(0)"\n                  (keydown)="isTyping(1)" elastic></ion-textarea>\n                </ion-item>\n\n                <button ion-button type="submit" block><ion-icon ios="ios-send" md="md-send"></ion-icon></button>\n            </form>\n        </div>  \n    </div>\n  \n</ion-content>\n\n\n\n\n\n\n<!--                 <div class="chat_message" *ngIf="chat && chat.user && config.user.id === chat.user.id">\n                  <img *ngIf="chat.user.image" [src]="chat.user.image"  /> \n                  <div [ngClass]=\'{mymessage: config.user.id === chat.user.id}\'>\n                    <div class="chat_message_header">\n                        <friendlytime [time]="getMessageLastTime(chat)"></friendlytime>\n                    </div>\n                    <p [innerHtml]="chat.message"></p>\n                  </div>\n                </div>\n                <div class="chat_message_reverse" *ngIf="chat && chat.user && config.user.id !== chat.user.id">\n                  <div [ngClass]=\'{mymessage: config.user.id === chat.user.id}\'>\n                        <div class="chat_message_header">\n                            <friendlytime [time]="getMessageLastTime(chat)"></friendlytime>\n                        </div>\n                    <p [innerHtml]="chat.message"></p>\n                  </div>\n                  <img *ngIf="chat.user.image" [src]="chat.user.image"  /> \n                </div> -->'/*ion-inline-end:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\pages\message\message.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2__services_config__["a" /* ConfigService */],
            __WEBPACK_IMPORTED_MODULE_3__services_chat__["a" /* ChatService */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* ToastController */],
            __WEBPACK_IMPORTED_MODULE_4__ionic_storage__["b" /* Storage */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* LoadingController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */]])
    ], MessagePage);
    return MessagePage;
}());

//# sourceMappingURL=message.js.map

/***/ }),

/***/ 181:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AttendanceService; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_map__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_observable_of__ = __webpack_require__(40);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_observable_of___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_rxjs_add_observable_of__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_observable_fromPromise__ = __webpack_require__(60);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_observable_fromPromise___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_add_observable_fromPromise__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__ionic_storage__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__authentication__ = __webpack_require__(33);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__config__ = __webpack_require__(3);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};








var AttendanceService = /** @class */ (function () {
    function AttendanceService(http, storage, auth, config) {
        this.http = http;
        this.storage = storage;
        this.auth = auth;
        this.config = config;
        this.course_attendance = {};
        this.current_course = 0;
    }
    ;
    AttendanceService.prototype.ngOnInit = function () { };
    AttendanceService.prototype.get_my_course = function (body, paged) {
        if (body.status) {
            if (body.data && body.data.length) {
                this.my_courses = body.data;
            }
        }
        console.log('my_courses for attendance');
        console.log(this.my_courses);
    };
    AttendanceService.prototype.get_user_course_attendance = function (course_id) {
        var _this = this;
        var $this = this;
        this.course_attendance[course_id] = {};
        this.current_course = course_id;
        return new Promise(function (resolve) {
            if ($this.config.isLoggedIn && course_id) {
                var opt = $this.getUserAuthorizationHeaders();
                $this.http.get($this.config.baseUrl + "attendance/app/course/" + course_id, opt)
                    .map(function (res) { return res.json(); })
                    .subscribe(function (res) {
                    if (res.status) {
                        if (res.data) {
                            _this.course_attendance[_this.current_course] = res.data;
                            console.log('Attendance of course_id = ' + _this.current_course);
                            console.log(_this.course_attendance);
                        }
                    }
                    resolve(res);
                });
            }
        });
    };
    AttendanceService.prototype.marktodays_attendance = function (user_id) {
        var _this = this;
        var $this = this;
        return new Promise(function (resolve) {
            if ($this.config.isLoggedIn && _this.current_course && user_id) {
                var opt = $this.getUserAuthorizationHeaders();
                var data = {
                    "course_ids": [_this.current_course],
                    "user_id": user_id
                };
                $this.http.post($this.config.baseUrl + "attendance/app/course/mark", data, opt)
                    .map(function (res) { return res.json(); })
                    .subscribe(function (res) {
                    if (res.status) {
                        if (res.data) {
                            if (Array.isArray(res.data.marked_attendance_ids)) {
                                if (res.data.marked_attendance_ids.indexOf(_this.current_course) >= 0) {
                                    // push to mark
                                    if (!(_this.course_attendance[_this.current_course].marked.date_format && Array.isArray(_this.course_attendance[_this.current_course].marked.date_format))) {
                                        _this.course_attendance[_this.current_course].marked.date_format = [];
                                    }
                                    _this.course_attendance[_this.current_course].marked.date_format.push(res.data.date);
                                    // removing from unmark
                                    if (_this.course_attendance[_this.current_course].unmarked.date_format && Array.isArray(_this.course_attendance[_this.current_course].unmarked.date_format)) {
                                        var index = _this.course_attendance[_this.current_course].unmarked.date_format.indexOf(res.data.date);
                                        console.log('index= ' + index);
                                        if (index >= 0) {
                                            _this.course_attendance[_this.current_course].unmarked.date_format.splice(index, 1);
                                        }
                                    }
                                    else {
                                        _this.course_attendance[_this.current_course].unmarked.date_format = [];
                                    }
                                }
                            }
                        }
                    }
                    resolve(res);
                });
            }
        });
    };
    AttendanceService.prototype.getUserAuthorizationHeaders = function () {
        var userheaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        userheaders.append('Authorization', this.config.settings.access_token);
        return new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: userheaders });
    };
    AttendanceService = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Http */],
            __WEBPACK_IMPORTED_MODULE_5__ionic_storage__["b" /* Storage */],
            __WEBPACK_IMPORTED_MODULE_6__authentication__["a" /* AuthenticationService */],
            __WEBPACK_IMPORTED_MODULE_7__config__["a" /* ConfigService */]])
    ], AttendanceService);
    return AttendanceService;
}());

//# sourceMappingURL=attendance.js.map

/***/ }),

/***/ 183:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return BlogPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_config__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__services_blog__ = __webpack_require__(117);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__post_post__ = __webpack_require__(324);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__profile_profile__ = __webpack_require__(22);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__search_search__ = __webpack_require__(61);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};







var BlogPage = /** @class */ (function () {
    function BlogPage(navCtrl, config, blog, loadingController, modalCtrl) {
        this.navCtrl = navCtrl;
        this.config = config;
        this.blog = blog;
        this.loadingController = loadingController;
        this.modalCtrl = modalCtrl;
        this.posts = [];
        this.profilePage = __WEBPACK_IMPORTED_MODULE_5__profile_profile__["a" /* ProfilePage */];
        this.noMorePostsAvailable = false;
        this.paged = 1;
    }
    BlogPage.prototype.ngOnInit = function () {
        var _this = this;
        var loading = this.loadingController.create({
            content: '<img src="assets/images/bubbles.svg">',
            duration: 15000,
            spinner: 'hide',
            showBackdrop: true,
        });
        loading.present();
        this.blog.getPosts(this.paged).subscribe(function (res) {
            if (res) {
                _this.posts = res;
                console.log(_this.posts);
            }
            loading.dismiss();
        });
    };
    BlogPage.prototype.loadPost = function (post) {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_4__post_post__["a" /* PostPage */], post);
    };
    BlogPage.prototype.doRefresh = function ($event) {
        var _this = this;
        this.blog.getPosts().subscribe(function (res) {
            if (res) {
                _this.posts = res;
            }
        });
    };
    BlogPage.prototype.doInfinite = function ($event) {
        var _this = this;
        if (this.posts.length >= this.config.settings.per_view * this.paged) {
            this.paged++;
            this.blog.getPosts(this.paged).subscribe(function (res) {
                if (res) {
                    _this.posts = res;
                }
                $event.complete();
            });
        }
        else {
            this.noMorePostsAvailable = true;
        }
    };
    BlogPage.prototype.openSearch = function () {
        var modal = this.modalCtrl.create(__WEBPACK_IMPORTED_MODULE_6__search_search__["a" /* SearchPage */]);
        modal.present();
    };
    BlogPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-blog',template:/*ion-inline-start:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\pages\blog\blog.html"*/'<ion-header>\n    <ion-navbar  color="transparent" >\n        <ion-buttons start>\n            <button ion-button menuToggle>\n                <ion-icon name="md-menu"></ion-icon>\n            </button>\n        </ion-buttons>\n        <ion-title>{{config.get_translation(\'blog_page\')}}</ion-title>\n            <ion-buttons end>\n                <button ion-button (click)="openSearch()">\n                    <ion-icon name="md-search"></ion-icon>\n                </button>\n            </ion-buttons>\n            <ion-buttons end>\n                <button ion-button [navPush]="profilePage" [navParams]="userdata">\n                    <ion-icon name="md-contact" *ngIf="!config.isLoggedIn"></ion-icon>\n                    <img *ngIf="config.isLoggedIn" [src]="config.user?.avatar">\n                </button>\n            </ion-buttons>\n    </ion-navbar>\n</ion-header>\n<ion-content padding>\n    <ion-refresher (ionRefresh)="doRefresh($event)">\n        <ion-refresher-content pullingText="{{config.get_translation(\'pull_to_refresh\')}}"\n          pullingIcon="arrow-dropdown"\n          refreshingSpinner="circles"\n          refreshingText="{{config.get_translation(\'refreshing\')}}"></ion-refresher-content>\n    </ion-refresher>\n    <ion-grid>\n        <ion-row>\n            <ion-col col-12 col-sm-6 col-md-4 col-lg-3 *ngFor="let post of blog?.posts" >\n                <ion-card (click)="loadPost(post)">\n                    <lazy-img [inputSrc]="post.featured_image" *ngIf="post.featured_image"></lazy-img>\n                    <ion-item>\n                        <ion-avatar item-start>\n                          <lazy-img [inputSrc]="post.author.avatar"></lazy-img>\n                        </ion-avatar> \n                        <h2 [innerHtml]="post.author.name"></h2>\n                        <p [innerHtml]="post.date"></p>\n                    </ion-item>\n                    <ion-card-content>\n                        <ion-card-title [innerHtml]="post.title"></ion-card-title>\n                        <div class="content" [innerHtml]="post.excerpt"></div>\n                    </ion-card-content>\n                </ion-card>\n            </ion-col>\n            <ion-infinite-scroll *ngIf="!noMorePostsAvailable" (ionInfinite)="doInfinite($event)">\n                <ion-infinite-scroll-content></ion-infinite-scroll-content>\n            </ion-infinite-scroll>  \n        </ion-row>\n    </ion-grid>\n</ion-content>\n'/*ion-inline-end:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\pages\blog\blog.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_2__services_config__["a" /* ConfigService */],
            __WEBPACK_IMPORTED_MODULE_3__services_blog__["a" /* BlogService */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* LoadingController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* ModalController */]])
    ], BlogPage);
    return BlogPage;
}());

//# sourceMappingURL=blog.js.map

/***/ }),

/***/ 184:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CourseStatusService; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_map__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_Observable__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_rxjs_Observable__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_observable_of__ = __webpack_require__(40);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_observable_of___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_add_observable_of__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_observable_fromPromise__ = __webpack_require__(60);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_observable_fromPromise___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_add_observable_fromPromise__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__authentication__ = __webpack_require__(33);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__config__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__users__ = __webpack_require__(29);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__activity__ = __webpack_require__(115);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__ionic_storage__ = __webpack_require__(11);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};











var CourseStatusService = /** @class */ (function () {
    function CourseStatusService(http, auth, storage, config, userService, activityService) {
        this.http = http;
        this.auth = auth;
        this.storage = storage;
        this.config = config;
        this.userService = userService;
        this.activityService = activityService;
        this.cacheGroup = 'course_status';
        this.courseStatuses = [];
        this.baseUrl = this.config.baseUrl;
    }
    CourseStatusService.prototype.ngOnInit = function () {
        this.token = this.auth.getAccessToken();
    };
    CourseStatusService.prototype.getCourseStatus = function (status) {
        var _this = this;
        var statuses = this.config.trackComponents('course_status');
        console.log(status.course_id);
        if (typeof statuses != 'undefined' && statuses.length && statuses.indexOf(status.course_id) > -1) {
            this.observable = __WEBPACK_IMPORTED_MODULE_3_rxjs_Observable__["Observable"].fromPromise(this.storage.get('coursestatus_' + status.course_id + '_' + status.user_id).then(function (coursestatus) {
                console.log(coursestatus);
                _this.courseStatuses.push(coursestatus);
                return coursestatus;
            }));
        }
        else {
            var url = this.config.baseUrl + "user/coursestatus/" + status.course_id;
            var cacheKey = url;
            /*
            if(this.observable) {
                console.log('request pending');
                return this.observable;
            }else{
            */
            var k = this.courseStatuses.length;
            var coursestatus_1 = {};
            coursestatus_1['course_id'] = status.course_id;
            coursestatus_1['user_id'] = status.user_id;
            coursestatus_1['progress'] = status.progress;
            coursestatus_1['status'] = status.status;
            var opt = this.auth.getUserAuthorizationHeaders();
            return this.http.get(url, opt)
                .map(function (response) {
                _this.observable = null;
                if (response.status == 400) {
                    return "FAILURE";
                }
                else if (response.status == 200) {
                    var body = response.json();
                    if (body) {
                        coursestatus_1['courseitems'] = body['courseitems'];
                        coursestatus_1['current_unit_key'] = body['current_unit_key'];
                        if (body['status']) {
                            coursestatus_1['status'] = body['status'];
                        }
                        _this.courseStatuses.push(coursestatus_1);
                        var temp_course_items = [];
                        temp_course_items = JSON.parse(JSON.stringify(coursestatus_1));
                        for (var i = 0; i < temp_course_items.courseitems.length; i++) {
                            if (temp_course_items.courseitems[i].meta && !temp_course_items.courseitems[i].meta.access) {
                                temp_course_items.courseitems[i].content = '';
                            }
                        }
                        _this.updateCourseStatus(temp_course_items);
                        _this.config.addToTracker('course_status', coursestatus_1.course_id);
                        return coursestatus_1;
                    }
                }
            });
            //}
        }
        return this.observable;
    };
    CourseStatusService.prototype.getCourseStatusItem = function (status, index) {
        var _this = this;
        var statusitems = this.config.trackComponents('statusitems');
        var flag = false;
        if (typeof statusitems != 'undefined' && statusitems.length && statusitems.indexOf(status.courseitems[index].id) > -1) {
            if (this.courseStatuses.length && ("course_id" in status)) {
                console.log('found in live status');
                for (var i = 0; i < this.courseStatuses.length; i++) {
                    if (this.courseStatuses[i].course_id == status.course_id &&
                        this.courseStatuses[i].user_id == status.user_id && ((this.courseStatuses[i].courseitems[index].content && this.courseStatuses[i].courseitems[index].content.length) || (this.courseStatuses[i].courseitems[index].meta.iframes && this.courseStatuses[i].courseitems[index].meta.iframes.length) || (this.courseStatuses[i].courseitems[index].meta.video && this.courseStatuses[i].courseitems[index].meta.video.length)) && this.courseStatuses[i].courseitems[index].meta.access) {
                        return __WEBPACK_IMPORTED_MODULE_3_rxjs_Observable__["Observable"].of(this.courseStatuses[i]); //return if already cached
                    }
                }
                flag = true;
            }
            if (flag) {
                this.statusobservable = __WEBPACK_IMPORTED_MODULE_3_rxjs_Observable__["Observable"].fromPromise(this.storage.get('coursestatus_' + status.course_id + '_' + status.user_id).then(function (coursestatus) {
                    console.log(coursestatus);
                    if (coursestatus) {
                        if ((coursestatus.courseitems[index].content.length || (coursestatus.courseitems[index].meta.iframes && coursestatus.courseitems[index].meta.iframes.length) || (coursestatus.courseitems[index].meta.video && coursestatus.courseitems[index].meta.video.length)) && coursestatus.courseitems[index].meta.access) {
                            _this.courseStatuses.push(coursestatus);
                            return coursestatus;
                        }
                        else {
                            //Contingency fix
                            _this.config.removeFromTracker('statusitems', status.courseitems[index].id);
                        }
                    }
                }));
            }
            ;
        }
        else {
            console.log('making http call');
            var url = this.config.baseUrl + "user/coursestatus/" + status.course_id + "/item/" + status.courseitems[index].id;
            //let cacheKey = url;
            var k = this.courseStatuses.length;
            var coursestatus_2 = {};
            coursestatus_2['course_id'] = status.course_id;
            coursestatus_2['user_id'] = status.user_id;
            coursestatus_2['progress'] = status.progress;
            coursestatus_2['courseitems'] = status.courseitems;
            coursestatus_2['status'] = status.status;
            var opt_1 = this.auth.getUserAuthorizationHeaders();
            this.statusobservable = this.http.get(url, opt_1)
                .map(function (response) {
                _this.statusobservable = null;
                if (response.status == 400) {
                    return "FAILURE";
                }
                else if (response.status == 200) {
                    var body = response.json();
                    if (body && (body['content'] || body['meta']['iframes'] || body['meta']['video'])) {
                        coursestatus_2.courseitems[index].content = body['content'];
                        coursestatus_2.courseitems[index].meta = body['meta'];
                        //Update Stored value in RunTime only when Access enabled
                        if (coursestatus_2.courseitems[index].meta.access) {
                            console.log('store');
                            //Update Course status in the Course service.
                            _this.activityService.addActivity({
                                'user_id': coursestatus_2.user_id,
                                'type': 'unit_complete',
                                'action': 'unit_complete',
                                'item_id': coursestatus_2.course_id,
                                'secondary_item_id': coursestatus_2.courseitems[index].id,
                            });
                            if (coursestatus_2.courseitems[index].type != 'quiz') {
                                coursestatus_2.courseitems[index].status = 1;
                            }
                            _this.updateCourseStatus(coursestatus_2);
                            _this.config.addToTracker('statusitems', coursestatus_2.courseitems[index].id);
                            //Async Post call to update course progress.
                            _this.http.post(_this.config.baseUrl + "updatecourse/progress/", { 'course': coursestatus_2.course_id, 'progress': coursestatus_2.progress }, opt_1);
                        }
                        return coursestatus_2;
                    }
                }
            });
            // }
        }
        return this.statusobservable;
    };
    CourseStatusService.prototype.saveQuiz = function (quiz, user) {
        this.storage.set('saved_quiz_' + user.id + '_' + quiz.id, quiz);
    };
    CourseStatusService.prototype.submitQuiz = function (status, index) {
        var _this = this;
        console.log('sengin http request');
        var opt = this.auth.getUserAuthorizationHeaders();
        console.log(status.courseitems[index]);
        var url = this.config.baseUrl + "user/submitresult/";
        console.log(url);
        this.http.post(url, { 'quiz_id': status.courseitems[index].id,
            'course_id': status.course_id,
            'results': status.courseitems[index].meta.questions }, opt)
            .subscribe(function (res) {
            console.log(res);
            _this.activityService.addActivity({
                'user_id': status.user_id,
                'type': 'save_quiz',
                'action': 'save_quiz',
                'item_id': status.course_id,
                'secondary_item_id': status.courseitems[index].id,
            });
            _this.userService.addResult(status.courseitems[index]);
        });
        this.storage.get('dashboardCharts_Quiz_' + this.config.user.id).then(function (res) {
            if (!res) {
                res = { 'labels': [], 'data': [] };
            }
            res.labels.push(status.courseitems[index].title);
            res.data.push(status.courseitems[index].marks);
            _this.storage.set('dashboardCharts_Quiz_' + _this.config.user.id, res);
        });
    };
    CourseStatusService.prototype.retakeQuizService = function (status, index) {
        console.log('in retakeQuizService');
        console.log(status);
        if (status && status.courseitems && status.courseitems[index].id && status.courseitems[index].type == 'quiz') {
            console.log('making http call');
            var url2 = this.config.baseUrl + "user/coursestatus/" + status.course_id + "/retake_quiz/" + status.courseitems[index].id;
            var opt = this.auth.getUserAuthorizationHeaders();
            return this.retakeobservable = this.http.get(url2, opt)
                .map(function (response) {
                if (response.status == 400) {
                    return "FAILURE";
                }
                else if (response.status == 200) {
                    var body = response.json();
                    /*body = {
                        status:
                        message:
                        retakes:
                    }*/
                    console.log(body);
                    if (body) {
                        /*this.config.addToTracker('statusitems',status.courseitems[index].id);
                        //Async Post call to update course progress.
                        this.http.post(`${this.baseUrl}updatecourse/progress/`,{'course':status.course_id,'progress':coursestatus.progress},opt);*/
                        return body;
                    }
                }
            });
        }
    };
    CourseStatusService.prototype.updateCourseStatus = function (coursestatus) {
        var _this = this;
        console.log('22222');
        console.log(coursestatus);
        if (this.courseStatuses.length) {
            for (var i = 0; i < this.courseStatuses.length; i++) {
                if (this.courseStatuses[i].course_id == coursestatus.course_id &&
                    this.courseStatuses[i].user_id == coursestatus.user_id) {
                    this.courseStatuses[i].progress = coursestatus.progress;
                }
            }
        }
        this.storage.get('coursestatus_' + coursestatus.course_id + '_' + coursestatus.user_id).then(function (cs) {
            if (cs) {
                cs.progress = coursestatus.progress;
                for (var i = 0; i < cs.courseitems.length; i++) {
                    if (cs.courseitems[i].id == coursestatus.courseitems[i].id) {
                        if (coursestatus.courseitems[i].meta.access && (coursestatus.courseitems[i].content.length > 6 || (coursestatus.courseitems[i].meta.iframes && coursestatus.courseitems[i].meta.iframes.length) || (coursestatus.courseitems[i].meta.video && coursestatus.courseitems[i].meta.video.length))) {
                            console.log('this should not be');
                            cs.courseitems[i] = coursestatus.courseitems[i];
                        }
                    }
                }
                _this.storage.set('coursestatus_' + coursestatus.course_id + '_' + coursestatus.user_id, cs);
            }
            else {
                _this.storage.set('coursestatus_' + coursestatus.course_id + '_' + coursestatus.user_id, coursestatus);
            }
        });
    };
    CourseStatusService.prototype.finishCourse = function (coursestatus) {
        if (this.courseStatuses.length) {
            for (var i = 0; i < this.courseStatuses.length; i++) {
                if (this.courseStatuses[i].course_id == coursestatus.course_id &&
                    this.courseStatuses[i].user_id == coursestatus.user_id) {
                    this.courseStatuses[i] = coursestatus;
                }
            }
        }
        this.storage.set('coursestatus_' + coursestatus.course_id + '_' + coursestatus.user_id, coursestatus);
        this.activityService.addActivity({
            'user_id': coursestatus.user_id,
            'type': 'submit_course',
            'action': 'submit_course',
            'item_id': coursestatus.course_id,
        });
        var opt = this.auth.getUserAuthorizationHeaders();
        this.storage.remove('profile_' + coursestatus.user_id);
        return this.http.post(this.config.baseUrl + "user/finishcourse/", coursestatus, opt).map(function (response) {
            if (response) {
                if (response.status == 200) {
                    var body = response.json();
                    return body;
                }
            }
        });
    };
    CourseStatusService.prototype.markUnitComplete = function (coursestatus, unit) {
        this.activityService.addActivity({
            'user_id': coursestatus.user_id,
            'primary_id': coursestatus.course_id,
            'secondary_item_id': unit.id,
            'type': 'unit_complete',
            'action': 'unit_completed',
            'content': 'unit_completed',
        });
        this.updateCourseStatus(coursestatus);
        if ('profile' in this.userService) {
            if (this.userService.profile.data) {
                if (Array.isArray(this.userService.profile.data['courses'])) {
                    for (var k = 0; k < this.userService.profile.data['courses'].length; k++) {
                        if (this.userService.profile.data['courses'][k].id == coursestatus.course_id) {
                            this.userService.profile.data['courses'][k].user_progress = coursestatus.progress;
                        }
                    }
                }
            }
        }
    };
    CourseStatusService.prototype.doRefreshStatus = function (status, index) {
        var _this = this;
        console.log('making http call');
        var url = this.config.baseUrl + "user/coursestatus/" + status.course_id + "/item/" + status.courseitems[index].id;
        //let cacheKey = url;
        var k = this.courseStatuses.length;
        var coursestatus = {};
        coursestatus['course_id'] = status.course_id;
        coursestatus['user_id'] = status.user_id;
        coursestatus['progress'] = status.progress;
        coursestatus['courseitems'] = status.courseitems;
        coursestatus['status'] = status.status;
        var opt = this.auth.getUserAuthorizationHeaders();
        this.statusobservable = this.http.get(url, opt)
            .map(function (response) {
            _this.statusobservable = null;
            if (response.status == 400) {
                return "FAILURE";
            }
            else if (response.status == 200) {
                var body = response.json();
                if (body && (body['content'] || body['meta']['iframes'] || body['meta']['video'])) {
                    coursestatus.courseitems[index].content = body['content'];
                    coursestatus.courseitems[index].meta = body['meta'];
                    //Update Stored value in RunTime only when Access enabled
                    if (coursestatus.courseitems[index].meta.access) {
                        console.log('store');
                        //Update Course status in the Course service.
                        _this.activityService.addActivity({
                            'user_id': coursestatus.user_id,
                            'type': 'unit_complete',
                            'action': 'unit_complete',
                            'item_id': coursestatus.course_id,
                            'secondary_item_id': coursestatus.courseitems[index].id,
                        });
                        if (coursestatus.courseitems[index].type != 'quiz') {
                            coursestatus.courseitems[index].status = 1;
                        }
                        _this.updateCourseStatus(coursestatus);
                        _this.config.addToTracker('statusitems', coursestatus.courseitems[index].id);
                        //Async Post call to update course progress.
                        _this.http.post(_this.config.baseUrl + "updatecourse/progress/", { 'course': coursestatus.course_id, 'progress': coursestatus.progress }, opt);
                    }
                    return coursestatus;
                }
            }
        });
        return this.statusobservable;
    };
    CourseStatusService = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Http */],
            __WEBPACK_IMPORTED_MODULE_6__authentication__["a" /* AuthenticationService */],
            __WEBPACK_IMPORTED_MODULE_10__ionic_storage__["b" /* Storage */],
            __WEBPACK_IMPORTED_MODULE_7__config__["a" /* ConfigService */],
            __WEBPACK_IMPORTED_MODULE_8__users__["a" /* UserService */],
            __WEBPACK_IMPORTED_MODULE_9__activity__["a" /* ActivityService */]])
    ], CourseStatusService);
    return CourseStatusService;
}());

//# sourceMappingURL=status.js.map

/***/ }),

/***/ 185:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return QuizService; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_map__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_observable_of__ = __webpack_require__(40);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_observable_of___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_rxjs_add_observable_of__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__config__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__users__ = __webpack_require__(29);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__ionic_storage__ = __webpack_require__(11);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};







var QuizService = /** @class */ (function () {
    function QuizService(http, userService, storage, config) {
        this.http = http;
        this.userService = userService;
        this.storage = storage;
        this.config = config;
        this.quiz_started = [];
        this.quiz_timer = [];
        this.results = [];
        this.isloggedin = false;
    }
    QuizService.prototype.ngOnInit = function () {
    };
    QuizService.prototype.getQuizStarted = function () {
        var _this = this;
        this.storage.get('quiz_started').then(function (res) {
            if (res) {
                _this.quiz_started = res;
            }
        });
    };
    QuizService.prototype.checkQuizStarted = function (quiz_id) {
        if (this.quiz_started.indexOf(quiz_id) > -1) {
            return true;
        }
        return false;
    };
    QuizService.prototype.addQuizStarted = function (quiz_id) {
        if (this.quiz_started.indexOf(quiz_id) == -1) {
            this.quiz_started.push(quiz_id);
            this.storage.set('quiz_started', this.quiz_started);
            this.userService.quizStarted(quiz_id);
        }
    };
    QuizService.prototype.removeQuizStarted = function (quiz_id) {
        var key = this.quiz_started.indexOf(quiz_id);
        this.quiz_started.splice(key, 1);
        this.storage.set('quiz_started', this.quiz_started);
    };
    QuizService.prototype.getRemainingTimer = function (quiz_id, duration) {
        if (this.quiz_started.indexOf(quiz_id) > -1) {
            var k = this.quiz_started.indexOf(quiz_id);
            var current_time = Math.floor(new Date().getTime() / 1000);
            if (!this.quiz_timer[k]) {
                this.quiz_timer[k] = current_time;
                this.storage.set('quiz_timer', this.quiz_timer);
                console.log('Quiz timer saved');
            }
            duration = duration - (current_time - this.quiz_timer[k]);
            console.log('remaining duration :' + duration);
        }
        else {
            console.log('Quiz not started');
        }
        return duration;
    };
    QuizService.prototype.stopTimer = function (quiz_id) {
        if (this.quiz_started.indexOf(quiz_id) > -1) {
            var k = this.quiz_started.indexOf(quiz_id);
            this.quiz_timer.splice(k, 1);
            this.storage.set('quiz_timer', this.quiz_timer);
            console.log('Quiz timer removed');
        }
    };
    QuizService.prototype.getTimer = function (quiz_id) {
        var _this = this;
        return this.storage.get('quiz_timer').then(function (res) {
            if (res) {
                if (_this.quiz_started.indexOf(quiz_id) > -1) {
                    var k = _this.quiz_started.indexOf(quiz_id);
                    return _this.quiz_timer[k];
                }
            }
        });
    };
    QuizService = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Http */],
            __WEBPACK_IMPORTED_MODULE_5__users__["a" /* UserService */],
            __WEBPACK_IMPORTED_MODULE_6__ionic_storage__["b" /* Storage */],
            __WEBPACK_IMPORTED_MODULE_4__config__["a" /* ConfigService */]])
    ], QuizService);
    return QuizService;
}());

//# sourceMappingURL=quiz.js.map

/***/ }),

/***/ 186:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AddEditUnitCommentPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_config__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__services_notes_discussions__ = __webpack_require__(120);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_forms__ = __webpack_require__(17);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var AddEditUnitCommentPage = /** @class */ (function () {
    function AddEditUnitCommentPage(navCtrl, navParams, notesanddiscussion, config) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.notesanddiscussion = notesanddiscussion;
        this.config = config;
        this.comment = 0;
        this.eComment = "";
        this.type = 'new';
        this.comment_id = 0;
        this.unit_id = 0;
        this.postcomment = {};
        this.postcomment = {
            'comment_date': 1,
            'user_id': null,
            'comment_post_ID': 0,
            'comment_content': 0,
        };
    }
    AddEditUnitCommentPage.prototype.ngOnInit = function () {
        this.comment = this.navParams.data.comment;
        this.eComment = this.navParams.data.comment.comment_content;
        this.type = this.navParams.data.type;
        this.unit_id = this.navParams.data.unit_id;
        if (this.comment) {
            this.comment_id = this.comment.comment_ID;
            this.postcomment.comment_date = this.comment.comment_date;
            this.postcomment.user_id = this.comment.user_id;
            this.postcomment.comment_post_ID = this.comment.comment_post_ID;
            this.postcomment.comment_content = this.comment.comment_content;
            this.postcomment.user = this.config.user;
        }
        else {
            this.comment_id = 0;
            this.postcomment.comment_date = '';
            this.postcomment.user_id = this.config.user.id;
            this.postcomment.comment_post_ID = this.unit_id;
            this.postcomment.user = this.config.user;
        }
        console.log(this.postcomment);
        this.initializeForm();
    };
    AddEditUnitCommentPage.prototype.initializeForm = function () {
        if (this.type == "edit") {
            this.commentForm = new __WEBPACK_IMPORTED_MODULE_4__angular_forms__["c" /* FormGroup */]({
                'comment_content': new __WEBPACK_IMPORTED_MODULE_4__angular_forms__["b" /* FormControl */](this.eComment, __WEBPACK_IMPORTED_MODULE_4__angular_forms__["i" /* Validators */].required),
            });
        }
        else {
            this.commentForm = new __WEBPACK_IMPORTED_MODULE_4__angular_forms__["c" /* FormGroup */]({
                'comment_content': new __WEBPACK_IMPORTED_MODULE_4__angular_forms__["b" /* FormControl */](null, __WEBPACK_IMPORTED_MODULE_4__angular_forms__["i" /* Validators */].required),
            });
        }
    };
    AddEditUnitCommentPage.prototype.onSubmit = function () {
        this.postcomment.comment_content = this.commentForm.value.comment_content;
        this.notesanddiscussion.addEditCommentPage(this.comment_id, this.type, this.postcomment);
        this.navCtrl.pop();
    };
    AddEditUnitCommentPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-add-edit-unit-comment',template:/*ion-inline-start:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\pages\add-edit-unit-comment\add-edit-unit-comment.html"*/'\n<ion-header>\n  <ion-navbar  color="transparent" >\n        <ion-buttons start>\n            <button ion-button (click)="navCtrl.pop()">\n                <ion-icon name="md-back"></ion-icon>\n            </button>\n        </ion-buttons>\n        <ion-title *ngIf="(comment_id == 0)" >{{config.get_translation(\'Adding_new_comment\')}}</ion-title>\n        <ion-title *ngIf="(type == \'reply\')">{{config.get_translation(\'Replying_to_comment\')}} : {{comment.user.name}} </ion-title>\n        <ion-title *ngIf="(type == \'edit\')">{{config.get_translation(\'Editing_comment\')}}</ion-title>\n    </ion-navbar>\n\n</ion-header>\n\n\n<ion-content padding>\n	<form [formGroup]="commentForm" (ngSubmit)="onSubmit()">\n        <div class="comment_text_wrapper">\n    		<ion-textarea formControlName="comment_content" placeholder="{{config.get_translation(\'Enter_your_comment\')}}" *ngIf="(type == \'reply\') || (type==\'new\') " elastic></ion-textarea>\n\n    		<ion-textarea formControlName="comment_content"   *ngIf="(type == \'edit\')" elastic>{{comment.comment_content}}</ion-textarea>\n        </div>\n		<button ion-button ion-full>{{config.get_translation(\'Submit_Comment\')}}</button>\n	</form>\n	\n</ion-content>\n'/*ion-inline-end:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\pages\add-edit-unit-comment\add-edit-unit-comment.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_3__services_notes_discussions__["a" /* NotesDiscussionService */], __WEBPACK_IMPORTED_MODULE_2__services_config__["a" /* ConfigService */]])
    ], AddEditUnitCommentPage);
    return AddEditUnitCommentPage;
}());

//# sourceMappingURL=add-edit-unit-comment.js.map

/***/ }),

/***/ 187:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return UploadAssignmentService; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_http__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_map__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_Observable__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_Observable__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_observable_of__ = __webpack_require__(40);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_observable_of___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_add_observable_of__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_observable_fromPromise__ = __webpack_require__(60);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_observable_fromPromise___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_rxjs_add_observable_fromPromise__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_add_operator_toPromise__ = __webpack_require__(59);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_add_operator_toPromise___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_rxjs_add_operator_toPromise__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__authentication__ = __webpack_require__(33);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__config__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__ionic_storage__ = __webpack_require__(11);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


// import { Component,OnInit } from '@angular/core';










var UploadAssignmentService = /** @class */ (function () {
    function UploadAssignmentService(http, platform, storage, toastCtrl, auth, config, loadingCtrl) {
        this.http = http;
        this.platform = platform;
        this.storage = storage;
        this.toastCtrl = toastCtrl;
        this.auth = auth;
        this.config = config;
        this.loadingCtrl = loadingCtrl;
        this.baseUrl = this.config.baseUrl;
    }
    UploadAssignmentService.prototype.get_assignment_data = function ($assignment_id, $force) {
        //console.log('## -> condition check for assignmentId = '+this.loadedassignments.length+' LEngth = '+this.loadedassignments[0]+' chek for ' +$assignment_id +' = '+this.loadedassignments.indexOf($assignment_id));
        var _this = this;
        if ($force === void 0) { $force = null; }
        if (this.config.track.assignments.indexOf($assignment_id) >= 0 && !$force) {
            return __WEBPACK_IMPORTED_MODULE_4_rxjs_Observable__["Observable"].fromPromise(this.storage.get('assignment_' + $assignment_id).then(function (assignment) {
                _this.assignment_res_data_service = assignment;
                return assignment;
            }));
        }
        else {
            var opt = this.auth.getUserAuthorizationHeaders();
            this.assignmentobservable = this.http.post(this.config.baseUrl + "user/content/assignmentId/" + $assignment_id, {}, opt)
                .map(function (response) {
                var body = response.json();
                _this.assignment_res_data_service = body;
                _this.storage.set('assignment_' + $assignment_id, _this.assignment_res_data_service);
                _this.config.addToTracker('assignments', body.id);
                return body;
            });
        }
        return this.assignmentobservable;
    };
    UploadAssignmentService.prototype.upload_assignment_data = function ($assignment_id, value) {
        var _this = this;
        // for body form set 
        var options = {};
        var body_form_data = new FormData();
        body_form_data.append('file', value.file);
        body_form_data.append('comment', value.comment_content);
        var opt = this.auth.getUserAuthorizationHeaders();
        this.assignmentobservable = this.http.post(this.config.baseUrl + "user/upload/assignmentId/" + $assignment_id, body_form_data, opt)
            .map(function (response) {
            var body = response.json();
            var toast = _this.toastCtrl.create({
                message: body.message,
                duration: 500,
                position: 'bottom'
            });
            toast.present();
            _this.assignment_res_data_service.attachment_url = body.attachment_url;
            _this.assignment_res_data_service.comment_content = body.comment_content;
            return body;
        });
        return this.assignmentobservable;
    };
    UploadAssignmentService.prototype.start_assignment = function ($assignment_id) {
        var _this = this;
        var data = {};
        var opt = this.auth.getUserAuthorizationHeaders();
        this.assignmentobservable = this.http.post(this.config.baseUrl + "user/start/assignmentId/" + $assignment_id, data, opt)
            .map(function (response) {
            var body = response.json();
            _this.assignment_res_data_service.flag = 1;
            _this.assignment_res_data_service.message = body.message;
            _this.assignment_res_data_service.start = body.start;
            _this.assignment_res_data_service.duration = body.duration;
            _this.storage.set('assignment_' + $assignment_id, _this.assignment_res_data_service);
            _this.config.addToTracker('assignments', body.id);
            var toast = _this.toastCtrl.create({
                message: body.message,
                duration: 500,
                position: 'bottom'
            });
            toast.present();
            return body;
        });
        return this.assignmentobservable;
    };
    UploadAssignmentService.prototype.toFriendlyTime = function (time) {
        var count = 0;
        var time_labels;
        var measure;
        var key;
        var small_measure;
        var small_count = 0;
        var measures = [
            {
                'label': this.config.get_translation('year'),
                'multi': this.config.get_translation('years'),
                'value': 946080000
            },
            {
                'label': this.config.get_translation('month'),
                'multi': this.config.get_translation('months'),
                'value': 2592000
            },
            {
                'label': this.config.get_translation('week'),
                'multi': this.config.get_translation('weeks'),
                'value': 604800
            },
            {
                'label': this.config.get_translation('day'),
                'multi': this.config.get_translation('days'),
                'value': 86400
            },
            {
                'label': this.config.get_translation('hour'),
                'multi': this.config.get_translation('hours'),
                'value': 3600
            },
            {
                'label': this.config.get_translation('minute'),
                'multi': this.config.get_translation('minutes'),
                'value': 60
            },
            {
                'label': this.config.get_translation('second'),
                'multi': this.config.get_translation('seconds'),
                'value': 1
            },
        ];
        if (time <= 0) {
            return this.config.get_translation('expired');
        }
        for (var i = 0; i < measures.length; i++) {
            measure = measures[i];
            key = i;
            if (measure.value < time) {
                count = Math.floor(time / measure.value);
                break;
            }
        }
        time_labels = count + ' ' + ((count > 1) ? measure.multi : measure.label);
        if (measure.value > 1) { // Ensure we're not on last element
            small_measure = measures[key + 1];
            small_count = Math.floor((time % measure.value) / small_measure.value);
            if (small_count)
                time_labels += ', ' + small_count + ' ' + ((small_count > 1) ? small_measure.multi : small_measure.label);
        }
        return time_labels;
    };
    UploadAssignmentService = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2__angular_http__["b" /* Http */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["o" /* Platform */],
            __WEBPACK_IMPORTED_MODULE_10__ionic_storage__["b" /* Storage */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* ToastController */],
            __WEBPACK_IMPORTED_MODULE_8__authentication__["a" /* AuthenticationService */],
            __WEBPACK_IMPORTED_MODULE_9__config__["a" /* ConfigService */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* LoadingController */]])
    ], UploadAssignmentService);
    return UploadAssignmentService;
}());

//# sourceMappingURL=upload_assignment.js.map

/***/ }),

/***/ 188:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ContactPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_forms__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__services_config__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__services_users__ = __webpack_require__(29);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__profile_profile__ = __webpack_require__(22);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__search_search__ = __webpack_require__(61);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};







var ContactPage = /** @class */ (function () {
    function ContactPage(config, formBuilder, toastCtrl, modalCtrl, userService) {
        this.config = config;
        this.formBuilder = formBuilder;
        this.toastCtrl = toastCtrl;
        this.modalCtrl = modalCtrl;
        this.userService = userService;
        this.profilePage = __WEBPACK_IMPORTED_MODULE_5__profile_profile__["a" /* ProfilePage */];
        ////Validators.pattern(/[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/)
        ///
        this.contact = formBuilder.group({
            name: ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["i" /* Validators */].required],
            email: ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["i" /* Validators */].required],
            message: ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["i" /* Validators */].required],
        });
        if (this.config.isLoggedIn) {
            this.userdata = { 'isLoggedIn': this.config.isLoggedIn, 'User': this.config.user };
        }
    }
    ContactPage.prototype.logForm = function () {
        var _this = this;
        console.log(this.contact.value);
        this.userService.contact(this.contact.value).subscribe(function (res) {
            if (res) {
                var toast = _this.toastCtrl.create({
                    message: res.message,
                    duration: 1000,
                    position: 'bottom'
                });
                toast.present();
            }
        });
    };
    ContactPage.prototype.openSearch = function () {
        var modal = this.modalCtrl.create(__WEBPACK_IMPORTED_MODULE_6__search_search__["a" /* SearchPage */]);
        modal.present();
    };
    ContactPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-contact',template:/*ion-inline-start:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\pages\contact\contact.html"*/'<ion-header>\n    <ion-navbar  color="transparent" >\n        <ion-buttons start>\n            <button ion-button menuToggle>\n                <ion-icon name="md-menu"></ion-icon>\n            </button>\n        </ion-buttons>\n        <ion-title>{{config.get_translation(\'contact_page\')}}</ion-title>\n            <ion-buttons end>\n                <button ion-button (click)="openSearch()">\n                    <ion-icon name="md-search"></ion-icon>\n                </button>\n            </ion-buttons>\n            <ion-buttons end>\n                <button ion-button [navPush]="profilePage" [navParams]="userdata">\n                    <ion-icon name="md-contact" *ngIf="!config.isLoggedIn"></ion-icon>\n                    <img *ngIf="config.isLoggedIn" [src]="config.user?.avatar">\n                </button>\n            </ion-buttons>\n    </ion-navbar>\n</ion-header>\n<ion-content padding>\n    <ion-grid>\n        <ion-row>\n            <ion-col col-12 col-sm-6>\n\n                <form [formGroup]="contact" (ngSubmit)="logForm()">\n                    <ion-item>\n                        <ion-label floating>{{config.get_translation(\'contact_name\')}}</ion-label>\n                        <ion-input type="text" formControlName="name"></ion-input>\n                    </ion-item>\n                    <ion-item>\n                        <ion-label floating>{{config.get_translation(\'contact_email\')}}</ion-label>\n                        <ion-input type="text" formControlName="email"></ion-input>\n                    </ion-item>\n                    <ion-item>\n                        <ion-label floating>{{config.get_translation(\'contact_message\')}}</ion-label>\n                        <ion-textarea formControlName="message" name="message"></ion-textarea>\n                    </ion-item>\n                    <ion-item>\n                        <button ion-button type="submit" block [disabled]="!contact.valid"><ion-icon name="md-send"></ion-icon></button>\n                    </ion-item>\n                </form>\n                <ion-list>\n                    <ion-list-header>{{config.get_translation(\'contact_follow_us\')}}</ion-list-header>\n                <!-- <ion-item>\n                    <ion-icon name="logo-twitter" item-left></ion-icon>\n                        @{{config.get_translation(\'config.contactinfo.twitter\')}}\n                </ion-item> -->\n                <!-- <ion-item>\n                    <ion-icon name="logo-facebook" item-left></ion-icon>\n                        @{{config.get_translation(\'config.contactinfo.facebook\')}}\n                </ion-item>\n                <ion-item>\n                    <ion-icon name="logo-instagram" item-left></ion-icon>\n                        @{{config.get_translation(\'config.contactinfo.instagram\')}}\n                </ion-item> -->\n               \n            </ion-list>\n        </ion-col>\n    </ion-row>\n</ion-grid>\n</ion-content>\n'/*ion-inline-end:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\pages\contact\contact.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_3__services_config__["a" /* ConfigService */],
            __WEBPACK_IMPORTED_MODULE_2__angular_forms__["a" /* FormBuilder */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* ToastController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* ModalController */],
            __WEBPACK_IMPORTED_MODULE_4__services_users__["a" /* UserService */]])
    ], ContactPage);
    return ContactPage;
}());

//# sourceMappingURL=contact.js.map

/***/ }),

/***/ 189:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SideMenuService; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__config__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__pages_tabs_tabs__ = __webpack_require__(57);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__pages_contact_contact__ = __webpack_require__(188);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__pages_blog_blog__ = __webpack_require__(183);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__pages_directory_directory__ = __webpack_require__(72);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__pages_offline_offline__ = __webpack_require__(470);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};







var SideMenuService = /** @class */ (function () {
    function SideMenuService(config) {
        this.config = config;
        this.pages = [];
    }
    SideMenuService.prototype.set_Pages = function () {
        this.pages = [
            { title: this.config.get_translation('home_menu_title'), component: __WEBPACK_IMPORTED_MODULE_2__pages_tabs_tabs__["a" /* TabsPage */], index: 0, hide: false },
            { title: this.config.get_translation('directory_menu_title'), component: __WEBPACK_IMPORTED_MODULE_5__pages_directory_directory__["a" /* DirectoryPage */], index: 2, hide: false },
            //{ title: this.config.get_translation('instructors_menu_title'), component: InstructorsPage, index: 3, hide: false },
            { title: this.config.get_translation('blog_menu_title'), component: __WEBPACK_IMPORTED_MODULE_4__pages_blog_blog__["a" /* BlogPage */], index: 1, hide: false },
            { title: 'الدورات المخزنة', component: __WEBPACK_IMPORTED_MODULE_6__pages_offline_offline__["a" /* OfflinePage */], index: 5, hide: false },
            { title: this.config.get_translation('contact_menu_title'), component: __WEBPACK_IMPORTED_MODULE_3__pages_contact_contact__["a" /* ContactPage */], index: 4, hide: false }
        ];
        /*if (this.config.batch.enable_batch) {
            this.pages.push({ title: this.config.get_translation('group_directory'), component: GroupdirectoryPage, index: 5, hide: false });

        }

        if (this.config.members_directory.enable_members_directory) {
            this.pages.push({ title: this.config.get_translation('members_directory'), component: MembersDirectoryPage, index: 6, hide: false });
        }

        if (this.config.forum.enable_forum) {
            this.pages.push({ title: this.config.get_translation('forum_directory'), component: ForumdirectoryPage, index: 6, hide: false });
        }*/
    };
    SideMenuService = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__config__["a" /* ConfigService */]])
    ], SideMenuService);
    return SideMenuService;
}());

//# sourceMappingURL=sidemenu.js.map

/***/ }),

/***/ 191:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ImgcacheService; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__ionic_native_file__ = __webpack_require__(88);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_ionic_angular__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_imgcache_js__ = __webpack_require__(643);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_imgcache_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_imgcache_js__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_ReplaySubject__ = __webpack_require__(92);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_ReplaySubject___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_ReplaySubject__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_operators__ = __webpack_require__(472);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_operators___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_operators__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_observable_bindCallback__ = __webpack_require__(554);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_observable_bindCallback___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_bindCallback__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};







/**
 * This service is charged of provide the methods to cache the images
 */
var ImgcacheService = /** @class */ (function () {
    function ImgcacheService(platform, file) {
        this.platform = platform;
        this.file = file;
        this.initNotifier$ = new __WEBPACK_IMPORTED_MODULE_4_rxjs_ReplaySubject__["ReplaySubject"]();
        // change on production mode
        __WEBPACK_IMPORTED_MODULE_3_imgcache_js___default.a.options.debug = true;
    }
    Object.defineProperty(ImgcacheService.prototype, "notifier$", {
        get: function () {
            return this.initNotifier$.asObservable();
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Init imgCache library
     * @return {Promise}
     */
    ImgcacheService.prototype.initImgCache = function () {
        var _this = this;
        var init$ = Object(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_bindCallback__["bindCallback"])(__WEBPACK_IMPORTED_MODULE_3_imgcache_js___default.a.init)();
        return init$.pipe(Object(__WEBPACK_IMPORTED_MODULE_5_rxjs_operators__["take"])(1), Object(__WEBPACK_IMPORTED_MODULE_5_rxjs_operators__["tap"])(function () { return _this.initNotifier$.next('init'); }));
    };
    /**
     * Cache is image by using a url. If the image is already cached this method
     * will return the URL
     * @param src {string}
     */
    ImgcacheService.prototype.cache = function (src) {
        var _this = this;
        return this.notifier$.pipe(Object(__WEBPACK_IMPORTED_MODULE_5_rxjs_operators__["switchMapTo"])(this.isCached(src)
            .pipe(Object(__WEBPACK_IMPORTED_MODULE_5_rxjs_operators__["flatMap"])(function (_a) {
            var path = _a[0], success = _a[1];
            return success ? _this.getCachedFileURL(path) : _this.cacheFile(path);
        }), Object(__WEBPACK_IMPORTED_MODULE_5_rxjs_operators__["map"])(function (url) {
            /*if (this.platform.is('ios')) {
              return this.normalizeURlWKWview(url);
            }*/
            return url;
        }))));
    };
    /**
     * WKWebview doesn't accept urls with file;// or cvdfile:// protocols.
     * The url is formatted and fix to find the img
     * @param url
     * @return {string} - url formatted
     */
    ImgcacheService.prototype.normalizeURlWKWview = function (url) {
        var urlIos = Object(__WEBPACK_IMPORTED_MODULE_2_ionic_angular__["s" /* normalizeURL */])(this.file.applicationStorageDirectory) + "Library/files/" + Object(__WEBPACK_IMPORTED_MODULE_2_ionic_angular__["s" /* normalizeURL */])(url);
        return urlIos.replace('/localhost/persistent', '');
    };
    /**
     * Get file URL if cached
     * @param src - image url
     */
    ImgcacheService.prototype.getCachedFileURL = function (src) {
        return Object(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_bindCallback__["bindCallback"])(__WEBPACK_IMPORTED_MODULE_3_imgcache_js___default.a.getCachedFileURL)(src)
            .pipe(Object(__WEBPACK_IMPORTED_MODULE_5_rxjs_operators__["map"])(function (urls) { return urls[1]; }));
    };
    /**
     * Cache image using a url
     * @param src {string}
     */
    ImgcacheService.prototype.cacheFile = function (src) {
        return Object(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_bindCallback__["bindCallback"])(__WEBPACK_IMPORTED_MODULE_3_imgcache_js___default.a.cacheFile)(src);
    };
    /**
     * Check if image is already cached
     * @param src
     */
    ImgcacheService.prototype.isCached = function (src) {
        return Object(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_bindCallback__["bindCallback"])(__WEBPACK_IMPORTED_MODULE_3_imgcache_js___default.a.isCached)(src);
    };
    ImgcacheService = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2_ionic_angular__["o" /* Platform */], __WEBPACK_IMPORTED_MODULE_1__ionic_native_file__["a" /* File */]])
    ], ImgcacheService);
    return ImgcacheService;
}());

//# sourceMappingURL=imageCache.js.map

/***/ }),

/***/ 205:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MembersService; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_http__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_map__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_observable_of__ = __webpack_require__(40);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_observable_of___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_add_observable_of__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_observable_fromPromise__ = __webpack_require__(60);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_observable_fromPromise___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_add_observable_fromPromise__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_toPromise__ = __webpack_require__(59);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_toPromise___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_toPromise__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__authentication__ = __webpack_require__(33);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__config__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__ionic_storage__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__chat__ = __webpack_require__(87);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


// import { Component,OnInit } from '@angular/core';










var MembersService = /** @class */ (function () {
    function MembersService(http, storage, toastCtrl, auth, config, loadingCtrl, chatService) {
        this.http = http;
        this.storage = storage;
        this.toastCtrl = toastCtrl;
        this.auth = auth;
        this.config = config;
        this.loadingCtrl = loadingCtrl;
        this.chatService = chatService;
    }
    MembersService.prototype.get_all_members = function (action, args) {
        var $this = this;
        return new Promise(function (resolve) {
            switch (action) {
                case 'refresh':
                    $this.all_members = [];
                    $this.storage.remove('allmembers').then(function (x) {
                        $this.get_members(action, args).then(function (res) {
                            console.log('refresh');
                            console.log(res);
                            resolve(res);
                        });
                    });
                    break;
                case 'ngoninit':
                    $this.storage.get('allmembers').then(function (allmembers) {
                        if (allmembers && allmembers.length) {
                            console.log('ngoninit n');
                            console.log(allmembers);
                            $this.all_members = allmembers;
                            $this.call_for_online_status(allmembers); //online-offline-status
                            resolve(allmembers);
                        }
                        else {
                            $this.get_members(action, args).then(function (res) {
                                console.log(res);
                                resolve(res);
                            });
                        }
                    });
                    break;
                case 'infinite':
                    if ($this.all_members && $this.all_members.length) {
                        $this.get_members(action, args).then(function (res) {
                            console.log(res);
                            resolve(res);
                        });
                    }
                    break;
                case 'search':
                    $this.all_members = [];
                    $this.get_members(action, args).then(function (res) {
                        console.log(res);
                        resolve(res);
                    });
                    break;
                case 'sortby':
                    $this.all_members = [];
                    $this.get_members(action, args).then(function (res) {
                        console.log(res);
                        resolve(res);
                    });
                    break;
                case 'filterby':
                    $this.all_members = [];
                    $this.get_members(action, args).then(function (res) {
                        console.log(res);
                        resolve(res);
                    });
                    break;
                default:
            }
        });
    };
    MembersService.prototype.get_members = function (action, args) {
        var _this = this;
        var $this = this;
        args.per_page = $this.config.members_directory.per_page;
        args.page = ($this.all_members && $this.all_members.length) ? ($this.all_members.length / $this.config.members_directory.per_page) + 1 : 1;
        var data = args;
        return new Promise(function (resolve) {
            $this.http.post($this.config.baseUrl + "user/getallmembers", data)
                .map(function (res) { return res.json(); })
                .subscribe(function (res) {
                if (res.status) {
                    if (res.data.length) {
                        res.data.map(function (x, i) {
                            if ($this.all_members) {
                                $this.all_members.push(x);
                            }
                            else {
                                $this.all_members = [];
                            }
                        });
                        $this.call_for_online_status(res.data); //online-offline-status
                    }
                }
                else {
                    $this.all_members = [];
                }
                _this.storage.set('allmembers', $this.all_members);
                // this.config.addToTracker('allmembers',parseInt($this.all_members.length));
                resolve(res.data);
            });
        });
    };
    MembersService.prototype.call_for_online_status = function (allmembers) {
        if (this.config.chat.enable_chat) {
            var $this_1 = this;
            if (Array.isArray(allmembers) && Array.isArray(allmembers) && $this_1.all_members.length) {
                allmembers.map(function (x, i) {
                    var index_m = $this_1.all_members.findIndex(function (element) { return element.ID == x.ID; });
                    if ((index_m > -1) && ($this_1.all_members[index_m].ID == x.ID)) {
                        $this_1.chatService.check_user_status(x.ID).then(function (status) {
                            $this_1.all_members[index_m].status = status;
                        });
                    }
                });
            }
        }
    };
    MembersService.prototype.get_member_profile_details = function (current_member_id, refresh) {
        if (refresh === void 0) { refresh = false; }
        var $this = this;
        return new Promise(function (resolve) {
            var track_member = $this.config.trackComponents('members');
            if (Array.isArray(track_member) && track_member.indexOf(current_member_id) != -1 && !refresh) {
                $this.storage.get('member_' + current_member_id).then(function (member_deatils) {
                    if (member_deatils) {
                        resolve(member_deatils);
                    }
                    else {
                        var data = {
                            'user_id': current_member_id
                        };
                        $this.http.post($this.config.baseUrl + "user/getmemberbyid", data)
                            .map(function (res) { return res.json(); })
                            .subscribe(function (res) {
                            if (res.status && res.data) {
                                $this.storage.set('member_' + current_member_id, res.data);
                                $this.config.addToTracker('members', parseInt(current_member_id));
                                resolve(res.data);
                            }
                            else {
                                resolve({});
                            }
                        });
                    }
                });
            }
            else {
                var data = {
                    'user_id': current_member_id
                };
                $this.http.post($this.config.baseUrl + "user/getmemberbyid", data)
                    .map(function (res) { return res.json(); })
                    .subscribe(function (res) {
                    if (res.status && res.data) {
                        $this.storage.set('member_' + current_member_id, res.data);
                        $this.config.addToTracker('members', parseInt(current_member_id));
                        resolve(res.data);
                    }
                    else {
                        resolve({});
                    }
                });
            }
        });
    };
    MembersService = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2__angular_http__["b" /* Http */],
            __WEBPACK_IMPORTED_MODULE_9__ionic_storage__["b" /* Storage */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* ToastController */],
            __WEBPACK_IMPORTED_MODULE_7__authentication__["a" /* AuthenticationService */],
            __WEBPACK_IMPORTED_MODULE_8__config__["a" /* ConfigService */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* LoadingController */],
            __WEBPACK_IMPORTED_MODULE_10__chat__["a" /* ChatService */]])
    ], MembersService);
    return MembersService;
}());

//# sourceMappingURL=members.js.map

/***/ }),

/***/ 206:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return OrderPipe; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return SafeHtmlPipe; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return SafePipe; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_platform_browser__ = __webpack_require__(44);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var OrderPipe = /** @class */ (function () {
    function OrderPipe() {
    }
    OrderPipe_1 = OrderPipe;
    OrderPipe.prototype.transform = function (value, expression, reverse) {
        if (!value) {
            return value;
        }
        var isArray = value instanceof Array;
        if (isArray) {
            return this.sortArray(value, expression, reverse);
        }
        if (typeof value === 'object') {
            return this.transformObject(value, expression, reverse);
        }
        return value;
    };
    /**
     * Sort array
     *
     * @param value
     * @param expression
     * @param reverse
     * @returns {any[]}
     */
    OrderPipe.prototype.sortArray = function (value, expression, reverse) {
        var isDeepLink = expression && expression.indexOf('.') !== -1;
        if (isDeepLink) {
            expression = OrderPipe_1.parseExpression(expression);
        }
        var array = value.sort(function (a, b) {
            if (!expression) {
                return a > b ? 1 : -1;
            }
            if (!isDeepLink) {
                return a[expression] > b[expression] ? 1 : -1;
            }
            return OrderPipe_1.getValue(a, expression) > OrderPipe_1.getValue(b, expression) ? 1 : -1;
        });
        if (reverse) {
            return array.reverse();
        }
        return array;
    };
    /**
     * Transform Object
     *
     * @param value
     * @param expression
     * @param reverse
     * @returns {any[]}
     */
    OrderPipe.prototype.transformObject = function (value, expression, reverse) {
        var parsedExpression = OrderPipe_1.parseExpression(expression);
        var lastPredicate = parsedExpression.pop();
        var oldValue = OrderPipe_1.getValue(value, parsedExpression);
        if (!(oldValue instanceof Array)) {
            parsedExpression.push(lastPredicate);
            lastPredicate = null;
            oldValue = OrderPipe_1.getValue(value, parsedExpression);
        }
        if (!oldValue) {
            return value;
        }
        var newValue = this.transform(oldValue, lastPredicate, reverse);
        OrderPipe_1.setValue(value, newValue, parsedExpression);
        return value;
    };
    /**
     * Parse expression, split into items
     * @param expression
     * @returns {string[]}
     */
    OrderPipe.parseExpression = function (expression) {
        expression = expression.replace(/\[(\w+)\]/g, '.$1');
        expression = expression.replace(/^\./, '');
        return expression.split('.');
    };
    /**
     * Get value by expression
     *
     * @param object
     * @param expression
     * @returns {any}
     */
    OrderPipe.getValue = function (object, expression) {
        for (var i = 0, n = expression.length; i < n; ++i) {
            var k = expression[i];
            if (!(k in object)) {
                return;
            }
            object = object[k];
        }
        return object;
    };
    /**
     * Set value by expression
     *
     * @param object
     * @param value
     * @param expression
     */
    OrderPipe.setValue = function (object, value, expression) {
        var i;
        for (i = 0; i < expression.length - 1; i++) {
            object = object[expression[i]];
        }
        object[expression[i]] = value;
    };
    var OrderPipe_1;
    OrderPipe = OrderPipe_1 = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Pipe"])({
            name: 'orderBy',
            pure: false
        })
    ], OrderPipe);
    return OrderPipe;
}());

var SafeHtmlPipe = /** @class */ (function () {
    function SafeHtmlPipe(sanitized) {
        this.sanitized = sanitized;
    }
    SafeHtmlPipe.prototype.transform = function (value) {
        return this.sanitized.bypassSecurityTrustHtml(value);
    };
    SafeHtmlPipe = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Pipe"])({
            name: 'safeHtml',
            pure: false
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__angular_platform_browser__["c" /* DomSanitizer */]])
    ], SafeHtmlPipe);
    return SafeHtmlPipe;
}());

var SafePipe = /** @class */ (function () {
    function SafePipe(sanitizer) {
        this.sanitizer = sanitizer;
    }
    SafePipe.prototype.transform = function (url) {
        return this.sanitizer.bypassSecurityTrustResourceUrl(url);
    };
    SafePipe = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Pipe"])({ name: 'safeUrl' }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__angular_platform_browser__["c" /* DomSanitizer */]])
    ], SafePipe);
    return SafePipe;
}());

//# sourceMappingURL=orderby.js.map

/***/ }),

/***/ 22:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ProfilePage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_forms__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__ionic_native_in_app_browser__ = __webpack_require__(58);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_toPromise__ = __webpack_require__(59);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_toPromise___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_toPromise__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__services_authentication__ = __webpack_require__(33);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__services_users__ = __webpack_require__(29);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__services_config__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__services_group__ = __webpack_require__(70);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__services_forum__ = __webpack_require__(48);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__services_attendance__ = __webpack_require__(181);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__login_login__ = __webpack_require__(322);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__register_register__ = __webpack_require__(323);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__course_status_course_status__ = __webpack_require__(116);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__course_course__ = __webpack_require__(62);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__result_result__ = __webpack_require__(330);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__tabs_tabs__ = __webpack_require__(57);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__ionic_storage__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__ionic_native_camera__ = __webpack_require__(71);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19_chart_js__ = __webpack_require__(640);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19_chart_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_19_chart_js__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_20__ionic_native_barcode_scanner__ = __webpack_require__(463);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



//import { InAppBrowser } from 'ionic-native';


















var ProfilePage = /** @class */ (function () {
    function ProfilePage(navCtrl, viewCtrl, toastCtrl, navParams, auth, userService, platform, config, storage, formBuilder, loadingCtrl, action, alertCtrl, camera, iab, groupService, forum, attendance, barcodeScanner) {
        this.navCtrl = navCtrl;
        this.viewCtrl = viewCtrl;
        this.toastCtrl = toastCtrl;
        this.navParams = navParams;
        this.auth = auth;
        this.userService = userService;
        this.platform = platform;
        this.config = config;
        this.storage = storage;
        this.formBuilder = formBuilder;
        this.loadingCtrl = loadingCtrl;
        this.action = action;
        this.alertCtrl = alertCtrl;
        this.camera = camera;
        this.iab = iab;
        this.groupService = groupService;
        this.forum = forum;
        this.attendance = attendance;
        this.barcodeScanner = barcodeScanner;
        this.isLoggedIn = false;
        this.register = false;
        this.signin = false;
        this.currentTab = 'dashboard';
        this.currenttimestamp = 0;
        this.courseStatusPage = __WEBPACK_IMPORTED_MODULE_13__course_status_course_status__["a" /* CourseStatusPage */];
        this.coursePage = __WEBPACK_IMPORTED_MODULE_14__course_course__["a" /* CoursePage */];
        this.resultPage = __WEBPACK_IMPORTED_MODULE_15__result_result__["a" /* ResultPage */];
        this.mycoursesactivetab = 0;
        this.more = {
            'courses': 1,
            'results': 1,
            'gradebook': 1,
            'activity': 1,
            'notifications': 1,
            'topic': 1,
            'reply': 1
        };
        /* filter options */
        this.filterby = '';
        this.image = '';
        this.chatTabslist = [];
        this.toggle_mark_unmark = '';
        this.register = false;
        this.signin = false;
        this.signupForm = formBuilder.group({
            username: ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["i" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["i" /* Validators */].required, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["i" /* Validators */].maxLength(30),
                    __WEBPACK_IMPORTED_MODULE_2__angular_forms__["i" /* Validators */].pattern(/[a-zA-Z0-9_]+/)]),
            ],
            email: ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["i" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["i" /* Validators */].required, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["i" /* Validators */].maxLength(40),
                    __WEBPACK_IMPORTED_MODULE_2__angular_forms__["i" /* Validators */].pattern(/[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/)])],
            password: ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["i" /* Validators */].required],
        });
        this.signinForm = formBuilder.group({
            username: ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["i" /* Validators */].required],
            password: ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["i" /* Validators */].required],
        });
        this.chatTabslist = [
            {
                'key': 'marked',
                'label': this.config.get_translation('marked_attendance'),
                'icon': 'ios-chatbubbles'
            },
            {
                'key': 'unmarked',
                'label': this.config.get_translation('unmarked_attendance'),
                'icon': 'md-person-add'
            }
        ];
    }
    ProfilePage.prototype.ionViewDidLoad = function () {
        this.filterSelectOptions = {
            title: this.config.get_translation('filter_options'),
            okText: this.config.get_translation('okay'),
            cancelText: this.config.get_translation('dismiss'),
        };
    };
    ProfilePage.prototype.ngOnInit = function () {
        var _this = this;
        this.currenttimestamp = Math.floor(new Date().getTime() / 1000);
        ;
        this.filterargs = { type: 'number' };
        this.isLoggedIn = this.config.isLoggedIn;
        this.user = this.config.user;
        if (!this.config.settings.access_token) {
            this.isLoggedIn = false;
        }
        if (this.isLoggedIn) {
            //this.profileTab = this.navParams.data.index;
            this.userService.getProfile(this.user).subscribe(function (res) {
                _this.profile = res;
                //this.profileSlides.slideTo(this.profileTab, 0);
            });
        }
    };
    ProfilePage.prototype.ionViewDidEnter = function () {
        var _this = this;
        if (this.config.isLoggedIn) {
            this.userService.getResults();
            this.userService.getQuizChart().subscribe(function (res) {
                if (res && _this.barCanvas) {
                    _this.barChart = new __WEBPACK_IMPORTED_MODULE_19_chart_js__["Chart"](_this.barCanvas.nativeElement, {
                        type: 'bar',
                        data: {
                            labels: res.labels,
                            datasets: [{
                                    label: _this.config.get_translation('scores'),
                                    data: res.data,
                                }]
                        },
                        options: {
                            scales: {
                                yAxes: [{
                                        ticks: {
                                            beginAtZero: true
                                        }
                                    }]
                            }
                        }
                    });
                }
            });
            this.userService.getCourseChart().subscribe(function (res) {
                if (res && _this.lineCanvas) {
                    _this.lineChart = new __WEBPACK_IMPORTED_MODULE_19_chart_js__["Chart"](_this.lineCanvas.nativeElement, {
                        type: 'line',
                        data: {
                            labels: res.labels,
                            datasets: [
                                {
                                    label: _this.config.get_translation('percentage'),
                                    fill: false,
                                    lineTension: 0.1,
                                    backgroundColor: "rgba(75,192,192,0.4)",
                                    borderColor: "rgba(75,192,192,1)",
                                    borderCapStyle: 'butt',
                                    borderDash: [],
                                    borderDashOffset: 0.0,
                                    borderJoinStyle: 'miter',
                                    pointBorderColor: "rgba(75,192,192,1)",
                                    pointBackgroundColor: "#fff",
                                    pointBorderWidth: 1,
                                    pointHoverRadius: 5,
                                    pointHoverBackgroundColor: "rgba(75,192,192,1)",
                                    pointHoverBorderColor: "rgba(220,220,220,1)",
                                    pointHoverBorderWidth: 2,
                                    pointRadius: 1,
                                    pointHitRadius: 10,
                                    data: res.data,
                                    spanGaps: false,
                                }
                            ]
                        }
                    });
                }
            });
        }
        if (this.config.isLoggedIn) {
            //slidto my given index if specified
            this.profileTab = this.navParams.data.index;
            this.profileSlides.slideTo(this.profileTab, 0);
        }
    };
    ProfilePage.prototype.showSignIn = function () {
        console.log(' ==>  ' + this.config.settings.login);
        if (this.config.settings.login == 'app') {
            this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_11__login_login__["a" /* LoginPage */]);
        }
        else {
            this.auth.signIn();
        }
    };
    ProfilePage.prototype.updateAvatar = function (avatar) {
        if (avatar) {
            this.config.user.avatar = avatar;
        }
    };
    ProfilePage.prototype.onFbLogin = function () {
        var _this = this;
        var env = this;
        var loading = this.loadingCtrl.create({
            content: '<img src="assets/images/bubbles.svg">',
            duration: 5000,
            spinner: 'hide',
            showBackdrop: true,
        });
        this.auth.fbLogin().subscribe(function (res) {
            loading.present();
            res.subscribe(function (fbBody) {
                console.log('subscribe');
                console.log(fbBody);
                if (fbBody) {
                    loading.present();
                    //let intv = setInterval(function(){
                    console.log('fb object used for login');
                    console.log(fbBody);
                    var useravtar_1 = fbBody.avatar;
                    console.log(useravtar_1);
                    //if(!this.auth.fbloggedin){
                    _this.auth.signinUser({ username: fbBody.email, fbid: fbBody.fbid }).subscribe(function (response) {
                        var body2 = response;
                        console.log('Sign In function response');
                        console.log(body2);
                        if (body2.status) {
                            console.log('Using env');
                            console.log(fbBody.avatar);
                            console.log(useravtar_1);
                            if (useravtar_1) {
                                env.config.user.avatar = useravtar_1;
                            }
                            loading.dismiss();
                            env.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_16__tabs_tabs__["a" /* TabsPage */]);
                        }
                        else {
                            env.auth.registerUser({ username: fbBody.email, email: fbBody.email, fbid: fbBody.fbid }).subscribe(function (res) {
                                if (res) {
                                    console.log('register response');
                                    var registerbody = res;
                                    if (registerbody.status) {
                                        env.config.user.avatar = useravtar_1;
                                        var toast = env.toastCtrl.create({
                                            message: registerbody.message,
                                            duration: 1000,
                                            position: 'bottom'
                                        });
                                        toast.present();
                                        toast.onDidDismiss(function () {
                                            env.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_16__tabs_tabs__["a" /* TabsPage */]);
                                        });
                                    }
                                    else {
                                        var rmessage = registerbody.message;
                                        if (!rmessage) {
                                            rmessage = 'Network Error !';
                                        }
                                        var toast = env.toastCtrl.create({
                                            message: rmessage,
                                            duration: 1000,
                                            position: 'bottom'
                                        });
                                        toast.present();
                                    }
                                }
                                loading.dismiss();
                            });
                        }
                    });
                    //clearInterval(intv);
                    //}
                    //},1000); 
                }
                else {
                    console.log('loading dismissed');
                    loading.dismiss();
                }
            });
        });
    };
    ProfilePage.prototype.onGoogleLogin = function () {
        var _this = this;
        var env = this;
        var loading = this.loadingCtrl.create({
            content: '<img src="assets/images/bubbles.svg">',
            duration: 5000,
            spinner: 'hide',
            showBackdrop: true,
        });
        this.auth.googleLogin().subscribe(function (gBody) {
            console.log('subscribe');
            console.log(gBody);
            if (gBody) {
                loading.present();
                //let intv = setInterval(function(){
                console.log('google object used for login');
                console.log(gBody);
                var useravtar_2 = gBody.avatar;
                console.log(useravtar_2);
                //if(!this.auth.fbloggedin){
                _this.auth.signinUser({ username: gBody.email, fbid: gBody.gid }).subscribe(function (response) {
                    var body2 = response;
                    console.log('Sign In function response');
                    console.log(body2);
                    if (body2.status) {
                        console.log('Using env');
                        console.log(gBody.avatar);
                        console.log(useravtar_2);
                        if (useravtar_2) {
                            env.config.user.avatar = useravtar_2;
                        }
                        loading.dismiss();
                        env.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_16__tabs_tabs__["a" /* TabsPage */]);
                    }
                    else {
                        env.auth.registerUser({ username: gBody.email, email: gBody.email, fbid: gBody.gid }).subscribe(function (res) {
                            if (res) {
                                console.log('register response');
                                var registerbody = res;
                                if (registerbody.status) {
                                    //console.log('Token -'+body.token.access_token)
                                    env.config.user.avatar = useravtar_2;
                                    var toast = env.toastCtrl.create({
                                        message: registerbody.message,
                                        duration: 1000,
                                        position: 'bottom'
                                    });
                                    toast.present();
                                    toast.onDidDismiss(function () {
                                        env.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_16__tabs_tabs__["a" /* TabsPage */]);
                                    });
                                }
                                else {
                                    var rmessage = registerbody.message;
                                    if (!rmessage) {
                                        rmessage = 'Network Error !';
                                    }
                                    var toast = env.toastCtrl.create({
                                        message: rmessage,
                                        duration: 1000,
                                        position: 'bottom'
                                    });
                                    toast.present();
                                }
                            }
                            loading.dismiss();
                        });
                    }
                });
                //clearInterval(intv);
                //}
                //},1000); 
            }
        });
    };
    ProfilePage.prototype.onSignIn = function () {
        var _this = this;
        if (this.signinForm.valid) {
            console.log('signinUser subscribe');
            console.log(this.signinForm.valid);
            var loading_1 = this.loadingCtrl.create({
                content: '<img src="assets/images/bubbles.svg">',
                duration: 15000,
                spinner: 'hide',
                showBackdrop: true,
            });
            loading_1.present();
            var env_1 = this;
            this.auth.signinUser(this.signinForm.value).subscribe(function (res) {
                console.log('signinUser subscribe');
                console.log(res);
                if (res) {
                    var alert_1 = _this.alertCtrl.create({
                        title: res.message,
                        buttons: [
                            {
                                text: _this.config.get_translation('dismiss'),
                                role: 'cancel',
                                handler: function (data) {
                                },
                            },
                        ]
                    });
                    if (res.status) {
                        env_1.userService.getUser();
                        alert_1.onDidDismiss(function () {
                            /*if(env.navCtrl){
                                env.navCtrl.setRoot(TabsPage);
                            }*/
                        });
                    }
                    alert_1.present();
                    loading_1.dismiss();
                }
            });
        }
    };
    ProfilePage.prototype.launchAuthorize = function () {
        this.auth.authRequest();
    };
    ProfilePage.prototype.onClose = function () {
        console.log("close");
        this.viewCtrl.dismiss();
    };
    ProfilePage.prototype.onSignUp = function () {
        var _this = this;
        console.log(this.signupForm);
        var loading = this.loadingCtrl.create({
            content: '<img src="assets/images/bubbles.svg">', duration: 15000,
            spinner: 'hide',
            showBackdrop: true,
        });
        loading.present();
        if (this.signupForm.valid) {
            this.auth.registerUser(this.signupForm.value).subscribe(function (res) {
                if (res) {
                    loading.dismiss();
                    var toast = _this.toastCtrl.create({
                        message: res.message,
                        duration: 2000,
                        position: 'bottom'
                    });
                    if (res.status) {
                        _this.userService.getUser();
                        toast.onDidDismiss(function () {
                            _this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_16__tabs_tabs__["a" /* TabsPage */]);
                        });
                    }
                    toast.present();
                }
            });
        }
    };
    ProfilePage.prototype.enableRegister = function () {
        if (this.config.settings.registration == 'app') {
            this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_12__register_register__["a" /* RegisterPage */]);
        }
        else {
            this.auth.openRegistration();
        }
    };
    ProfilePage.prototype.backToLogin = function () {
        this.register = false;
        this.signin = false;
    };
    ProfilePage.prototype.onTabChanged = function () {
        var index = this.profileTabs.getActiveIndex();
        this.profileSlides.slideTo(index, 500);
    };
    ProfilePage.prototype.selectedTab = function (index) {
        this.profileSlides.slideTo(index, 500);
    };
    ProfilePage.prototype.onSlideChanged = function () {
        var _this = this;
        var index = this.profileSlides.getActiveIndex();
        this.profileTabs.slideTo(index, 500);
        this.content.scrollToTop();
        var key = this.profile.tabs[index].key;
        this.currentTab = key;
        //if(!this.profile.data.hasOwnProperty(key)){
        var id;
        if ('id' in this.user) {
            id = this.user.id;
        }
        else {
            id = this.user;
        }
        var loading = this.loadingCtrl.create({
            content: '<img src="assets/images/bubbles.svg">', duration: 15000,
            spinner: 'hide',
            showBackdrop: true,
        });
        loading.present();
        this.userService.getProfileTab(id, key, true).subscribe(function (res) {
            loading.dismiss();
            _this.profile = _this.userService.profile;
            //to support show hide in my courses tab           
            if (key == 'courses') {
                if (res) {
                    res.map(function (item) {
                        item.show = 1;
                    });
                }
            }
            _this.profile.data[key] = res;
        });
        //}
    };
    ProfilePage.prototype.filterDashData = function (d) {
        return d.type == 'number';
    };
    ProfilePage.prototype.filterObjectData = function (d) {
        return d.type == 'objects';
    };
    ProfilePage.prototype.checkImage = function (d) {
        return d.match(/.+\.(jpeg|jpg)$/);
    };
    ProfilePage.prototype.triggerImage = function (url, title) {
        //this.photoViewer.show(url,title);
    };
    ProfilePage.prototype.triggerCertificateInBrowser = function (url) {
        var _this = this;
        this.platform.ready().then(function () {
            _this.iab.create(url, "_blank");
        });
    };
    ProfilePage.prototype.getSlidesPerView = function (key) {
        if (key == 'announcements')
            return 1;
        return 3;
    };
    ProfilePage.prototype.getCourseProgress = function (course) {
        console.log('Course progress');
        //return this.storage.get('courses')
        console.log(course);
        return course.user_progress;
    };
    ProfilePage.prototype.getCoursStatus = function (course) {
        console.log(course);
        return this.show_course_status(course.user_status);
    };
    ProfilePage.prototype.show_course_status = function (status) {
        if (status == 1) {
            return this.config.get_translation('start_course');
        }
        if (status == 2) {
            return this.config.get_translation('continue_course');
        }
        if (status == 3) {
            return this.config.get_translation('evaluation_course');
        }
        if (status == 4) {
            return this.config.get_translation('completed_course');
        }
    };
    ProfilePage.prototype.loadResult = function (result) {
    };
    ProfilePage.prototype.gettimediff = function (time) {
        return (this.config.timestamp - time);
    };
    ProfilePage.prototype.loadMore = function ($event) {
        var _this = this;
        var index = this.profileTabs.getActiveIndex();
        var key = this.profile.tabs[index].key;
        console.log('LOADING MORE =' + key);
        this.userService.getMoreProfileTab(this.user, key).toPromise().then(function (body) {
            if (body) {
                console.log(body);
                if (Array.isArray(body) && Array.isArray(_this.profile.data[key])) {
                    if (body.length < _this.config.settings.per_view) {
                        _this.more[key] = 0;
                    }
                }
                if (key == 'results') {
                    _this.storage.get('results_' + _this.config.user.id).then(function (res) {
                        if (res) {
                            for (var i = 0; i < body.length; i++) {
                                if (res.indexOf(body[i]) == -1) {
                                    res.push(body[i]);
                                    _this.storage.set('results_' + _this.config.user.id, res);
                                }
                            }
                        }
                    });
                }
            }
            $event.complete();
        });
    };
    ProfilePage.prototype.checkLoadMoreRequired = function () {
        var loadreturn = 0;
        switch (this.currentTab) {
            case 'courses':
                loadreturn = 1;
                break;
            case 'gradebook':
                loadreturn = 1;
                break;
            case 'activity':
                loadreturn = 1;
                break;
            case 'notifications':
                loadreturn = 1;
                break;
            case 'results':
                loadreturn = 1;
                break;
            case 'topic':
                loadreturn = 1;
                break;
            case 'reply':
                loadreturn = 1;
                break;
        }
        return loadreturn;
    };
    ProfilePage.prototype.clearCache = function () {
        var sudothis = this;
        this.storage.set('track', this.config.defaultTrack).then(function (res) {
            var toast = sudothis.toastCtrl.create({
                message: sudothis.config.get_translation('cache_cleared'),
                duration: 1000,
                position: 'bottom'
            });
            toast.present();
        });
    };
    ProfilePage.prototype.syncData = function () {
        this.config.getTracker();
        var sudothis = this;
        setTimeout(function () {
            var toast = sudothis.toastCtrl.create({
                message: sudothis.config.get_translation('cache_cleared'),
                duration: 2000,
                position: 'bottom'
            });
            toast.present();
        }, 1000);
    };
    ProfilePage.prototype.initiate_logout = function () {
        var _this = this;
        var alert = this.alertCtrl.create({
            title: this.config.get_translation('logout_from_device'),
            buttons: [
                {
                    text: this.config.get_translation('cancel'),
                    role: 'cancel',
                    handler: function (data) {
                    },
                },
                {
                    text: this.config.get_translation('logout'),
                    handler: function (data) {
                        _this.logout();
                        _this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_16__tabs_tabs__["a" /* TabsPage */]);
                    }
                }
            ]
        });
        alert.present();
    };
    ProfilePage.prototype.logout = function () {
        this.auth.logout(this.user);
    };
    ProfilePage.prototype.doRefresh = function (refresher) {
        var _this = this;
        var index = this.profileSlides.getActiveIndex();
        var key = this.profile.tabs[index].key;
        console.log(key + '<<<<');
        this.userService.getProfileTab(this.config.user.id, key, true).subscribe(function (res) {
            _this.profile = _this.userService.profile;
            console.log(' Yeh hai More');
            console.log(_this.more);
            refresher.complete();
        });
    };
    ProfilePage.prototype.changeImage = function () {
        // const options: CameraOptions = {
        //    quality: 100,
        //    destinationType: this.camera.DestinationType.FILE_URI,
        //    encodingType: this.camera.EncodingType.JPEG,
        //    mediaType: this.camera.MediaType.PICTURE
        //  }
        var _this = this;
        //  this.camera.getPicture(options).then((file_uri) => {
        //   // imageData is either a base64 encoded string or a file URI
        //   // If it's base64 (DATA_URL):
        //   //alert(imageData)
        //   this.image=(<any>window).Ionic.WebView.convertFileSrc(file_uri);
        //   this.storage.set('user', this.user);
        //  this.userService.saveUserProfilePic(this.image);
        //   console.log(this.image);
        //   console.log(file_uri);
        //  }, (err) => {
        //   // Handle error
        //   alert("error "+JSON.stringify(err))
        //  });
        var actionSheet = this.action.create({
            title: this.config.get_translation('change_profile_image'),
            buttons: [
                {
                    text: this.config.get_translation('pick_gallery'),
                    handler: function () {
                        var options = {
                            sourceType: _this.camera.PictureSourceType.SAVEDPHOTOALBUM,
                            mediaType: _this.camera.MediaType.PICTURE,
                            destinationType: _this.camera.DestinationType.FILE_URI,
                            encodingType: _this.camera.EncodingType.JPEG,
                            quality: 100,
                            allowEdit: true,
                            targetWidth: 460,
                            targetHeight: 460,
                            correctOrientation: true
                        };
                        _this.camera.getPicture(options).then(function (file_uri) {
                            _this.image = window.Ionic.WebView.convertFileSrc(file_uri);
                            _this.storage.set('user', _this.user);
                            _this.userService.saveUserProfilePic(_this.image);
                            console.log(_this.image);
                            console.log(file_uri);
                        }, function (err) {
                            console.log(err);
                        });
                    }
                },
                {
                    text: this.config.get_translation('take_photo'),
                    handler: function () {
                        var options = {
                            sourceType: _this.camera.PictureSourceType.CAMERA,
                            destinationType: _this.camera.DestinationType.FILE_URI,
                            mediaType: _this.camera.MediaType.PICTURE,
                            encodingType: _this.camera.EncodingType.JPEG,
                            quality: 100,
                            allowEdit: true,
                            saveToPhotoAlbum: true,
                            targetWidth: 460,
                            targetHeight: 460,
                            correctOrientation: true
                        };
                        _this.camera.getPicture(options).then(function (file_uri) {
                            _this.image = window.Ionic.WebView.convertFileSrc(file_uri);
                            _this.storage.set('user', _this.user);
                            _this.userService.saveUserProfilePic(_this.image);
                            console.log(_this.image);
                            console.log(file_uri);
                        }, function (err) {
                            console.log(err);
                        });
                    }
                },
                {
                    text: this.config.get_translation('cancel'),
                    role: this.config.get_translation('cancel'),
                    handler: function () {
                        console.log('Cancel clicked');
                    }
                }
            ]
        });
        actionSheet.present();
    };
    ProfilePage.prototype.editField = function (field) {
        var inputs = [];
        var value = '';
        if ('type' in field) {
            switch (field.type) {
                case 'textbox':
                case 'textarea':
                    if (field.value) {
                        value = field.value;
                    }
                    inputs = [{
                            name: field.name,
                            value: value,
                        }];
                    break;
                case 'url':
                    if (field.value) {
                        value = field.value;
                    }
                    inputs = [{
                            name: field.name,
                            value: value,
                        }];
                    break;
                case 'checkbox':
                case 'multiselectbox':
                    if (field.options) {
                        var field_value = void 0;
                        if (field.value && !Array.isArray(field.value)) {
                            field_value = field.value.split(',');
                        }
                        for (var i = 0; i < field.options.length; i++) {
                            var option = void 0;
                            option = {
                                name: field.name,
                                type: 'checkbox',
                                label: field.options[i],
                                value: field.options[i],
                            };
                            if (field_value && field_value.indexOf(field.options[i]) > -1) {
                                option.checked = true;
                            }
                            inputs.push(option);
                        }
                    }
                    break;
                case 'datebox':
                    if (field.value) {
                        value = field.value;
                    }
                    inputs = [{
                            name: field.name,
                            value: value,
                            type: 'date',
                        }];
                    break;
                case 'radio':
                case 'selectbox':
                    if (field.options) {
                        for (var i = 0; i < field.options.length; i++) {
                            var option = void 0;
                            option = {
                                name: field.name,
                                placeholder: field.value,
                                type: 'radio',
                                label: field.options[i],
                                value: field.options[i],
                            };
                            if (field.options[i] == field.value) {
                                option.checked = true;
                            }
                            inputs.push(option);
                        }
                    }
                    break;
            }
        }
        this.presentPrompt(field, inputs);
    };
    ProfilePage.prototype.presentPrompt = function (field, inputs) {
        var _this = this;
        var alert = this.alertCtrl.create({
            title: this.config.get_translation('edit_profile_field'),
            inputs: inputs,
            buttons: [
                {
                    text: this.config.get_translation('cancel'),
                    role: 'cancel',
                    handler: function (data) {
                        console.log(field);
                    },
                },
                {
                    text: this.config.get_translation('change'),
                    handler: function (data) {
                        var go = 1;
                        if (field.type && (field.type == 'checkbox' || field.type == 'multiselectbox')) {
                            field.value = data.join(',');
                        }
                        else if (field.type && (field.type == 'selectbox' || field.type == 'radio')) {
                            field.value = data;
                        }
                        else if (field.type == 'url') {
                            if (data[field.name] && data[field.name].length) {
                                if (data[field.name].match(/^(https?:\/\/)?([\da-z*.-]+)\.([a-z\.]{2,6})([\/\w*\s(|%20).-]*)*\/?$/)) {
                                    field.value = data[field.name];
                                }
                                else {
                                    go = 0;
                                    var toast = _this.toastCtrl.create({
                                        message: _this.config.get_translation('invalid_url'),
                                        duration: 1000,
                                        position: 'bottom'
                                    });
                                    toast.present();
                                }
                            }
                        }
                        else if (data[field.name]) {
                            field.value = data[field.name];
                        }
                        var res = _this.profile.data['profile'];
                        for (var i = 0; i < res.length; i++) {
                            if (res[i] && res[i].fields) {
                                if (res[i].fields.length) {
                                    for (var k = 0; k < res[i].fields.length; k++) {
                                        if (res[i].fields[k].id == field.id) {
                                            res[i].fields[k] = field;
                                            _this.userService.editProfileField(field, go);
                                        }
                                    }
                                }
                            }
                        }
                        _this.profile.data['profile'] = res;
                    }
                }
            ]
        });
        alert.present();
    };
    ProfilePage.prototype.showterms = function () {
        var alert = this.alertCtrl.create({
            title: this.config.get_translation('login_terms_conditions'),
            message: this.config.terms_conditions,
            buttons: [
                {
                    text: this.config.get_translation('accept_continue'),
                    role: 'cancel',
                }
            ]
        });
        alert.present();
    };
    ProfilePage.prototype.showMyCourses = function (status) {
        var _this = this;
        if (Array.isArray(this.profile.data['courses'])) {
            this.storage.get('courses_' + this.config.user.id).then(function (courses) {
                if (courses) {
                    switch (status) {
                        case 'all':
                            _this.mycoursesactivetab = 0;
                            courses.map(function (item) {
                                item.show = 1;
                                return item;
                            });
                            _this.profile.data['courses'] = courses;
                            break;
                        case 'active':
                            _this.mycoursesactivetab = 1;
                            _this.profile.data['courses'] = courses.map(function (item) {
                                if (item.user_progress < 100) {
                                    item.show = 1;
                                }
                                else {
                                    item.show = 0;
                                }
                                return item;
                            });
                            break;
                        case 'finished':
                            _this.mycoursesactivetab = 2;
                            _this.profile.data['courses'] = courses.map(function (item) {
                                if (item.user_status > 3) {
                                    item.show = 1;
                                }
                                else {
                                    item.show = 0;
                                }
                                return item;
                            });
                            break;
                    }
                }
            });
        }
    };
    ProfilePage.prototype.goToCourseStatusPage = function (data) {
        console.log('clicked');
        console.log(data);
        var $this = this;
        if (data.course.batch) {
            console.log('clicked if');
            if (data.course.batch.batches_course_access) {
                if (data.course.batch.batches_course_access.return) {
                    console.log(' batch access to course');
                    var toast = this.toastCtrl.create({
                        message: $this.stripHtml(data.course.batch.batches_course_access.message),
                        duration: 1000,
                        position: 'bottom',
                    });
                    toast.present();
                    this.navCtrl.push(this.courseStatusPage, data);
                }
                else {
                    console.log('batch access to course denied');
                    // you have no access from batch
                    var toast = this.toastCtrl.create({
                        message: $this.stripHtml(data.course.batch.batches_course_access.message),
                        duration: 1000,
                        position: 'bottom',
                    });
                    toast.present();
                }
            }
        }
        else {
            console.log('course access without batch');
            this.navCtrl.push(this.courseStatusPage, data);
        }
    };
    ProfilePage.prototype.stripHtml = function (html) {
        // Create a new div element
        var temporalDivElement = document.createElement("div");
        // Set the HTML content with the providen
        temporalDivElement.innerHTML = html;
        // Retrieve the text property of the element (cross-browser support)
        return temporalDivElement.textContent || temporalDivElement.innerText || "";
    };
    ProfilePage.prototype.onFilterOptions = function ($event) {
        var _this = this;
        var $this = this;
        var course_id = $this.filterby; // stores course_id
        if (course_id) {
            var toast1 = this.toastCtrl.create({
                message: $this.config.get_translation('getting_course_attendance'),
                duration: 1000,
                position: 'bottom'
            });
            toast1.present();
            $this.attendance.get_user_course_attendance(course_id).then(function (res) {
                console.log(res);
                if (res.message) {
                    var toast = _this.toastCtrl.create({
                        message: res.message,
                        duration: 1000,
                        position: 'bottom'
                    });
                    toast.present();
                }
            });
        }
    };
    ProfilePage.prototype.toggle_markunmark = function (toggle_val) {
        if (toggle_val == 'mark') {
            this.toggle_mark_unmark = 'mark';
        }
        else if (toggle_val == 'unmark') {
            this.toggle_mark_unmark = 'unmark';
        }
    };
    ProfilePage.prototype.scanbarcode = function () {
        var _this = this;
        var $this = this;
        var options = {
            'prompt': $this.config.get_translation('scanning_barcode') // transalte here
        };
        this.barcodeScanner.scan(options).then(function (barcodeData) {
            console.log("barcodeData", barcodeData);
            // handle data here and pass user_id to function
            var user_id = parseInt(barcodeData.text.match(/\d+/)[0]);
            console.log(user_id);
            if (user_id) {
                var toast1 = _this.toastCtrl.create({
                    message: $this.config.get_translation('marking_attendance'),
                    duration: 1000,
                    position: 'bottom'
                });
                toast1.present();
                $this.attendance.marktodays_attendance(user_id).then(function (res) {
                    console.log(res);
                    if (res.message) {
                        var toast = _this.toastCtrl.create({
                            message: res.message,
                            duration: 1000,
                            position: 'bottom'
                        });
                        toast.present();
                    }
                });
            }
        })
            .catch(function (err) {
            console.log("Error", err);
        });
    };
    ProfilePage.prototype.on_attendanceTabChanged = function () {
        var index = this.chatTabs.getActiveIndex();
        this.chatSlides.slideTo(index, 500);
    };
    ProfilePage.prototype.on_attendanceSlideChanged = function () {
        var index = this.chatSlides.getActiveIndex();
        this.chatTabs.slideTo(index, 500);
        if (this.chatTabslist[index]) {
            switch (this.chatTabslist[index].key) {
                case 'marked':
                    console.log('marked');
                    break;
                case 'unmarked':
                    console.log('unmarked');
                    break;
                default:
                    console.log('default');
                    break;
            }
        }
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('ProfileTabs'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["p" /* Slides */])
    ], ProfilePage.prototype, "profileTabs", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('ProfileSlides'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["p" /* Slides */])
    ], ProfilePage.prototype, "profileSlides", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["d" /* Content */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["d" /* Content */])
    ], ProfilePage.prototype, "content", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('barCanvas'),
        __metadata("design:type", Object)
    ], ProfilePage.prototype, "barCanvas", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('lineCanvas'),
        __metadata("design:type", Object)
    ], ProfilePage.prototype, "lineCanvas", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('ChatTabs'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["p" /* Slides */])
    ], ProfilePage.prototype, "chatTabs", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('ChatSlides'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["p" /* Slides */])
    ], ProfilePage.prototype, "chatSlides", void 0);
    ProfilePage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-profile',template:/*ion-inline-start:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\pages\profile\profile.html"*/'<ion-header center class="{{user ? \'loggedin\': \'non-loggedin\'}}">\n	<ion-buttons start>\n		<button ion-button menuToggle>\n			<ion-icon name="md-menu"></ion-icon>\n		</button>\n	</ion-buttons>\n	<ion-title *ngIf="!isLoggedIn">\n		<h1>{{config.get_translation(\'login_heading\')}}</h1>\n	</ion-title>\n	<ion-title *ngIf="isLoggedIn">\n		<div class="user_intro" avatarscrollzoomout>\n			<div class="avatar" (click)="changeImage()">\n				<lazy-img [inputSrc]="config.user.avatar"></lazy-img>\n			</div>\n			<h1>{{user?.name}}<span>{{user?.email}}</span></h1>\n			<button icon-only ion-button clear color="white" (click)=initiate_logout()>\n				<ion-icon name="md-power"></ion-icon>\n			</button>\n		</div>\n	</ion-title>\n	<ion-slides dir="{{config.settings.rtl ? \'rtl\' : undefined }}" *ngIf="isLoggedIn" #ProfileTabs id="profiletabs"\n		spaceBetween="0" slidesPerView="4" (ionSlideDidChange)="onTabChanged()">\n		<ion-slide *ngFor="let tab of profile?.tabs; let i=index;" (click)="selectedTab(i)">\n			<div class="profile_tab">\n				<ion-icon [name]=tab.value></ion-icon>\n				<span>{{tab.label}}</span>\n			</div>\n		</ion-slide>\n	</ion-slides>\n</ion-header>\n<ion-content class="{{isLoggedIn ? \'loggedin\': \'non-loggedin\'}}">\n	<div class="signin_register" *ngIf="!isLoggedIn">\n		<div class="signin_content" padding>\n			<div id="signin" *ngIf="!register && !signin" center>\n				<h1 color="white" [innerHtml]="config.get_translation(\'login_title\')"></h1>\n				<p color="white" [innerHtml]="config.get_translation(\'login_description\')"></p>\n				<ion-grid>\n					<ion-row>\n						<ion-col *ngIf="config.settings.facebook.enable">\n							<button id="facebook_login" ion-button full icon-left (click)="onFbLogin()">\n								<ion-icon name="logo-facebook"></ion-icon>Facebook\n							</button>\n						</ion-col>\n						<ion-col *ngIf="config.settings.google.enable">\n							<button id="google_login" ion-button full icon-left (click)="onGoogleLogin()">\n								<ion-icon name="logo-google"></ion-icon>Google\n							</button>\n						</ion-col>\n					</ion-row>\n					<ion-row *ngIf="config.settings.registration">\n						<ion-col>\n							<button ion-button block outline color="white" (click)="enableRegister()"\n								[innerHtml]="config.get_translation(\'signup_with_email_button_label\')"></button>\n						</ion-col>\n					</ion-row>\n					<ion-row *ngIf="config.settings.registration">\n						<ion-col col-12>\n							<p color="white" center [innerHtml]="config.get_translation(\'login_have_account\')"></p>\n						</ion-col>\n					</ion-row>\n					<ion-row>\n						<ion-col col-12>\n							<button ion-button outline block color="white" (click)="showSignIn()"\n								[innerHtml]="config.get_translation(\'login_signin\')"></button>\n						</ion-col>\n					</ion-row>\n					<ion-row>\n						<ion-col col-12>\n							<button ion-button clear color="white"\n								[innerHtml]="config.get_translation(\'login_terms_conditions\')"\n								(click)="showterms()"></button>\n						</ion-col>\n					</ion-row>\n				</ion-grid>\n			</div>\n			<div id="signin" *ngIf="signin" center>\n\n			</div>\n			<div id="register" *ngIf="register" center>\n				<form [formGroup]="signupForm" (ngSubmit)="onSignUp()">\n					<ion-list>\n						<ion-item>\n							<ion-label floating [innerHtml]="config.get_translation(\'signup_username\')"></ion-label>\n							<ion-input type="text" formControlName="username"></ion-input>\n							<span *ngIf="signupForm.controls.username.pending">\n								<ion-spinner></ion-spinner>\n							</span>\n						</ion-item>\n						<ion-item>\n							<ion-label floating [innerHtml]="config.get_translation(\'signup_email\')"></ion-label>\n							<ion-input type="text" formControlName="email"></ion-input>\n						</ion-item>\n						<ion-item>\n							<ion-label floating [innerHtml]="config.get_translation(\'signup_password\')"></ion-label>\n							<ion-input type="password" formControlName="password"></ion-input>\n						</ion-item>\n					</ion-list>\n					<button ion-button block outline type="submit" color="white"\n						[innerHtml]="config.get_translation(\'login_signup\')"></button>\n					<button ion-button clear center icon-left color="white" (click)="backToLogin()"\n						[innerHtml]="config.get_translation(\'login_back\')">\n						<ion-icon name="md-arrow-back"></ion-icon>\n					</button>\n				</form>\n			</div>\n		</div>\n	</div>\n\n	<div class="loggedin_user" *ngIf="isLoggedIn">\n\n		<div id="profilecontent" padding>\n			<ion-refresher (ionRefresh)="doRefresh($event)">\n				<ion-refresher-content pullingText="{{config.get_translation(\'pull_to_refresh\')}}"\n					pullingIcon="arrow-dropdown" refreshingSpinner="circles"\n					refreshingText="{{config.get_translation(\'refreshing\')}}"></ion-refresher-content>\n			</ion-refresher>\n			<ion-slides dir="{{config.settings.rtl ? \'rtl\' : undefined }}" id="profilelides" #ProfileSlides\n				(ionSlideDidChange)="onSlideChanged()">\n				<ion-slide *ngFor="let tab of profile?.tabs; let i=index;">\n					<div [ngClass]=tab *ngIf="(tab.key == \'dashboard\')">\n						<ion-grid id="dashboard">\n							<ion-row>\n								<ion-col *ngFor="let d of profile?.data | callback: filterDashData">\n									<div [class]="d.key">\n										<strong>{{d.value}}</strong>\n										<span>{{d.label}}</span>\n									</div>\n								</ion-col>\n							</ion-row>\n						</ion-grid>\n						<div class="objects" *ngFor="let d of profile?.data | callback: filterObjectData">\n							<hr *ngIf="d.value.length">\n							<h3 class="heading" *ngIf="d.value.length"><span>{{d.label}}</span></h3>\n							<ion-slides dir="{{config.settings.rtl ? \'rtl\' : undefined }}"\n								[slidesPerView]=getSlidesPerView(d.key) spaceBetween="10" *ngIf="d.value.length">\n								<ion-slide *ngFor="let obj of d.value">\n									<div class="annoucenment" *ngIf="obj.announcement">\n										<span>{{obj.title}}</span>\n										<div>{{obj.announcement}}</div>\n									</div>\n									<div class="certificate" *ngIf="obj.type == \'certificate\'">\n										<img [src]="obj.value" *ngIf="checkImage(obj.value)"\n											(click)="triggerImage(obj.value)">\n										<ion-icon name="md-easel" *ngIf="!checkImage(obj.value)"\n											(click)="triggerCertificateInBrowser(obj.value)"></ion-icon>\n									</div>\n									<div class="badge" *ngIf="obj.type == \'badge\'">\n										<img [src]="obj.value" (click)="triggerImage(obj.value,obj.label)">\n										<span>{{obj.label}}</span>\n									</div>\n								</ion-slide>\n							</ion-slides>\n						</div>\n						<div class="profile_chart">\n							<h3 class="heading">{{config.get_translation(\'course_chart\')}}</h3>\n							<canvas #lineCanvas></canvas>\n						</div>\n						<div class="profile_chart">\n							<h3 class="heading">{{config.get_translation(\'quiz_chart\')}}</h3>\n							<canvas #barCanvas></canvas>\n						</div>\n					</div>\n					<div id="profiletabs" *ngIf="(tab.key == \'profile\')">\n						<ion-list *ngIf="profile.data.profile">\n							<div *ngFor="let group of profile.data.profile">\n								<ion-list-header>\n									{{group.name}}\n								</ion-list-header>\n								<ion-item *ngFor="let field of group.fields" (click)="editField(field)">\n									<ion-label>{{field.name}}</ion-label>\n									<div [innerHtml]="field.value" item-content></div>\n								</ion-item>\n							</div>\n						</ion-list>\n					</div>\n\n					<div id="mycourses" *ngIf="(tab.key == \'courses\')">\n\n						<div class="message" *ngIf="!profile.data.courses"\n							[innerHtml]="config.get_translation(\'no_courses\')">\n						</div>\n						<div *ngIf="profile.data.courses">\n							<ion-grid class="button-group">\n								<ion-row>\n									<ion-col col-4>\n										<button ion-button [outline]="mycoursesactivetab == 0?null:\'\'" block\n											(click)="showMyCourses(\'all\')">{{config.get_translation(\'all\')}}</button>\n									</ion-col>\n									<ion-col col-4>\n										<button ion-button [outline]="mycoursesactivetab == 1?null:\'\'" block\n											(click)="showMyCourses(\'active\')">{{config.get_translation(\'active\')}}</button>\n									</ion-col>\n									<ion-col col-4>\n										<button ion-button [outline]="mycoursesactivetab == 2?null:\'\'" block\n											(click)="showMyCourses(\'finished\')">{{config.get_translation(\'finished\')}}</button>\n									</ion-col>\n								</ion-row>\n							</ion-grid>\n							<ion-grid>\n								<ion-row>\n									<ion-col col-12 col-sm-6 col-lg-4 col-xl-3\n										*ngFor="let course of profile.data.courses">\n										<div *ngIf="course.user_expiry">\n											<ion-card\n												*ngIf="course && course.show  && course.user_expiry && course.user_expiry >currenttimestamp"\n												(click)="goToCourseStatusPage({\'course\':course,\'user\':config.user})">\n												<div class="course_block">\n													<div class="course_featured_image">\n														<img [src]=course.featured_image>\n													</div>\n													<ion-card-content class="align-left">\n														<ion-card-title>\n															{{course.name}}\n														</ion-card-title>\n														<span\n															class="course_instructor">{{course.instructor.name}}</span>\n														<progress-bar [progress]="course.user_progress"></progress-bar>\n														<span class="course_user_status"\n															[innerHtml]="show_course_status(course.user_status)"></span>\n													</ion-card-content>\n												</div>\n											</ion-card>\n\n\n\n											<ion-card\n												*ngIf="course && course.show && course.user_expiry && course.user_expiry <currenttimestamp"\n												[navPush]="coursePage" [navParams]="course">\n												<div class="course_block">\n													<div class="course_featured_image">\n														<img [src]=course.featured_image>\n													</div>\n													<ion-card-content class="align-left">\n														<ion-card-title>\n															{{course.name}}\n														</ion-card-title>\n														<span\n															class="course_instructor">{{course.instructor.name}}</span>\n														<progress-bar [progress]="course.user_progress"></progress-bar>\n														<span class="course_user_status"\n															[innerHtml]="show_course_status(course.user_status)+\' (\'+config.get_translation(\'expired_course\')+\')\'"></span>\n													</ion-card-content>\n												</div>\n											</ion-card>\n										</div>\n										<div *ngIf="!course.user_expiry">\n											<ion-card *ngIf="course && course.show"\n												(click)="goToCourseStatusPage({\'course\':course,\'user\':config.user})">\n												<div class="course_block">\n													<div class="course_featured_image">\n														<img [src]=course.featured_image>\n													</div>\n													<ion-card-content class="align-left">\n														<ion-card-title>\n															{{course.name}}\n														</ion-card-title>\n														<span\n															class="course_instructor">{{course.instructor.name}}</span>\n														<progress-bar [progress]="course.user_progress"></progress-bar>\n														<span class="course_user_status"\n															[innerHtml]="show_course_status(course.user_status)"></span>\n													</ion-card-content>\n												</div>\n											</ion-card>\n										</div>\n									</ion-col>\n\n								</ion-row>\n							</ion-grid>\n\n\n						</div>\n					</div>\n\n\n\n					<div id="profiletabs" *ngIf="(tab.key == \'results\')">\n\n						<div id="message" class="message" *ngIf="!profile.data.results && !userService.saved_results"\n							[innerHtml]="config.get_translation(\'no_results\')"></div>\n						<ion-list *ngIf="userService.saved_results && userService.saved_results.length">\n							<ion-list-header>{{config.get_translation(\'app_quiz_results\')}}</ion-list-header>\n							<div *ngFor="let sresult of userService.saved_results" [navPush]="resultPage"\n								[navParams]="sresult">\n								<ion-item *ngIf="sresult.meta">\n									<ion-label>\n										<strong [innerHtml]="sresult.title"></strong>\n										<strong style="float:right;"> {{sresult.meta.marks}} /\n											<span>{{sresult.meta.max}}</span></strong>\n									</ion-label>\n								</ion-item>\n							</div>\n						</ion-list>\n						<div *ngIf="profile.data.results">\n\n							<ion-list *ngIf="profile.data.results">\n								<ion-list-header>{{config.get_translation(\'saved_quiz_results\')}}</ion-list-header>\n								<ion-item *ngFor="let result of profile.data.results">\n									<ion-label *ngIf="userService.saved_results.indexOf(result) == -1"\n										[navPush]="resultPage" [navParams]="result">\n										<strong [innerHtml]="result.title"></strong>\n										<strong style="float:right;">{{result.marks}} /\n											<span>{{result.max}}</span></strong>\n									</ion-label>\n								</ion-item>\n							</ion-list>\n						</div>\n					</div>\n					<div id="profiletabs" *ngIf="(tab.key == \'gradebook\')">\n						<div id="message" class="message" *ngIf="!profile.data.gradebook"\n							[innerHtml]="config.get_translation(\'no_finished_courses\')"></div>\n						<div *ngIf="profile.data.gradebook">\n							<div id="message" class="message" *ngIf="!profile.data.gradebook.length"\n								[innerHtml]="config.get_translation(\'no_finished_courses\')"></div>\n							<ion-card *ngFor="let grade of profile.data.gradebook">\n								<div class="course_block">\n									<div class="course_featured_image">\n										<img [src]=grade.featured_image>\n									</div>\n									<ion-card-content class="align-left">\n										<ion-card-title>\n											{{grade.name}}\n										</ion-card-title>\n										<ion-list>\n											<ion-item>\n												<ion-label>{{config.get_translation(\'score\')}}</ion-label>\n												<span>{{grade.score}}</span>\n											</ion-item>\n											<ion-item *ngIf="grade.certificate">\n												<ion-label item-left>{{config.get_translation(\'certificate\')}}\n												</ion-label>\n												<button ion-button clear>\n													<ion-icon name="md-link"></ion-icon>\n												</button>\n											</ion-item>\n											<ion-item *ngIf="grade.badge">\n												<ion-label item-left>{{config.get_translation(\'badge\')}}</ion-label>\n												<button ion-button clear>\n													<ion-icon name="md-ribbon"></ion-icon>\n												</button>\n											</ion-item>\n										</ion-list>\n										<button ion-button outline small icon-only *ngIf="grade.finish_access > 0">\n											<ion-icon name="md-log-in"></ion-icon>\n										</button>\n										<button ion-button outline small *ngIf="grade.retakes.remaining > 0">\n											<ion-icon name="md-refresh"></ion-icon>\n										</button>\n									</ion-card-content>\n								</div>\n							</ion-card>\n						</div>\n					</div>\n					<div id="profiletabs" *ngIf="(tab.key == \'notifications\')">\n\n						<div *ngIf="profile.data[\'notifications\']">\n							<ion-list id="notifications">\n								<ion-item *ngFor="let notification of profile.data.notifications">\n									<span>\n										<friendlytime [time]="gettimediff(notification.time)"></friendlytime>\n									</span>\n									<div [innerHtml]="notification.content"></div>\n								</ion-item>\n							</ion-list>\n						</div>\n						<div *ngIf="!profile.data[\'notifications\']">\n							<div class="message" [innerHtml]="config.get_translation(\'no_notification_found\')">\n							</div>\n						</div>\n					</div>\n					<div id="profiletabs" *ngIf="(tab.key == \'activity\')">\n						<div *ngIf="profile.data[\'activity\']">\n							<ion-list id="activity">\n								<ion-item *ngFor="let activity of profile.data.activity">\n									<span>\n										<friendlytime [time]="gettimediff(activity.date)"></friendlytime>\n									</span>\n									<div [innerHtml]="activity.content"></div>\n								</ion-item>\n							</ion-list>\n						</div>\n						<div *ngIf="!profile.data[\'activity\']">\n							<div class="message" [innerHtml]="config.get_translation(\'no_activity_found\')">\n							</div>\n						</div>\n					</div>\n\n					<div id="profiletabs" *ngIf="(tab.key == \'settings\')">\n						<ion-list>\n							<ion-list-header [innerHtml]="config.get_translation(\'\')"></ion-list-header>\n							<ion-item>\n								<ion-toggle checked="false"></ion-toggle>\n								<ion-label [innerHtml]="config.get_translation(\'email_certificates\')"></ion-label>\n							</ion-item>\n							<ion-list-header [innerHtml]="config.get_translation(\'saved_information\')">\n							</ion-list-header>\n							<ion-item>\n								<ion-label [innerHtml]="config.get_translation(\'client_id\')"></ion-label>\n								<ion-note item-end="" class="note note-md">{{config.settings.client_id}}</ion-note>\n							</ion-item>\n							<ion-list-header [innerHtml]="config.get_translation(\'manage_data\')"></ion-list-header>\n							<ion-item>\n								<ion-label [innerHtml]="config.get_translation(\'clear_cache\')"></ion-label>\n								<button ion-button outline item-end [innerHtml]="config.get_translation(\'clear_cache\')"\n									(click)="clearCache()"></button>\n							</ion-item>\n							<ion-item>\n								<ion-label [innerHtml]="config.get_translation(\'sync_data\')"></ion-label>\n								<button ion-button outline item-end [innerHtml]="config.get_translation(\'sync_data\')"\n									(click)="syncData()"></button>\n							</ion-item>\n						</ion-list>\n						<button ion-button full [innerHtml]="config.get_translation(\'logout\')"\n							(click)="initiate_logout()"></button>\n					</div>\n					<div id="batchtabs" *ngIf="(tab.key == \'batch\') && config.batch.enable_batch">\n						<div *ngIf="config.batch.enable_batch">\n							<div *ngIf="groupService.my_batches && groupService.my_batches.length" class="my_batches">\n								<div *ngFor="let group of groupService.my_batches">\n									<GroupBlock [group]="group"></GroupBlock>\n								</div>\n							</div>\n						</div>\n						<div *ngIf="!config.batch.enable_batch">{{config.get_translation(\'Batches_not_enable_in_app\')}}\n						</div>\n					</div>\n\n					<div id="mytopic" *ngIf="(tab.key == \'topic\') && config.forum.enable_forum">\n						<div *ngIf="config.forum.enable_forum">\n							<div *ngIf="forum.my_topics && forum.my_topics.length" class="my_batches">\n								<div *ngFor="let topic of forum.my_topics">\n									<TopicBlock [topic]="topic"></TopicBlock>\n								</div>\n							</div>\n							<div *ngIf="!(forum.my_topics && forum.my_topics.length)">\n								<div class="message" [innerHtml]="config.get_translation(\'topic_not_found\')">\n								</div>\n							</div>\n						</div>\n						<div class="message" *ngIf="!config.forum.enable_forum">\n							{{config.get_translation(\'forum_not_enable_in_app\')}}</div>\n					</div>\n					<div id="myreply" *ngIf="(tab.key == \'reply\') && config.forum.enable_forum">\n						<div *ngIf="config.forum.enable_forum">\n							<div *ngIf="forum.my_replies && forum.my_replies.length" class="my_batches">\n								<div *ngFor="let reply of forum.my_replies">\n									<ReplyBlock [reply]="reply"></ReplyBlock>\n								</div>\n							</div>\n							<div *ngIf="!(forum.my_replies && forum.my_replies.length)">\n								<div class="message" [innerHtml]="config.get_translation(\'reply_not_found\')">\n								</div>\n							</div>\n						</div>\n						<div class="message" *ngIf="!config.forum.enable_forum">\n							{{config.get_translation(\'forum_not_enable_in_app\')}}</div>\n					</div>\n\n					<div id="profiletabs" *ngIf="(tab.key == \'attendance\')">\n						<div *ngIf="config.attendance.enable_attendance">\n							<div class="filter_sort_select">\n								<ion-item *ngIf="attendance.my_courses && attendance.my_courses.length">\n									<ion-label>Select Course</ion-label>\n									<ion-select placeholder="{{this.config.get_translation(\'filter_options\')}}"\n										(ionChange)="onFilterOptions($event)" [selectOptions]="filterSelectOptions"\n										[(ngModel)]="filterby" okText="{{config.get_translation(\'ok\')}}"\n										cancelText="{{config.get_translation(\'cancel\')}}">\n										<ion-option *ngFor="let my_course of attendance.my_courses"\n											[value]="my_course.id">\n											{{my_course.name}}</ion-option>\n									</ion-select>\n								</ion-item>\n							</div>\n							<div *ngIf="attendance.course_attendance && attendance.current_course">\n								<ion-row>\n									<ion-col>\n										<div (click)="toggle_markunmark(\'mark\')" class="select_attendance_type"\n											*ngIf="attendance.course_attendance[attendance.current_course].marked && attendance.course_attendance[attendance.current_course].marked.date_format">\n											<div>\n												{{attendance.course_attendance[attendance.current_course].marked.date_format.length}}\n											</div>\n											<div>{{this.config.get_translation(\'marked_attendance\')}}</div>\n										</div>\n									</ion-col>\n									<ion-col>\n										<div (click)="toggle_markunmark(\'unmark\')" class="select_attendance_type"\n											*ngIf="attendance.course_attendance[attendance.current_course].unmarked && attendance.course_attendance[attendance.current_course].unmarked.date_format">\n											<div>\n												{{attendance.course_attendance[attendance.current_course].unmarked.date_format.length}}\n											</div>\n											<div>{{this.config.get_translation(\'unmarked_attendance\')}}</div>\n										</div>\n									</ion-col>\n								</ion-row>\n\n								<div *ngIf="toggle_mark_unmark == \'mark\' " class="_attendance">\n									<ion-list\n										*ngIf="attendance.course_attendance[attendance.current_course].marked && attendance.course_attendance[attendance.current_course].marked.date_format">\n										<ion-list-header>\n											<ion-label>{{this.config.get_translation(\'marked_attendance\')}}\n											</ion-label>\n										</ion-list-header>\n										<ion-item\n											*ngFor="let marked of  attendance.course_attendance[attendance.current_course].marked.date_format">\n											<ion-label class="present">{{marked}}\n												<span>Present</span>\n											</ion-label>\n										</ion-item>\n									</ion-list>\n								</div>\n								<div *ngIf="toggle_mark_unmark == \'unmark\' ">\n									<ion-list\n										*ngIf="attendance.course_attendance[attendance.current_course].unmarked && attendance.course_attendance[attendance.current_course].unmarked.date_format">\n										<ion-list-header>\n											<ion-label>{{this.config.get_translation(\'unmarked_attendance\')}}\n											</ion-label>\n										</ion-list-header>\n										<ion-item\n											*ngFor="let unmarked of  attendance.course_attendance[attendance.current_course].unmarked.date_format">\n											<ion-label class="absent">{{unmarked}}\n												<span>Absent</span>\n											</ion-label>\n										</ion-item>\n									</ion-list>\n								</div>\n								<button ion-button full icon-left (click)=scanbarcode()\n									*ngIf="config.attendance.enable_mark_attendance">\n									{{this.config.get_translation(\'mark_today_attendance\')}}\n								</button>\n							</div>\n						</div>\n						<div class="message" *ngIf="!config.attendance.enable_attendance">\n							{{config.get_translation(\'attendance_not_enable\')}}</div>\n					</div>\n\n\n				</ion-slide>\n			</ion-slides>\n		</div>\n	</div>\n\n	<div *ngIf="checkLoadMoreRequired()">\n		<ion-infinite-scroll *ngIf="more[currentTab]" threshold="100%" (ionInfinite)="loadMore($event)">\n			<ion-infinite-scroll-content loadingSpinner="bubbles"></ion-infinite-scroll-content>\n		</ion-infinite-scroll>\n	</div>\n</ion-content>'/*ion-inline-end:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\pages\profile\profile.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["r" /* ViewController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* ToastController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_5__services_authentication__["a" /* AuthenticationService */],
            __WEBPACK_IMPORTED_MODULE_6__services_users__["a" /* UserService */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["o" /* Platform */],
            __WEBPACK_IMPORTED_MODULE_7__services_config__["a" /* ConfigService */],
            __WEBPACK_IMPORTED_MODULE_17__ionic_storage__["b" /* Storage */],
            __WEBPACK_IMPORTED_MODULE_2__angular_forms__["a" /* FormBuilder */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* LoadingController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* ActionSheetController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */],
            __WEBPACK_IMPORTED_MODULE_18__ionic_native_camera__["a" /* Camera */],
            __WEBPACK_IMPORTED_MODULE_3__ionic_native_in_app_browser__["a" /* InAppBrowser */],
            __WEBPACK_IMPORTED_MODULE_8__services_group__["a" /* GroupService */],
            __WEBPACK_IMPORTED_MODULE_9__services_forum__["a" /* ForumService */],
            __WEBPACK_IMPORTED_MODULE_10__services_attendance__["a" /* AttendanceService */],
            __WEBPACK_IMPORTED_MODULE_20__ionic_native_barcode_scanner__["a" /* BarcodeScanner */]])
    ], ProfilePage);
    return ProfilePage;
}());

//# sourceMappingURL=profile.js.map

/***/ }),

/***/ 224:
/***/ (function(module, exports) {

function webpackEmptyAsyncContext(req) {
	// Here Promise.resolve().then() is used instead of new Promise() to prevent
	// uncatched exception popping up in devtools
	return Promise.resolve().then(function() {
		throw new Error("Cannot find module '" + req + "'.");
	});
}
webpackEmptyAsyncContext.keys = function() { return []; };
webpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;
module.exports = webpackEmptyAsyncContext;
webpackEmptyAsyncContext.id = 224;

/***/ }),

/***/ 269:
/***/ (function(module, exports, __webpack_require__) {

var map = {
	"../pages/attendance/attendance.module": [
		1016,
		1
	],
	"../pages/offlinedetail/offlinedetail.module": [
		1017,
		0
	]
};
function webpackAsyncContext(req) {
	var ids = map[req];
	if(!ids)
		return Promise.reject(new Error("Cannot find module '" + req + "'."));
	return __webpack_require__.e(ids[1]).then(function() {
		return __webpack_require__(ids[0]);
	});
};
webpackAsyncContext.keys = function webpackAsyncContextKeys() {
	return Object.keys(map);
};
webpackAsyncContext.id = 269;
module.exports = webpackAsyncContext;

/***/ }),

/***/ 29:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return UserService; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_map__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_Observable__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_rxjs_Observable__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_observable_of__ = __webpack_require__(40);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_observable_of___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_add_observable_of__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_ionic_angular__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__activity__ = __webpack_require__(115);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__authentication__ = __webpack_require__(33);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__ionic_storage__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__config__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__group__ = __webpack_require__(70);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__forum__ = __webpack_require__(48);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__ionic_native_camera__ = __webpack_require__(71);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__attendance__ = __webpack_require__(181);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};






//import { Transfer, TransferObject, FileUploadResult } from '@ionic-native/transfer';








var UserService = /** @class */ (function () {
    function UserService(http, auth, storage, config, toastCtrl, activityService, group, forum, camera, attendance) {
        var _this = this;
        this.http = http;
        this.auth = auth;
        this.storage = storage;
        this.config = config;
        this.toastCtrl = toastCtrl;
        this.activityService = activityService;
        this.group = group;
        this.forum = forum;
        this.camera = camera;
        this.attendance = attendance;
        this.instructors = [];
        this.instructor = [];
        this.results = [];
        this.saved_results = [];
        this.reviews = [];
        this.progress = [];
        this.isloggedin = false;
        //file_transfer: TransferObject = this.transfer.create();
        this.profileTabPaged = [];
        this.tabobservable = []; //Tracks request in progress
        this.baseUrl = this.config.baseUrl;
        this.token = this.auth.getAccessToken();
        if (this.token) {
            this.isloggedin = true;
            this.auth.getUser().subscribe(function (res) {
                _this.user = res;
            });
        }
    }
    UserService.prototype.isUserLoggedIn = function () {
        console.log('Inside loggedin');
        return this.isloggedin;
    };
    UserService.prototype.getUserAvatar = function () {
        var _this = this;
        if (this.user) {
            console.log('gotcha');
            return __WEBPACK_IMPORTED_MODULE_3_rxjs_Observable__["Observable"].of(this.user.avatar);
        }
        else {
            this.token = this.auth.getAccessToken();
            if (this.token) {
                this.auth.getUser().subscribe(function (res) {
                    _this.user = res;
                    return _this.user.avatar;
                });
            }
        }
    };
    UserService.prototype.getProfile = function (user_id) {
        var _this = this;
        var loadedprofile = this.config.trackComponents('profile');
        if (loadedprofile) {
            return __WEBPACK_IMPORTED_MODULE_3_rxjs_Observable__["Observable"].fromPromise(this.storage.get('profile').then(function (profile) {
                _this.profile = profile;
                return _this.profile;
            }));
        }
        else {
            var opt = this.auth.getUserAuthorizationHeaders();
            this.observable = this.http.get(this.config.baseUrl + "user/profile", opt)
                .map(function (response) {
                _this.observable = null;
                if (response.status == 400) {
                    return "FAILURE";
                }
                else if (response.status == 200) {
                    var body = response.json();
                    if (body) {
                        _this.profile = body;
                        _this.storage.set('profile', _this.profile);
                        _this.config.updateComponents('profile', 1);
                        return body;
                    }
                }
            });
            return this.observable;
        }
    };
    UserService.prototype.getProfileTab = function (user_id, key, force) {
        var _this = this;
        if (force === void 0) { force = false; }
        var loadedtabs = this.config.trackComponents('profiletabs');
        if (loadedtabs && loadedtabs.indexOf(key) == -1 || force) {
            if (this.tabobservable[key]) {
                return this.tabobservable[key];
            }
            else {
                // reset all topic before fetch
                if (key == 'topic') {
                    this.forum.my_topics = [];
                }
                // reset all replies before fetch
                if (key == 'reply') {
                    this.forum.my_replies = [];
                }
                this.profileTabPaged[key] = 1;
                var opt = this.auth.getUserAuthorizationHeaders();
                var url = this.config.baseUrl + "user/profile/?tab=" + key + "&per_page=" + this.config.settings.per_view + "&paged=" + this.profileTabPaged[key];
                this.tabobservable[key] = this.http.get(url, opt)
                    .map(function (response) {
                    _this.tabobservable[key] = null;
                    if (response.status == 400) {
                        return "FAILURE";
                    }
                    else if (response.status == 200) {
                        var body = response.json();
                        console.log(key);
                        if (body) {
                            _this.storage.set(key + '_' + user_id, body);
                            if (key == 'activity') {
                                _this.activityService.getActivities();
                            }
                            if (key == 'results') {
                                _this.getResults();
                            }
                            //to support show hide in my courses tab           
                            if (key == 'courses') {
                                if (body) {
                                    body.map(function (item) {
                                        item.show = 1;
                                    });
                                }
                            }
                            if (key == 'batch') {
                                _this.group.get_my_batches(body);
                            }
                            // fetch topic by pagination
                            if (key == 'topic') {
                                var paged = _this.profileTabPaged[key] ? _this.profileTabPaged[key] : 1;
                                _this.forum.get_my_topics(body, paged);
                            }
                            // fetch topic by pagination
                            if (key == 'reply') {
                                var paged = _this.profileTabPaged[key] ? _this.profileTabPaged[key] : 1;
                                _this.forum.get_my_replies(body, paged);
                            }
                            if (key == 'attendance') {
                                var paged = _this.profileTabPaged[key] ? _this.profileTabPaged[key] : 1;
                                _this.attendance.get_my_course(body, paged);
                            }
                            _this.profile.data[key] = body;
                            _this.config.addToTracker('profiletabs', key);
                            return body;
                        }
                    }
                });
                return this.tabobservable[key];
            }
        }
        else {
            if (this.profile && this.profile.data[key]) {
                return __WEBPACK_IMPORTED_MODULE_3_rxjs_Observable__["Observable"].of(this.profile.data[key]);
            }
            else {
                if (!this.user) {
                    this.user = this.config.track.user;
                }
                return __WEBPACK_IMPORTED_MODULE_3_rxjs_Observable__["Observable"].fromPromise(this.storage.get(key + '_' + this.user.id).then(function (profiletab) {
                    console.log('fetching ' + key + ' from local');
                    _this.profile.data[key] = profiletab;
                    return profiletab;
                }));
            }
        }
    };
    UserService.prototype.getMoreProfileTab = function (user, key) {
        var _this = this;
        if (!this.profileTabPaged[key]) {
            this.profileTabPaged[key] = 1;
        }
        this.profileTabPaged[key]++;
        var opt = this.auth.getUserAuthorizationHeaders();
        return this.http.get(this.config.baseUrl + "user/profile/?tab=" + key + "&per_page=" + this.config.settings.per_view + "&paged=" + this.profileTabPaged[key], opt)
            .map(function (response) {
            _this.observable = null;
            if (response.status == 400) {
                return "FAILURE";
            }
            else if (response.status == 200) {
                var body = JSON.parse(JSON.stringify(response));
                //let body = response.json();
                if (body) {
                    if (body.length) {
                        if (Array.isArray(_this.profile.data[key])) {
                            for (var i = 0; i < body.length; i++) {
                                //check if exists or not
                                if (!_this.checkObjectExists(_this.profile.data[key], body[i])) {
                                    //to support show hide in my courses tab           
                                    if (key == 'courses') {
                                        body[i].show = 1;
                                    }
                                    _this.profile.data[key].push(body[i]);
                                }
                            }
                            _this.storage.set('profile', _this.profile);
                            _this.storage.set(key + '_' + user.id, _this.profile.data[key]);
                            console.log('Setting for Tab ' + key);
                            console.log(_this.profile);
                        }
                    }
                    if (key == 'topic') {
                        var paged = _this.profileTabPaged[key] ? _this.profileTabPaged[key] : 1;
                        _this.forum.get_my_topics(body, paged);
                    }
                    if (key == 'reply') {
                        var paged = _this.profileTabPaged[key] ? _this.profileTabPaged[key] : 1;
                        _this.forum.get_my_replies(body, paged);
                    }
                    return body;
                }
            }
        });
    };
    UserService.prototype.updateCourseProgress = function (course_id, progress) {
        if (typeof this.profile !== 'undefined' && this.profile) {
            if (this.profile.data['courses'].length) {
                for (var i = 0; i < this.profile.data['courses'].length; i++) {
                    if (this.profile.data['courses'][i].id == course_id) {
                        this.profile.data['courses'][i].user_progress = progress;
                    }
                }
            }
        }
        this.storage.set('progress_' + course_id + '_' + this.user.id, progress);
        var opt = this.auth.getUserAuthorizationHeaders();
        this.http.post(this.config.baseUrl + "updatecourse/progress", { 'course_id': course_id, 'progress': progress }, opt);
    };
    UserService.prototype.getAllInstructors = function () {
        var _this = this;
        if (this.instructors && this.config.trackComponents('allinstructors') == this.instructors.length && this.instructors.length > 0) {
            if (this.instructors.length) {
                return __WEBPACK_IMPORTED_MODULE_3_rxjs_Observable__["Observable"].of(this.instructors);
            }
            else {
                return __WEBPACK_IMPORTED_MODULE_3_rxjs_Observable__["Observable"].fromPromise(this.storage.get('instructors').then(function (instructors) {
                    _this.instructors = instructors;
                    return _this.instructors;
                }));
            }
        }
        else {
            this.observable = this.http.get(this.config.baseUrl + "instructors/")
                .map(function (response) {
                _this.observable = null;
                if (response.status == 400) {
                    return "FAILURE";
                }
                else if (response.status == 200) {
                    var body = response.json();
                    if (body) {
                        _this.instructors = body;
                        _this.storage.set('instructors', _this.instructors);
                        _this.config.updateComponents('allinstructors', _this.instructors.length);
                        return body;
                    }
                }
            });
            return this.observable;
        }
    };
    UserService.prototype.getInstructor = function (instructor_id) {
        var _this = this;
        var allu = this.config.trackComponents('instructors');
        if (allu.indexOf(instructor_id) != -1) {
            if (this.instructor.length && this.instructor[instructor_id]) {
                return __WEBPACK_IMPORTED_MODULE_3_rxjs_Observable__["Observable"].of(this.instructor[instructor_id]);
            }
            else {
                this.instructorObservable = __WEBPACK_IMPORTED_MODULE_3_rxjs_Observable__["Observable"].fromPromise(this.storage.get('instructor_' + instructor_id).then(function (instructor) {
                    _this.instructor[instructor_id] = instructor;
                    return instructor;
                }));
            }
        }
        else {
            this.instructorObservable = this.http.get(this.config.baseUrl + "instructors/" + instructor_id)
                .map(function (response) {
                _this.observable = null;
                if (response.status == 400) {
                    return "FAILURE";
                }
                else if (response.status == 200) {
                    var body = response.json();
                    console.log(body);
                    if (body) {
                        _this.instructor[instructor_id] = body;
                        _this.storage.set('instructor_' + instructor_id, _this.instructor[instructor_id]);
                        _this.config.addToTracker('instructors', instructor_id);
                        return body;
                    }
                }
            });
        }
        return this.instructorObservable;
    };
    UserService.prototype.getResult = function (result) {
        var _this = this;
        console.log(result);
        var saved_results = this.config.trackComponents('saved_results');
        if (saved_results && Array.isArray(saved_results) && saved_results.indexOf(result.quiz) > -1) {
            this.resultObservable = __WEBPACK_IMPORTED_MODULE_3_rxjs_Observable__["Observable"].fromPromise(this.storage.get('saved_results_' + this.config.user.id).then(function (res) {
                if (res) {
                    for (var i = 0; i < res.length; i++) {
                        if (res[i].id == result.quiz) {
                            return res[i].body;
                        }
                    }
                }
            }));
        }
        else {
            var opt = this.auth.getUserAuthorizationHeaders();
            this.resultObservable = this.http.get(this.config.baseUrl + "user/profile/?tab=result&activity_id=" + result.activity_id, opt)
                .map(function (response) {
                _this.observable = null;
                if (response.status == 400) {
                    return "FAILURE";
                }
                else if (response.status == 200) {
                    var body = response.json();
                    console.log(body);
                    if (body.length >= 1) {
                        _this.saved_results.push({ 'id': result.quiz, 'body': body });
                        _this.config.addToTracker('saved_results', result.quiz);
                        _this.storage.set('saved_results_' + _this.config.user.id, _this.saved_results);
                        return body;
                    }
                    else {
                        return { 'error': _this.config.get_translation('open_results_on_site') };
                    }
                }
            });
        }
        return this.resultObservable;
    };
    /*
    REVIEWS
     */
    UserService.prototype.getReview = function (course_id) {
        var _this = this;
        if (!this.user) {
            this.user = this.config.track.user;
        }
        var flag = true;
        if (this.reviews.length) {
            flag = false; //wait for API call
            for (var i = 0; i < this.reviews.length; i++) {
                if (this.reviews[i].id == course_id) {
                    return __WEBPACK_IMPORTED_MODULE_3_rxjs_Observable__["Observable"].of(this.reviews[i].review);
                }
            }
            flag = true;
        }
        if (flag) {
            var myreviews = this.config.trackComponents('reviews');
            if (myreviews.indexOf(course_id) > -1) { //if found in storage
                return __WEBPACK_IMPORTED_MODULE_3_rxjs_Observable__["Observable"].fromPromise(this.storage.get('review_' + course_id + '_' + this.user.id).then(function (review) {
                    _this.reviews.push({ 'id': course_id, 'review': review });
                    return review;
                }));
            }
            else {
                if (this.reviewObservable) {
                    return this.reviewObservable;
                }
                else {
                    var opt = this.auth.getUserAuthorizationHeaders();
                    this.reviewObservable = this.http.get(this.config.baseUrl + "user/getreview/" + course_id, opt)
                        .map(function (response) {
                        _this.reviewObservable = null;
                        if (response.status == 400) {
                            return "FAILURE";
                        }
                        else if (response.status == 200) {
                            var body = response.json();
                            if (body) {
                                _this.reviews.push({ 'id': course_id, 'review': body });
                                _this.config.addToTracker('reviews', course_id);
                                _this.storage.set('review_' + course_id + '_' + _this.user.id, body);
                                return body;
                            }
                        }
                    });
                }
            }
        }
        return this.reviewObservable;
    };
    UserService.prototype.postReview = function (course_id, review) {
        var _this = this;
        var opt = this.auth.getUserAuthorizationHeaders();
        if (!this.user) {
            this.user = this.config.track.user;
        }
        return this.http.post(this.config.baseUrl + "updatecourse/addreview", {
            'course_id': course_id,
            'title': review.title,
            'rating': review.rating,
            'review': review.review
        }, opt)
            .map(function (response) {
            if (response.status == 400) {
                return { 'message': _this.config.get_translation('failed') };
            }
            else if (response.status == 200) {
                var body = response.json();
                _this.storage.set('review_' + course_id + '_' + _this.user.id, body);
                return body;
            }
        });
    };
    UserService.prototype.getResults = function () {
        var _this = this;
        this.storage.get('saved_results_' + this.config.user.id).then(function (res) {
            if (res) {
                _this.saved_results = res;
            }
        });
    };
    UserService.prototype.addResult = function (result) {
        var flag = 1;
        if (this.saved_results.length) {
            for (var i = 0; i < this.saved_results.length; i++) {
                if (result.id == this.saved_results[i].id) {
                    flag = 0;
                }
            }
        }
        if (flag && !result.meta) {
            this.saved_results.push(result);
            this.storage.set('saved_results_' + this.config.user.id, this.saved_results);
        }
        //Send to API and record activity id
    };
    UserService.prototype.getUser = function () {
        return this.auth.getUser();
    };
    UserService.prototype.addCourse = function (course) {
        var _this = this;
        var opt = this.auth.getUserAuthorizationHeaders();
        return this.http.post(this.config.baseUrl + "user/subscribe", {
            'course_id': course.id,
        }, opt)
            .map(function (response) {
            if (response.status == 400) {
                return { 'message': _this.config.get_translation('failed') };
            }
            else if (response.status == 200) {
                if (_this.profile) {
                    if ('data' in _this.profile) {
                        delete _this.profile.data['courses'];
                    }
                }
                var body = response.json();
                return body;
            }
        });
    };
    /*
    Quiz API
     */
    UserService.prototype.quizStarted = function (quiz_id) {
        var opt = this.auth.getUserAuthorizationHeaders();
        return this.http.post(this.config.baseUrl + "user/quiz/start", {
            'quiz_id': quiz_id,
        }, opt);
    };
    UserService.prototype.quizFinished = function (quiz) {
        var opt = this.auth.getUserAuthorizationHeaders();
        return this.http.post(this.config.baseUrl + "user/quiz/finish", {
            'quiz': quiz,
        }, opt);
    };
    /*
    Profile Pic
     */
    UserService.prototype.saveUserProfilePic = function (file_uri) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                this.config.user.avatar = file_uri;
                return [2 /*return*/];
            });
        });
    };
    /*
        Edit profile field data
    */
    UserService.prototype.editProfileField = function (field, go) {
        var _this = this;
        if (go) {
            //Merge filed data
            this.storage.get('profile_' + this.config.user.id).then(function (res) {
                if (res) {
                    for (var i = 0; i < res.length; i++) {
                        if (res[i] && res[i].fields) {
                            if (res[i].fields.length) {
                                for (var k = 0; k < res[i].fields.length; k++) {
                                    if (res[i].fields[k].id == field.id) {
                                        res[i].fields[k] = field;
                                    }
                                }
                            }
                        }
                    }
                    _this.storage.set('profile_' + _this.config.user.id, res);
                }
            });
            var opt = this.auth.getUserAuthorizationHeaders();
            this.http.post(this.config.baseUrl + "user/profile/fields", {
                'field': field,
            }, opt).subscribe(function (res) {
                res = res.json();
                if (res) {
                    var toast = _this.toastCtrl.create({
                        message: res['message'],
                        duration: 1000,
                        position: 'bottom'
                    });
                    toast.present();
                }
            });
        }
    };
    /*
    CHARTS
     */
    UserService.prototype.getCourseChart = function () {
        //let chart = {'labels':[],'data':[]};
        var _this = this;
        var charts = this.config.trackComponents('dashboardCharts');
        if (charts.indexOf('course') > -1) { //if found in storage
            return __WEBPACK_IMPORTED_MODULE_3_rxjs_Observable__["Observable"].fromPromise(this.storage.get('dashboardCharts_Course_' + this.config.user.id).then(function (charts) {
                return charts;
            }));
        }
        else {
            if (this.coursechartObservable) {
                return this.coursechartObservable;
            }
            else {
                var opt = this.auth.getUserAuthorizationHeaders();
                this.coursechartObservable = this.http.get(this.config.baseUrl + "user/chart/course", opt)
                    .map(function (response) {
                    _this.coursechartObservable = null;
                    if (response.status == 400) {
                        return "FAILURE";
                    }
                    else if (response.status == 200) {
                        var body = response.json();
                        if (body) {
                            _this.config.addToTracker('dashboardCharts', 'course');
                            _this.storage.set('dashboardCharts_Course_' + _this.config.user.id, body);
                            return body;
                        }
                    }
                });
                return this.coursechartObservable;
            }
        }
    };
    UserService.prototype.getQuizChart = function () {
        //let chart = {'labels':[],'data':[]};
        var _this = this;
        var charts = this.config.trackComponents('dashboardCharts');
        if (charts.indexOf('quiz') > -1) { //if found in storage
            return __WEBPACK_IMPORTED_MODULE_3_rxjs_Observable__["Observable"].fromPromise(this.storage.get('dashboardCharts_Quiz_' + this.config.user.id).then(function (charts) {
                return charts;
            }));
        }
        else {
            if (this.quizchartObservable) {
                return this.quizchartObservable;
            }
            else {
                var opt = this.auth.getUserAuthorizationHeaders();
                this.quizchartObservable = this.http.get(this.config.baseUrl + "user/chart/quiz", opt)
                    .map(function (response) {
                    _this.quizchartObservable = null;
                    if (response.status == 400) {
                        return "FAILURE";
                    }
                    else if (response.status == 200) {
                        var body = response.json();
                        if (body) {
                            _this.config.addToTracker('dashboardCharts', 'quiz');
                            _this.storage.set('dashboardCharts_Quiz_' + _this.config.user.id, body);
                            return body;
                        }
                    }
                });
                return this.quizchartObservable;
            }
        }
    };
    UserService.prototype.contact = function (val) {
        var _this = this;
        console.log('inside');
        console.log(val);
        return this.http.post(this.config.baseUrl + "contact/", {
            'client_id': this.config.settings.client_id,
            'state': this.config.settings.state,
            'contact': val
        })
            .map(function (response) {
            if (response.status == 400) {
                return { 'message': _this.config.get_translation('failed') };
            }
            else if (response.status == 200) {
                return response.json();
            }
        });
    };
    UserService.prototype.checkObjectExists = function (main, value) {
        var exists = false;
        for (var i = 0; i < main.length; i++) { //iterate through each object in an array
            if (JSON.stringify(main[i]) === JSON.stringify(value)) {
                exists = true;
                break;
            }
        }
        return exists;
    };
    UserService = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Http */],
            __WEBPACK_IMPORTED_MODULE_7__authentication__["a" /* AuthenticationService */],
            __WEBPACK_IMPORTED_MODULE_8__ionic_storage__["b" /* Storage */],
            __WEBPACK_IMPORTED_MODULE_9__config__["a" /* ConfigService */],
            __WEBPACK_IMPORTED_MODULE_5_ionic_angular__["q" /* ToastController */],
            __WEBPACK_IMPORTED_MODULE_6__activity__["a" /* ActivityService */],
            __WEBPACK_IMPORTED_MODULE_10__group__["a" /* GroupService */],
            __WEBPACK_IMPORTED_MODULE_11__forum__["a" /* ForumService */],
            __WEBPACK_IMPORTED_MODULE_12__ionic_native_camera__["a" /* Camera */],
            __WEBPACK_IMPORTED_MODULE_13__attendance__["a" /* AttendanceService */]])
    ], UserService);
    return UserService;
}());

//# sourceMappingURL=users.js.map

/***/ }),

/***/ 3:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ConfigService; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ionic_storage__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_firebase__ = __webpack_require__(315);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_firebase___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_firebase__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var ConfigService = /** @class */ (function () {
    /*== END == */
    function ConfigService(storage, http) {
        var _this = this;
        this.storage = storage;
        this.http = http;
        this.isLoggedIn = false;
        this.per_view = 10;
        this.unread_notifications_count = 0;
        this.wallet = [];
        this.per_page_comment = 10;
        this.site_index = 0;
        this.loading = true;
        this.timestamp = Math.floor(new Date().getTime() / 1000);
        this.environment = {
            'cacheDuration': 86400,
        };
        this.lastaccess = 0;
        this.storage.get('lastaccess').then(function (res) {
            if (res) {
                _this.lastaccess = res;
            }
        });
        this.per_view = 5;
        this.settings = {
            'version': 2,
            'url': 'https://abdelrahman-amr.com/',
            'client_id': 'E0UBYbPlGRblIAnczbQXDeh',
            // 'url': 'http://192.168.5.61/wordpressnew/',
            // 'client_id': 'RDRc53PSL8ncHowchpkBi3O',
            'client_secret': 'Q1qxMolp9LIK#^@7w*2%NP4g2ZF1@Hy@6bKqkBzU',
            'state': 'yKBGLqGI',
            'access_token': '',
            'registration': 'app',
            'login': 'app',
            'facebook': {
                'enable': false,
                'app_id': 491338181212175
            },
            'google': {
                'enable': false,
            },
            'per_view': 5,
            'force_mark_all_questions': false,
            'wallet': false,
            'inappbrowser_purchases': false,
            'rtl': true,
            'units_in_inappbrowser': false,
            'open_units_in_inappbrowser_auto': false
        };
        this.baseUrl = this.settings.url + 'wp-json/wplms/v1/';
        this.oAuthUrl = this.settings.url + 'wplmsoauth/';
        this.defaultMenu = {
            'home': 'Home',
            'about': 'About',
            'courses': 'Courses',
            'instructors': 'Instructors',
            'contact': 'Contact'
        };
        this.homePage = {
            'featuredCourseSlider': 1,
            'categories': 1,
            'popular': 1,
            'featured': 1,
        };
        this.directoryFilters = {
            'categories': 1,
            'instructors': 1,
            'locations': 1,
            'levels': 1,
            'free_paid': 1,
            'online_offline': 0,
            'start_date': 0,
        };
        /* WALLET RECHARGE : in APP PRODUCT IDS */
        this.wallet = [
            { 'product_id': 'wplms_r_50', 'points': 50 },
            { 'product_id': 'sample', 'points': 50 },
        ];
        /* Started chat setting */
        this.chat = {
            'enable_chat': true,
            'chat_number': 10,
            'message_number': 10,
            'chat_agents': [1, 2, 3, 10],
            'welcome_text': 'مرحبًا بك في دردشة تطبيق عبد الرحمان عمر.',
            'nonloggedinForm': 1,
            'file_size': 5242880,
            'file_type': [
                'image/jpeg',
                'image/png',
                'text/plain',
                'text/html',
                'text/csv',
                'video/mp4',
                'application/pdf',
                'application/zip',
                'audio/mpeg',
                'image/bmp'
            ]
        };
        /* Initialize firebase here */
        this.configfirebase = {
            apiKey: "AIzaSyDkSF44PFcXb75lXlXGBK1-S32BoGxn4Zk",
            authDomain: "testproject-cfb58.firebaseapp.com",
            databaseURL: "https://testproject-cfb58.firebaseio.com",
            projectId: "testproject-cfb58",
            storageBucket: "testproject-cfb58.appspot.com",
            messagingSenderId: "567025855633"
        };
        __WEBPACK_IMPORTED_MODULE_3_firebase___default.a.initializeApp(this.configfirebase);
        /* End of Initialize firebase */
        /* Ended chat settings */
        /* Started batch setting */
        this.batch = {
            'enable_batch': true,
            'limit': 5,
            'days': ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'],
            'months': ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'] // Translation can be done for months
        };
        /* Ended batch settings */
        this.forum = {
            'enable_forum': true,
            'limit': 10,
            'paged': 1 // do not edit this
        };
        /* Started members-directory setting */
        this.members_directory = {
            'enable_members_directory': true,
            'per_page': 10,
            'paged': 1 // do not edit this
        };
        /* Ended members-directory setting */
        /*
            Started configuring multisite
            Translation can be for specific key also support
            other wise it will get translation from this.translation
        */
        this.multisite = {
            'enable_multisite': false,
            'sites': [
                {
                    'site_name': 'Site 1',
                    'logo': 'assets/images/multisite_logo.png',
                    'translation': {
                        'home_title': 'HOME PAGE 1',
                        'home_subtitle': 'Featured Items 1',
                    },
                    'all_settings': {
                        'settings': {
                            'version': 1,
                            'url': 'http://localhost/multisitewplms/',
                            'client_id': 'M5u7Hr9gSAFihb44yRAHAys',
                            'rtl': true
                        },
                        'configfirebase': {
                            apiKey: "AIzaSyC0eCOfddQ_II4EeFm0X_AKUzU3vkYdVfQ",
                            authDomain: "fir-chat-f8c3f.firebaseapp.com",
                            databaseURL: "https://fir-chat-f8c3f.firebaseio.com",
                            projectId: "fir-chat-f8c3f",
                            storageBucket: "fir-chat-f8c3f.appspot.com",
                            messagingSenderId: "346813030464"
                        },
                        'batch': {
                            'enable_batch': true,
                            'limit': 5,
                            'days': ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'],
                            'months': ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'] // Translation can be done for months
                        }
                    }
                },
                {
                    'site_name': 'Site 2',
                    'logo': 'assets/images/multisite_logo.png',
                    'translation': {
                        'home_title': 'HOME PAGE 2',
                        'home_subtitle': 'Featured Items 2',
                    },
                    'all_settings': {
                        'settings': {
                            'version': 1,
                            'url': 'http://localhost/multisitewplms/site2/',
                            'client_id': 'CwnH6u8BgDEiENScXlgMMA3',
                            'rtl': true
                        },
                        'configfirebase': {
                            apiKey: "AIzaSyC0eCOfddQ_II4EeFm0X_AKUzU3vkYdVfQ",
                            authDomain: "fir-chat-f8c3f.firebaseapp.com",
                            databaseURL: "https://fir-chat-f8c3f.firebaseio.com",
                            projectId: "fir-chat-f8c3f",
                            storageBucket: "fir-chat-f8c3f.appspot.com",
                            messagingSenderId: "346813030464"
                        },
                        'batch': {
                            'enable_batch': false,
                            'limit': 5,
                            'days': ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'],
                            'months': ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'] // Translation can be done for months
                        }
                    }
                },
                {
                    'site_name': 'Site 3 wordpressnew',
                    'logo': 'assets/images/multisite_logo.png',
                    'translation': {
                        'home_title': 'HOME PAGE 3',
                        'home_subtitle': 'Featured Items 3',
                    },
                    'all_settings': {
                        'settings': {
                            'version': 1,
                            'url': 'http://localhost/wordpressnew/',
                            'client_id': 'RDRc53PSL8ncHowchpkBi3O',
                            'rtl': true
                        },
                        'configfirebase': {
                            apiKey: "AIzaSyC0eCOfddQ_II4EeFm0X_AKUzU3vkYdVfQ",
                            authDomain: "fir-chat-f8c3f.firebaseapp.com",
                            databaseURL: "https://fir-chat-f8c3f.firebaseio.com",
                            projectId: "fir-chat-f8c3f",
                            storageBucket: "fir-chat-f8c3f.appspot.com",
                            messagingSenderId: "346813030464"
                        },
                        'batch': {
                            'enable_batch': false,
                            'limit': 5,
                            'days': ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'],
                            'months': ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'] // Translation can be done for months
                        }
                    }
                },
                {
                    'site_name': 'Site 4 Wplms.io',
                    'logo': 'assets/images/multisite_logo.png',
                    'translation': {
                        'home_title': 'HOME PAGE 4',
                        'home_subtitle': 'Featured Items 4',
                    },
                    'all_settings': {
                        'settings': {
                            'version': 1,
                            'url': 'https://wplms.io/',
                            'client_id': '9gWLZgmn45Es4cjoAUPopRX',
                            'rtl': true
                        },
                        'configfirebase': {
                            apiKey: "AIzaSyC0eCOfddQ_II4EeFm0X_AKUzU3vkYdVfQ",
                            authDomain: "fir-chat-f8c3f.firebaseapp.com",
                            databaseURL: "https://fir-chat-f8c3f.firebaseio.com",
                            projectId: "fir-chat-f8c3f",
                            storageBucket: "fir-chat-f8c3f.appspot.com",
                            messagingSenderId: "346813030464"
                        },
                        'batch': {
                            'enable_batch': false,
                            'limit': 5,
                            'days': ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'],
                            'months': ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'] // Translation can be done for months
                        }
                    }
                },
                {
                    'site_name': 'Site 5 multiste2 site 2',
                    'logo': 'assets/images/multisite_logo.png',
                    'translation': {
                        'home_title': 'HOME PAGE 5',
                        'home_subtitle': 'Featured Items 5',
                    },
                    'all_settings': {
                        'settings': {
                            'version': 1,
                            'url': 'http://localhost/multisitewplms2/site2/',
                            'client_id': 'YkAYGnws2zP1OHfZa3Uo9aT',
                            'rtl': true
                        },
                        'configfirebase': {
                            apiKey: "AIzaSyC0eCOfddQ_II4EeFm0X_AKUzU3vkYdVfQ",
                            authDomain: "fir-chat-f8c3f.firebaseapp.com",
                            databaseURL: "https://fir-chat-f8c3f.firebaseio.com",
                            projectId: "fir-chat-f8c3f",
                            storageBucket: "fir-chat-f8c3f.appspot.com",
                            messagingSenderId: "346813030464"
                        },
                        'batch': {
                            'enable_batch': false,
                            'limit': 5,
                            'days': ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'],
                            'months': ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'] // Translation can be done for months
                        }
                    }
                }
            ]
        };
        /* Ended configuring multisite */
        /* Started attendance setting */
        this.attendance = {
            'enable_attendance': true,
            'enable_mark_attendance': true //mark work when attendance is enable
        };
        /* Ended attendance setting */
        /* Started Push notification settings*/
        this.push_notification = {
            'enable_push_notification': true,
            'senderID': '848705640498',
            'duration': 2000,
            'registrationId': '' // fetch from device
        };
        /* Ended Push notification settings */
        /* TRACKS LOADED COMPONENTS
            STATUS :
                0 NOT LOADED
                1 LOADED
                In array : Loaded
        */
        this.defaultTrack = {
            'version': 1,
            'counter': 0,
            'user': 0,
            'featured': 0,
            'popular': 0,
            'allcoursecategories': 0,
            'allcourselocations': 0,
            'allcourselevels': 0,
            'allcourses': 0,
            'allposts': 0,
            'transactions': 0,
            'posts': [],
            'dashboardCharts': [],
            'courses': [],
            'stats': 0,
            'notifications': 0,
            'announcements': 0,
            'allinstructors': 0,
            'instructors': [],
            'profile': 0,
            'profiletabs': [],
            'reviews': [],
            'course_status': [],
            'statusitems': [],
            'saved_results': [],
            'comments': [],
            'assignments': [],
            'members': []
        };
        this.track = this.defaultTrack;
        if (this.batch.enable_batch) {
            this.track['allgroups'] = 0;
            this.track['groups'] = [];
        }
        this.unread_notifications_count = 0;
        //walid
        this.translations = {
            'home_title': 'الصفحة الرئيسية',
            'home_subtitle': 'السلع المعروضة',
            'start_course': 'بداية',
            'search_title': 'يبحث..',
            'continue_course': 'استمر',
            'completed_course': 'منجز',
            'expired_course': 'منتهية الصلاحية',
            'evaluation_course': 'تحت التقييم',
            'no_reviews': 'لم يتم العثور على مراجعات لهذه الدورة.',
            'year': 'عام',
            'years': 'سنوات',
            'month': 'شهر',
            'months': 'الشهور',
            'week': 'أسبوع',
            'weeks': 'أسابيع',
            'day': 'يوم',
            'days': 'أيام',
            'hour': 'ساعة',
            'hours': 'ساعات',
            'minute': 'دقيقة',
            'minutes': 'الدقائق',
            'second': 'ثانيا',
            'seconds': 'ثواني',
            'expired': 'منتهية الصلاحية',
            'completed': 'منجز',
            'start_quiz': 'بدء الاختبار',
            'save_quiz': 'حفظ الاختبار',
            'submit_quiz': 'إرسال الاختبار',
            'marks': 'ماركس',
            'marks_obtained': 'العلامات المتحصل عليها',
            'max_marks': 'العلامات القصوى',
            'true': 'صحيح',
            'false': 'خاطئة',
            'checkanswer': 'تحقق من الجواب',
            'score': 'أحرز هدفا',
            'progress': 'التقدم',
            'time': 'زمن',
            'filter_options': 'خيارات التصفية',
            'sort_options': 'خيارات بسيطة',
            'popular': 'جمع',
            'recent': 'الأخيرة',
            'alphabetical': 'مرتب حسب الحروف الأبجدية',
            'rated': 'الأعلى تقييماً',
            'start_date': 'القادمة',
            'okay': 'حسنا',
            'dismiss': 'رفض',
            'select_category': 'اختر الفئة',
            'select_location': 'اختر موقعا',
            'select_level': 'اختار مستوى',
            'select_instructor': 'حدد مدرب',
            'free_paid': 'حدد سعر الدورة',
            'price': 'السعر',
            'apply_filters': 'تطبيق الفلاتر',
            'close': 'قريب',
            'not_found': 'لم يتم العثور على دورات تطابق معاييرك',
            'no_courses': 'لا توجد دورات!',
            'course_directory_title': 'جميع الدورات',
            'course_directory_sub_title': 'دليل الدورة',
            'all': 'الكل',
            'all_free': 'مجانا',
            'all_paid': 'دفع',
            'select_online_offline': 'اختر نوع الدورة',
            'online': 'عبر الانترنت',
            'offline': 'غير متصل على الانترنت',
            'after_start_date': 'يبدأ بعد التاريخ',
            'before_start_date': 'يبدأ قبل التاريخ',
            'instructors_page_title': 'جميع المدربين',
            'instructors_page_description': 'دليل المعلم',
            'no_instructors': 'لم يتم العثور على معلمين',
            'get_all_course_by_instructor': 'عرض جميع الدورات التدريبية من قبل المدرب',
            'profile': 'الملف الشخصي',
            'about': 'حول',
            'courses': 'الدورات',
            'marked_answer': 'الإجابة المحددة',
            'correct_answer': 'اجابة صحيحة',
            'explanation': 'تفسير',
            'awaiting_results': 'في انتظار نتائج الاختبار',
            'quiz_results': 'نتيجة الاختبار',
            'retake_quiz': 'استعد الاختبار',
            'quiz_start': 'بدأ الاختبار',
            'quiz_start_content': 'لقد بدأت الاختبار',
            'quiz_submit': 'تم إرسال الاختبار',
            'quiz_submit_content': 'لقد أرسلت الاختبار',
            'quiz_evaluate': 'تم تقييم الاختبار',
            'quiz_evaluate_content': 'تم تقييم الاختبار',
            'certificate': 'شهادة',
            'badge': 'شارة',
            'no_notification_found': 'لم يتم العثور على إشعارات!',
            'no_activity_found': 'لم يتم العثور على نشاط!',
            'back_to_course': 'العودة إلى الدورة',
            'review_course': 'دورة مراجعة',
            'finish_course': 'إنهاء الدورة',
            'login_heading': 'تسجيل الدخول',
            'login_title': 'البدء',
            'login_content': 'ستكون دوراتك متاحة على جميع أجهزتك',
            'login_have_account': 'هل لديك حساب',
            'login_signin': 'تسجيل الدخول',
            'login_signup': 'سجل',
            'bbb_buuton': 'الجلسة المفتوحة',
            'login_terms_conditions': 'الأحكام والشروط',
            'signin_username': 'اسم المستخدم أو البريد الالكتروني',
            'signin_password': 'كلمه السر',
            'signup_username': 'اسم المستخدم',
            'signup_email': 'رسائل البريد الإلكتروني',
            'signup_password': 'كلمه السر',
            'signup': 'سجل',
            'login_back': 'العودة لتسجيل الدخول',
            'post_review': 'نشر مراجعة لهذه الدورة',
            'review_title': 'عنوان للمراجعة',
            'review_rating': 'تقييم لهذه المراجعة',
            'review_content': 'محتوى للمراجعة',
            'submit_review': 'مراجعة آخر',
            'rating1star': 'دورة سيئة',
            'rating2star': 'لا تصل إلى العلامة',
            'rating3star': 'مرض',
            'rating4star': 'دورة جيدة',
            'rating5star': 'ممتاز',
            'failed': 'فشل',
            'user_started_course': 'لقد بدأت دورة',
            'user_submitted_quiz': 'لقد قدمت الاختبار',
            'user_quiz_evaluated': 'تم تقييم الاختبار',
            'course_incomplete': 'الدورة التدريبية غير مكتملة',
            'finish_this_course': 'يرجى وضع علامة على جميع وحدات هذه الدورة',
            'ok': 'حسنا',
            'update_title': 'تحديثات',
            'update_read': 'اقرأ',
            'update_unread': 'غير مقروءة',
            'no_updates': 'لم يتم العثور على تحديثات',
            'wishlist_title': 'قائمة الرغبات',
            'no_wishlist': 'لم يتم العثور على دورات قائمة أمنيات',
            'no_finished_courses': 'لا توجد دورات منتهية!',
            'no_results': 'لم يتم العثور على نتائج!',
            'loadingresults': 'ارجوك انتظر...',
            'signup_with_email_button_label': 'الاشتراك ببريدك الإلكتروني',
            'clear_cache': 'مسح البيانات دون اتصال',
            'cache_cleared': 'تم مسح ذاكرة التخزين المؤقت في وضع عدم الاتصال',
            'sync_data': 'مزامنة البيانات',
            'data_synced': 'تمت مزامنة البيانات',
            'logout': 'تسجيل خروج',
            'loggedout': 'لقد قمت بتسجيل الخروج بنجاح!',
            'register_account': 'تسجيل الدخول أو إنشاء حساب للمتابعة!',
            'email_certificates': 'شهادات البريد الإلكتروني',
            'manage_data': 'إدارة البيانات المخزنة',
            'saved_information': 'المعلومات المحفوظة',
            'client_id': 'مفتاح الموقع',
            'saved_quiz_results': 'Saved Results', 'timeout': 'نفذ الوقت',
            'app_quiz_results': 'النتائج',
            'change_profile_image': 'تغيير صورة الملف الشخصي',
            'pick_gallery': 'تعيين صورة من المعرض',
            'take_photo': 'التقط صورتي',
            'cancel': 'إلغاء',
            'blog_page': 'صفحة المدونة',
            'course_chart': "إحصائيات الدورة التدريبية",
            'quiz_chart': "إحصائيات الاختبار",
            'percentage': 'النسبة المئوية',
            'scores': 'درجات',
            'edit': 'تعديل',
            'change': 'يتغيرون',
            'edit_profile_field': 'تحرير حقل ملف التعريف',
            'pull_to_refresh': 'سحب لتحديث',
            'refreshing': '...منعش',
            'contact_page': 'اتصل',
            'contact_name': 'اسم',
            'contact_email': 'البريد الإلكتروني',
            'contact_message': 'رسالة',
            'contact_follow_us': 'تابعنا',
            'invalid_url': 'قيمة عنوان url غير صالحة',
            'read_notifications': 'قراءة الإشعارات',
            'unread_notifications': 'الإشعارات غير المقروءة',
            'logout_from_device': 'هل أنت متأكد من أنك تريد تسجيل الخروج من هذا الجهاز؟',
            'accept_continue': 'قبول ومتابعة',
            'finished': 'تم الانتهاء من',
            'active': 'نشيط',
            'open_results_on_site': 'يرجى التحقق من نتائج هذا الاختبار في المتصفح.',
            'show_more': 'أكثر',
            'show_less': 'أقل',
            'buy': 'يشترى',
            'pricing_options': 'خيارات التسعير',
            'pricing_options_title': 'خيارات التسعير (اسحب للتحديد)',
            'home_menu_title': 'الصفحة الرئيسية',
            'directory_menu_title': 'الدورات',
            'instructors_menu_title': 'المدربون',
            'blog_menu_title': 'مدونة',
            'contact_menu_title': 'اتصل',
            'popular_courses_title_home_page': 'الدورات الشعبية',
            'popular_courses_subtitle_home_page': "الدورات الشعبية والرائجة",
            'categories_title_home_page': 'التصنيفات',
            'categories_subtitle_home_page': 'تصفح الدورات عن طريق فئة الدورة التدريبية',
            'directory_search_placeholder': 'بحث',
            'featured_courses': 'الدورات المميزة',
            'selected_courses': 'دورات مختارة',
            'markallquestions': 'يرجى وضع علامة على جميع الأسئلة أولاً.',
            'credit': 'ائتمان',
            'debit': 'مدين',
            'wallet_no_products': 'استشر المسؤول لإنشاء منتجات المحفظة!',
            'wallet_no_transactions': 'لم يتم العثور على معاملات!',
            'pay_from_wallet': 'الدفع من المحفظة',
            'use_wallet': 'استخدم مبلغ المحفظة للشراء',
            'pay': 'دفع',
            'login_to_buy': 'يرجى تسجيل الدخول لشراء هذه الدورة',
            'login_again': 'الرجاء إعادة تسجيل الدخول لشراء هذه الدورة',
            'insufficient_funds': 'أموال غير كافية في المحفظة! أضف المزيد من الأموال. ',
            'buy_from_site': 'الشراء من الموقع',
            'description': 'وصف',
            'curriculum': 'منهاج دراسي',
            'reviews': 'مراجعات',
            'instructors': 'المدربين',
            'retakes_remaining': 'يستعيد الباقي',
            'open_in_new_window': 'افتح في نافذة جديدة',
            'show_notes': 'إظهار الملاحظات والمناقشات',
            'unit_attachments': 'مرفقات الوحدة',
            'Adding_new_comment': 'إضافة تعليق جديد',
            'Replying_to_comment': 'الرد على',
            'Editing_comment': 'تحرير تعليق',
            'Submit_Comment': 'إرسال تعليق',
            'Reply_comment': 'الرد',
            'Edit_comment': 'تعديل',
            'Show_children': 'إظهار الطفل',
            'Hide_children': 'إخفاء الطفل',
            'Unitcomment': 'تعليق الوحدة',
            'No_comment_avail': 'لا مزيد من التعليقات المتاحة',
            'Add_comment': 'أضف تعليق',
            'Load_comment': 'تحميل تعليق',
            'Enter_your_comment': 'أدخل تعليقك',
            'Cancel': 'إلغاء',
            'insufficient_content': 'أضف المزيد من النص ليتم حفظه!',
            'start_assignment': 'بدء التعيين',
            'upload_assignment': 'تحميل مهمة',
            'your_attachment': 'مرفقك',
            'your_attachment_comment': 'تعليقك',
            'assignment_content': 'محتوى المهمة',
            'all_assignment': 'جميع المهام',
            'Not_match_size_or_type': 'نوع الملف أو حجمه غير متطابق',
            'Allowed_file_size': 'حجم الملف المسموح به',
            'Allowed_extensions': 'نوع الإضافة المسموح به',
            'You_have_2_minutes_remaining': 'لديك دقيقتان متبقيتان',
            'file_not_selected_comment_not_entered': 'لم يتم تحديد الملف أو لم يتم إدخال تعليق',
            'Timer_expired': 'انتهت صلاحية المؤقت',
            'start_now': 'ابدأ الآن',
            'mychats': 'دردشاتى',
            'members': 'أفراد',
            'chat': 'دردشة',
            'start_chat': 'بدء الدردشة',
            'start_new_chat': 'بدء محادثة جديدة',
            'chat_message': 'رسالة الدردشة',
            'chat_email': 'عنوان الايميل',
            'chat_name': 'اسم',
            'notification_send': 'إرسال الإخطار',
            'just_now': 'في هذة اللحظة',
            'search_user_from_website': 'بحث من الموقع',
            'more': 'أكثر',
            'is_typing': 'يكتب',
            'search_user_from_firebase': 'مستخدمين على الهواء',
            'online_user_to_initiate_new_chat': 'بدء الدردشة من مستخدمي الإنترنت',
            'user_from_site_you_can_not_chat': 'لا يمكنك الدردشة مع مستخدمي الموقع',
            'chat_initialized': 'تم بدء الدردشة',
            'Lenght_greater_than3': 'اكتب أكثر من 3 أحرف',
            'type_here': 'اكتب هنا لتصفية المستخدمين',
            'send_message': 'إرسال',
            'type_message': 'أكتب هنا',
            'back_to_chat': 'العودة إلى الرسائل',
            'file_not_valid': 'الملف ليس تحميلًا صالحًا مع شكل أو حجم آخر',
            'type_something': 'اطبع شيئا..',
            'file_selected': 'الملف المحدد يبدأ الكتابة ..',
            'file_not_selected': 'الملف غير محدد ابدأ الكتابة ..',
            'load_new_messages': 'تحميل المزيد',
            'group_directory': 'المجموعات والدفعات',
            'no_batches_in_course': 'دفعات غير موجودة لهذه الدورة',
            'batch': 'دفعات',
            'money_refunded': 'تم رد الأموال',
            'money_deducted': 'الأموال المخصومة',
            'not_enough_money_to_purchase_batch': 'ليس هناك ما يكفي من المال لشراء الدفعة',
            'transaction_failed': 'فشل Transacion',
            'money_deducted_joined': 'تم خصم الأموال والانضمام إلى الدفعة',
            'buy_batch': 'شراء الدفعة',
            'login_buy_batch': 'الرجاء تسجيل الدخول لشراء دفعة!',
            'no_access_from_batch': 'لا يمكنك الوصول من الدفعة إلى هذه الدورة',
            'group_name': 'أسم المجموعة',
            'group_description': 'وصف المجموعة',
            'total_members': 'مجموع الأعضاء',
            'batch_seats': "مقاعد دفعة",
            'start_batch_date': 'تاريخ البدء',
            'end_batch_date': 'تاريخ الانتهاء',
            'batch_start_time': 'وقت البدء',
            'batch_end_time': 'وقت النهاية',
            'weekly_schedule_off': 'إيقاف الجدول الأسبوعي',
            'now_to': 'الآن ل',
            'not_set': 'غير مضبوط',
            'continue': 'استمر',
            'no_member_found': 'لم يتم العثور على عضو',
            'no_news_found': 'لم يتم العثور على أخبار',
            'groups': 'مجموعات',
            'batches': 'دفعات',
            'join_batch': 'الرجاء الانضمام إلى الدفعة!',
            'newlyCreated': 'حديثة الانشاء',
            'lastActive': 'آخر نشاط',
            'mostMembers': 'معظم الأعضاء',
            'upComing': 'القادمة',
            'Batches_not_enable_in_app': 'المكوّن الإضافي للدفعات غير نشط في التطبيق',
            'members_directory': 'دليل الأعضاء',
            'topic_directory': 'دليل المواضيع',
            'reply_directory': 'دليل الرد',
            'no_member': 'لم يتم العثور على عضو',
            'no_group': 'لم يتم العثور على مجموعة',
            'reply_not_found': 'لم يتم العثور على الرد!',
            'ascending': 'تصاعدي',
            'descending': 'تنازلي',
            'topic_title': 'عنوان الموضوع',
            'topic_content': 'محتوى الموضوع',
            'reply_content': 'محتوى الرد',
            'create_topic': 'إنشاء موضوع',
            'create_reply': 'إضافة الرد',
            'edit_content': 'تحرير المحتوى ',
            'edit_reply': 'تحرير عرض',
            'delete_reply': 'حذف الرد',
            'create': 'خلق',
            'update': 'تحديث',
            'updating': 'جارٍ التحديث ...',
            'creating': 'خلق...',
            'sure_to_delete_reply': 'اضغط Ok لحذف الرد',
            'forum_not_enable_in_app': 'المنتدى غير ممكن في التطبيق',
            'limit_reached_to_get_reward': 'تم الوصول إلى الحد الأقصى للحصول على المكافأة',
            'points_added': "تمت إضافة الجسور",
            'forum_directory': 'دليل المنتدى',
            'forum_not_found': 'المنتدى غير موجود!',
            'topic_not_found': 'لم يتم العثور على الموضوع!',
            'oldest_post_first': 'الأقدم أولا',
            'latest_post_first': 'الأحدث أولاً',
            'login_to_access': 'تسجيل الدخول للوصول',
            'join_to_access': 'الانضمام إلى الوصول',
            'marked_attendance': 'ملحوظ',
            'unmarked_attendance': 'غير مميزة',
            'mark_today_attendance': 'بمناسبة حضور اليوم الحالي',
            'scanning_barcode': 'مسح الرمز الشريطي',
            'marking_attendance': 'الحضور الحضور',
            'getting_course_attendance': 'الحصول على حضور الدورة',
            'attendance_not_enable': 'الحضور غير ممكن',
            'select_site': 'حدد الموقع',
            'select_language': 'اختار اللغة',
            'admins': 'مشرف',
            'mods': 'تعديل',
            'public': 'عامة',
            'private': 'نشر',
            'hidden': 'مخفي',
            'start_end_dates': 'البداية - تواريخ الانتهاء'
        };
        //deano
        this.contactinfo = {
            'title': 'Contact Us',
            'message': 'Welcome to WPLMS App contact form. This is some message which is displayed on contact page. It supports HTML as well.',
            'address': '4 Pennsylvania Plaza, New York, NY 10001, USA',
            'email': 'vibethemes@gmail.com',
            'phone': '9999999999',
            'twitter': 'vibethemes',
            'facebook': 'vibethemes',
        };
        this.terms_conditions = 'These are app terms and conditions. Any user using this app must have\
		an account on site YouRSite.com. You must not distribute videos in this app to third parties.';
    }
    ConfigService.prototype.set_multisite = function (i) {
        var _this = this;
        if (this.multisite.enable_multisite && this.multisite.sites[i] && this.multisite.sites[i].all_settings) {
            // override config.setting for specific key
            if (this.multisite.sites[i].all_settings.settings) {
                Object.keys(this.multisite.sites[i].all_settings.settings).map(function (key) {
                    _this.settings[key] = _this.multisite.sites[i].all_settings.settings[key];
                });
            }
            // override config.chat and call chat object
            if (this.multisite.sites[i].all_settings.configfirebase) {
                this.configfirebase = this.multisite.sites[i].all_settings.configfirebase;
                var firebaseconfig_1 = this.configfirebase;
                // reinitialize firebase app
                __WEBPACK_IMPORTED_MODULE_3_firebase___default.a.app().delete().then(function () {
                    __WEBPACK_IMPORTED_MODULE_3_firebase___default.a.initializeApp(firebaseconfig_1);
                });
            }
            // override config.batch
            if (this.multisite.sites[i].all_settings.batch) {
                this.batch = this.multisite.sites[i].all_settings.batch;
            }
            // override config.forum
            if (this.multisite.sites[i].all_settings.forum) {
                this.forum = this.multisite.sites[i].all_settings.forum;
            }
            // override config.attendance
            if (this.multisite.sites[i].all_settings.attendance) {
                this.attendance = this.multisite.sites[i].all_settings.attendance;
            }
            // override config.attendance
            if (this.multisite.sites[i].all_settings.push_notification) {
                this.attendance = this.multisite.sites[i].all_settings.push_notification;
            }
        }
        // set base url with config.settings url
        this.set_base_url();
        this.site_index = i;
        this.storage.get('track').then(function (track) {
            if (track) {
                _this.track = track;
            }
        });
        this.storage.get('user').then(function (user) {
            if (user) {
                _this.user = user;
            }
        });
        console.log('$$$$$$$$$$$$$$$$$$$$$$ After mutisite $$$$$$$$$');
        console.log(this);
    };
    // this will be call after set_multisite and set_multilanguage : first clear things then set with new one
    ConfigService.prototype.set_multi_setting = function (i) {
        this.track = this.defaultTrack;
        this.storage.clear();
        this.storage.set('track', this.track);
        this.storage.set('introShown', true);
        this.storage.set('settings', this.settings);
        this.site_index = i;
        this.storage.set('site_index', i);
    };
    // set base url with setting.url
    ConfigService.prototype.set_base_url = function () {
        this.baseUrl = this.settings.url + 'wp-json/wplms/v1/';
    };
    ConfigService.prototype.get_translation = function (key) {
        if (this.multisite.enable_multisite) {
            if (this.multisite.sites[this.site_index].translation && this.multisite.sites[this.site_index].translation[key]) {
                return this.multisite.sites[this.site_index].translation[key];
            }
            else {
                if (this.translations[key]) {
                    return this.translations[key];
                }
            }
        }
        else {
            if (this.translations[key]) {
                return this.translations[key];
            }
        }
    };
    ConfigService.prototype.trackComponents = function (key) {
        return this.track[key];
    };
    ConfigService.prototype.updateComponents = function (key, value) {
        if (Array.isArray(this.track[key])) {
            this.track[key].push(value);
            this.storage.set('track', this.track);
        }
        else {
            this.track[key] = value;
            this.storage.set('track', this.track);
        }
    };
    //Only for arrays
    ConfigService.prototype.removeFromTracker = function (key, value) {
        if (Array.isArray(this.track[key])) {
            if (this.track[key].length) {
                if (this.track[key].indexOf(value) != -1) {
                    var k = this.track[key].indexOf(value);
                    this.track[key].splice(k, 1);
                    this.storage.set('track', this.track);
                }
            }
        }
    };
    ConfigService.prototype.addToTracker = function (key, value) {
        if (Array.isArray(this.track[key])) {
            if (this.track[key].indexOf(value) == -1) {
                console.log('in add to tracker array');
                this.track[key].push(value);
            }
        }
        else {
            console.log('in add to tracker single value');
            this.track[key] = value;
        }
        console.log(this.track);
        this.storage.set('track', this.track);
    };
    ConfigService.prototype.set_settings = function (key, value) {
        this.settings[key] = value;
        this.storage.set('settings', this.settings);
    };
    ConfigService.prototype.save_settings = function () {
        this.storage.set('settings', this.settings);
    };
    ConfigService.prototype.initialize = function () {
        var _this = this;
        this.storage.get('track').then(function (res) {
            if (res) {
                _this.track = res;
            }
        });
        this.storage.get('settings').then(function (res) {
            if (res) {
                _this.settings = res;
            }
        });
        this.storage.get('user').then(function (res) {
            if (res) {
                _this.user = res;
                if (_this.user['id']) {
                    _this.isLoggedIn = true;
                    /* make firebase login from storage */
                    _this.firebase_login_from_storage(_this.user);
                }
            }
            _this.getTracker();
        });
        this.storage.get('lastcourse').then(function (d) {
            _this.lastCourse = d;
        });
    };
    ConfigService.prototype.firebase_login_from_storage = function (user) {
        // make firebase hit here to register new user
        if (this.chat.enable_chat) {
            this.register_new_user(user); // make login to user or register
        }
        // end of registration
    };
    ConfigService.prototype.register_new_user = function (new_user_obj) {
        var $this = this;
        var type = 'student'; // get type here admin or  student
        __WEBPACK_IMPORTED_MODULE_3_firebase___default.a.database()
            .ref("/users/" + new_user_obj.id)
            .once('value', function (snapdata) {
            if (snapdata.val() == null) {
                var user_1 = {
                    'email': new_user_obj.email,
                    'id': new_user_obj.id,
                    'image': new_user_obj.avatar,
                    'name': new_user_obj.name,
                    'status': 1
                };
                __WEBPACK_IMPORTED_MODULE_3_firebase___default.a.database().ref("/users/" + new_user_obj.id + "/id").set(new_user_obj.id);
                __WEBPACK_IMPORTED_MODULE_3_firebase___default.a.database().ref("/users/" + new_user_obj.id + "/image").set(new_user_obj.avatar);
                __WEBPACK_IMPORTED_MODULE_3_firebase___default.a.database().ref("/users/" + new_user_obj.id + "/name").set(new_user_obj.name);
                __WEBPACK_IMPORTED_MODULE_3_firebase___default.a.database().ref("/users/" + new_user_obj.id + "/status").set(1);
                __WEBPACK_IMPORTED_MODULE_3_firebase___default.a.database().ref("/users/" + new_user_obj.id + "/type").set(type);
                __WEBPACK_IMPORTED_MODULE_3_firebase___default.a.database().ref("/users/" + new_user_obj.id + "/base").set(user_1)
                    .then(function (value) {
                    user_1.id = value.key; //new creted user id
                    // some onDisconnect operational event
                    __WEBPACK_IMPORTED_MODULE_3_firebase___default.a.database().ref("/users/" + user_1.id + "/status").onDisconnect().set(0);
                    __WEBPACK_IMPORTED_MODULE_3_firebase___default.a.database().ref("/users/" + user_1.id + "/lastActive").onDisconnect().set(Date.now());
                    __WEBPACK_IMPORTED_MODULE_3_firebase___default.a.database().ref("/users/" + user_1.id + "/base/status").onDisconnect().set(0);
                    __WEBPACK_IMPORTED_MODULE_3_firebase___default.a.database().ref("/users/" + user_1.id + "/base/lastActive").onDisconnect().set(Date.now());
                    //set base->id=new created user id and new chat assign
                    __WEBPACK_IMPORTED_MODULE_3_firebase___default.a.database().ref("/users/" + user_1.id + "/base/").set(user_1).then(function (new_value) {
                        console.log('new user registered');
                    });
                });
            }
            else {
                /*set status of user 1 if user logged_in int App also make
                    user status 0 if user not disconnect
                */
                // $this.config.user.id
                __WEBPACK_IMPORTED_MODULE_3_firebase___default.a.database().ref("/users/" + new_user_obj.id + "/status").set(1);
                __WEBPACK_IMPORTED_MODULE_3_firebase___default.a.database().ref("/users/" + new_user_obj.id + "/status").onDisconnect().set(0);
                __WEBPACK_IMPORTED_MODULE_3_firebase___default.a.database().ref("/users/" + new_user_obj.id + "/lastActive").onDisconnect().set(Date.now());
                __WEBPACK_IMPORTED_MODULE_3_firebase___default.a.database().ref("/users/" + new_user_obj.id + "/base/status").onDisconnect().set(0);
                __WEBPACK_IMPORTED_MODULE_3_firebase___default.a.database().ref("/users/" + new_user_obj.id + "/base/lastActive").onDisconnect().set(Date.now());
            }
        });
    };
    ConfigService.prototype.isLoading = function () {
        return this.storage.get('track');
    };
    ConfigService.prototype.updateUser = function () {
        var _this = this;
        this.storage.get('user').then(function (res) {
            if (res) {
                _this.user = res;
                if (_this.user['id']) {
                    _this.isLoggedIn = true;
                }
            }
            else {
                _this.isLoggedIn = false;
                _this.user = 0;
                _this.storage.remove('user');
            }
        });
    };
    ConfigService.prototype.getLastCourse = function () {
        var _this = this;
        this.storage.get('lastcourse').then(function (d) {
            _this.lastCourse = d;
        });
    };
    ConfigService.prototype.matchObj = function (big, small) {
        for (var i = 0; i < big.length; i++) {
            if (big[i].time == small.time && big[i].content == small.content) {
                return true;
            }
        }
        return false;
    };
    ConfigService.prototype.getTracker = function () {
        var _this = this;
        var $this = this;
        console.log('FETCH STORED TRACKER');
        if (this.isLoggedIn) {
            this.http.get(this.baseUrl + "track/" + this.user.id + "?access=" + this.lastaccess)
                .map(function (response) {
                return response.json();
            }).subscribe(function (res) {
                if (res) {
                    console.log('Version compare : ' + res.version + ' == ' + _this.track.version);
                    if (res.version != _this.track.version) {
                        //Re-record all cached data.
                        _this.defaultTrack.version = res.version;
                        _this.track = _this.defaultTrack;
                    }
                    else {
                        if (res.counter != _this.track.counter || !res.counter) {
                            var keys = Object.keys(res);
                            if (keys.length) {
                                keys.map(function (key) {
                                    if (key in _this.track) {
                                        if (Array.isArray(_this.track[key])) {
                                            if (typeof res[key] === 'object') {
                                                Object.keys(res[key]).map(function (r) {
                                                    var c = $this.track[key].indexOf(parseInt(r));
                                                    if (c > -1) {
                                                        console.log('splicing...' + key);
                                                        $this.track[key].splice(c, 1);
                                                        console.log($this.track[key]);
                                                    }
                                                });
                                            }
                                            else if (Array.isArray(res[key])) {
                                                res[key].map(function (r) {
                                                    var c = $this.track[key].indexOf(parseInt(r));
                                                    if (c > -1) {
                                                        console.log('splicing...' + key);
                                                        $this.track[key].splice(c, 1);
                                                        console.log($this.track[key]);
                                                    }
                                                });
                                            }
                                        }
                                        else {
                                            if (key !== 'version') {
                                                if (!isNaN(res[key]) && res[key] > 1) {
                                                    $this.track[key] = res[key];
                                                }
                                            }
                                        }
                                    }
                                    if (key == 'updates') {
                                        _this.storage.get('updates').then(function (storedupdates) {
                                            if (!storedupdates) {
                                                storedupdates = [];
                                            }
                                            for (var k = 0; k < res[key].length; k++) {
                                                if (!_this.matchObj(storedupdates, res[key][k])) {
                                                    storedupdates.push(res[key][k]);
                                                }
                                            }
                                            _this.storage.set('updates', storedupdates);
                                        });
                                    }
                                });
                            }
                            _this.storage.set('track', _this.track);
                            _this.storage.set('lastaccess', _this.timestamp);
                        }
                    }
                }
            });
            this.storage.get('updates').then(function (storedupdates) {
                if (storedupdates) {
                    _this.unread_notifications_count = storedupdates.length;
                    _this.storage.get('readupdates').then(function (readupdates) {
                        if (readupdates) {
                            _this.unread_notifications_count = storedupdates.length - readupdates.length;
                        }
                    });
                }
            });
        }
        else {
            var url = this.baseUrl + "track/?access=" + this.lastaccess;
            if (!this.settings.client_secret.length) {
                url = this.baseUrl + "track/?client_id=" + this.settings.client_id + "&access=" + this.lastaccess;
            }
            this.http.get(url)
                .map(function (response) {
                return response.json();
            }).subscribe(function (res) {
                if (res) {
                    if (res.version != _this.track.version) {
                        //Re-record all cached data.
                        _this.defaultTrack.version = res.version;
                        _this.track = _this.defaultTrack;
                    }
                    else {
                        if ((res.counter != _this.track.counter || !res.counter)) {
                            var keys = Object.keys(res);
                            if (keys.length) {
                                keys.map(function (key) {
                                    if (key in _this.track) {
                                        if (Array.isArray(_this.track[key])) {
                                            if (typeof res[key] === 'object') {
                                                Object.keys(res[key]).map(function (r) {
                                                    var c = $this.track[key].indexOf(parseInt(r));
                                                    if (c > -1) {
                                                        console.log('splicing...' + key);
                                                        $this.track[key].splice(c, 1);
                                                        console.log($this.track[key]);
                                                    }
                                                });
                                            }
                                            else if (Array.isArray(res[key])) {
                                                res[key].map(function (r) {
                                                    var c = $this.track[key].indexOf(parseInt(r));
                                                    if (c > -1) {
                                                        console.log('splicing...' + key);
                                                        $this.track[key].splice(c, 1);
                                                        console.log($this.track[key]);
                                                    }
                                                });
                                            }
                                        }
                                        else {
                                            if (key !== 'version') {
                                                if (!isNaN(res[key]) && res[key] > 1) {
                                                    $this.track[key] = res[key];
                                                }
                                            }
                                        }
                                    }
                                    if (key == 'updates') {
                                        _this.storage.get('updates').then(function (storedupdates) {
                                            if (!storedupdates) {
                                                storedupdates = [];
                                            }
                                            for (var k = 0; k < res[key].length; k++) {
                                                if (!_this.matchObj(storedupdates, res[key][k])) {
                                                    storedupdates.push(res[key][k]);
                                                }
                                            }
                                            _this.storage.set('updates', storedupdates);
                                        });
                                    }
                                });
                            }
                            _this.storage.set('track', _this.track);
                            _this.storage.set('lastaccess', _this.timestamp);
                        }
                    }
                    if ('client_secret' in res) {
                        console.log('Fetching client_secret');
                        _this.settings.client_secret = res.client_secret;
                        _this.settings.state = res.state;
                        _this.save_settings();
                    }
                    _this.storage.get('updates').then(function (storedupdates) {
                        if (storedupdates) {
                            _this.unread_notifications_count = storedupdates.length;
                            _this.storage.get('readupdates').then(function (readupdates) {
                                if (readupdates) {
                                    _this.unread_notifications_count = storedupdates.length - readupdates.length;
                                }
                            });
                        }
                    });
                }
            });
        }
    };
    ConfigService.prototype.isString = function (val) { return typeof val === 'string'; };
    ConfigService.prototype.isArray = function (obj) { return Array.isArray(obj); };
    //convert 02/13/2009 23:31:30  to timestamp
    ConfigService.prototype.toTimestamp = function (strDate) {
        var datum = Date.parse(strDate);
        return datum;
    };
    ConfigService.prototype.getUserAuthorizationHeaders = function () {
        var userheaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        userheaders.append('Authorization', this.settings.access_token);
        return new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: userheaders });
    };
    ConfigService = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2__ionic_storage__["b" /* Storage */],
            __WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Http */]])
    ], ConfigService);
    return ConfigService;
}());

//# sourceMappingURL=config.js.map

/***/ }),

/***/ 313:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Intro; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_config__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__ionic_storage__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__tabs_tabs__ = __webpack_require__(57);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__multiselector_multiselector__ = __webpack_require__(469);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






var Intro = /** @class */ (function () {
    function Intro(navCtrl, config, storage) {
        this.navCtrl = navCtrl;
        this.config = config;
        this.storage = storage;
        this.multiselectorpage = __WEBPACK_IMPORTED_MODULE_5__multiselector_multiselector__["a" /* MultiselectorPage */];
        this.tabsPage = __WEBPACK_IMPORTED_MODULE_4__tabs_tabs__["a" /* TabsPage */];
    }
    Intro.prototype.ngOnInit = function () {
        console.log(this.config);
    };
    Intro.prototype.goToHome = function () {
        if (this.config.multisite.enable_multisite) {
            this.navCtrl.push(this.multiselectorpage);
        }
        else {
            this.storage.set('introShown', true);
            this.config.initialize();
            this.navCtrl.setRoot(this.tabsPage);
        }
    };
    Intro.prototype.proceed = function () {
        var index = this.introTabs.getActiveIndex();
        index++;
        this.introTabs.slideTo(index, 500);
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('IntroTabs'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["p" /* Slides */])
    ], Intro.prototype, "introTabs", void 0);
    Intro = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-intro',template:/*ion-inline-start:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\pages\intro\intro.html"*/'<ion-slides dir="{{config.settings.rtl ? \'rtl\' : undefined }}" pager="true" #IntroTabs>\n  <ion-slide class="jump">\n   <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"\n   viewBox="0 0 512 512" enable-background="new 0 0 512 512" xml:space="preserve">\n    <g>\n      <rect fill="#84DBFF" width="512" height="512"/>\n\n      <g>\n        <circle id="circle" fill="#54C0EB" cx="256" cy="175.7" r="118.3"/>\n        <g id="pencil">\n          <path fill="#FFFFFF" d="M229.7,257.2h52.7c0.3-20.7,6.8-40.8,18.2-58.1c5.5-8.4,8.8-18.5,8.8-29.3c0-37.5-38.8-66-78.5-47.6\n            c-9.9,4.6-17.9,12.6-22.5,22.5c-9.4,20.3-6.6,40.3,3.5,55.1C223.4,216.7,229.3,236.8,229.7,257.2L229.7,257.2z"/>\n          <g>\n            <path fill="#E6E9EE" d="M266.2,260.2h-21.1l0.4-1.5c5.7-22-16.5-82.9-16.7-83.5l-1.2-3.4l3,2c7.8,5.3,16,8.2,25.1,8.7\n              c9.1-0.5,17.3-3.4,25.1-8.7l3-2l-1.2,3.4c-0.2,0.6-22.4,61.5-16.7,83.5L266.2,260.2z M248,257.9h15.2\n              c-4.1-20.8,11.5-67.5,16-80.2c-7.3,4.3-15.2,6.8-23.5,7.3l-0.1,0l-0.1,0c-8.3-0.5-16.2-2.9-23.5-7.3\n              C236.6,190.4,252.2,237,248,257.9z"/>\n          </g>\n          <path fill="#FFFFFF" d="M229.6,344.6h52.7c0,0,0,0,0,0l-4.4,7.3l-22,36.6l-22-36.7l0,0l-4.2-7v0L229.6,344.6z"/>\n          <polygon fill="#324A5E" points="246.8,373.1 256,388.4 265.2,373.1       "/>\n          <path fill="#FF7058" d="M264.8,344.2v-87h17.5l0,87c0,0.1,0,0.2,0,0.3c0,0,0,0,0,0l-4.4,7.3c-1.3,0.7-2.8,1.2-4.4,1.2\n            c-2.4,0-4.6-1-6.2-2.6c-1.5-1.5-2.5-3.6-2.6-5.9C264.8,344.5,264.8,344.4,264.8,344.2z"/>\n          <path fill="#F1543F" d="M247.3,257.2h17.5v87c0,4.8-3.9,8.8-8.8,8.8l0,0c-4.8,0-8.8-3.9-8.8-8.8V257.2z"/>\n          <path fill="#FF7058" d="M229.7,344.2l0-87h17.5v87c0,0.1,0,0.2,0,0.3c-0.2,4.7-4,8.5-8.8,8.5c-1.7,0-3.2-0.5-4.5-1.3l0,0l-4.2-7\n            v0v-0.2C229.7,344.5,229.7,344.4,229.7,344.2z"/>\n          <g id="sparks">\n            <g>\n              <g>\n                <g>\n                  <path fill="#FFFFFF" d="M256,101L256,101c-0.8,0-1.5-0.7-1.5-1.5v-8.4c0-0.8,0.7-1.5,1.5-1.5l0,0c0.8,0,1.5,0.7,1.5,1.5v8.4\n                    C257.5,100.4,256.8,101,256,101z"/>\n                </g>\n                <g>\n                  <path fill="#FFFFFF" d="M320.3,165.4L320.3,165.4c0-0.8,0.7-1.5,1.5-1.5h8.4c0.8,0,1.5,0.7,1.5,1.5l0,0\n                    c0,0.8-0.7,1.5-1.5,1.5h-8.4C321,166.8,320.3,166.2,320.3,165.4z"/>\n                  <path fill="#FFFFFF" d="M180.4,165.4L180.4,165.4c0-0.8,0.7-1.5,1.5-1.5h8.4c0.8,0,1.5,0.7,1.5,1.5l0,0\n                    c0,0.8-0.7,1.5-1.5,1.5h-8.4C181.1,166.8,180.4,166.2,180.4,165.4z"/>\n                </g>\n              </g>\n              <g>\n                <g>\n                  <path fill="#FFFFFF" d="M301.5,119.9L301.5,119.9c-0.6-0.6-0.6-1.5,0-2.1l5.9-5.9c0.6-0.6,1.5-0.6,2.1,0l0,0\n                    c0.6,0.6,0.6,1.5,0,2.1l-5.9,5.9C303,120.4,302.1,120.4,301.5,119.9z"/>\n                  <path fill="#FFFFFF" d="M202.5,218.8L202.5,218.8c-0.6-0.6-0.6-1.5,0-2.1l5.9-5.9c0.6-0.6,1.5-0.6,2.1,0l0,0\n                    c0.6,0.6,0.6,1.5,0,2.1l-5.9,5.9C204,219.4,203.1,219.4,202.5,218.8z"/>\n                </g>\n                <g>\n                  <path fill="#FFFFFF" d="M301.5,210.9L301.5,210.9c0.6-0.6,1.5-0.6,2.1,0l5.9,5.9c0.6,0.6,0.6,1.5,0,2.1l0,0\n                    c-0.6,0.6-1.5,0.6-2.1,0l-5.9-5.9C300.9,212.3,300.9,211.4,301.5,210.9z"/>\n                  <path fill="#FFFFFF" d="M202.5,111.9L202.5,111.9c0.6-0.6,1.5-0.6,2.1,0l5.9,5.9c0.6,0.6,0.6,1.5,0,2.1l0,0\n                    c-0.6,0.6-1.5,0.6-2.1,0l-5.9-5.9C202,113.4,202,112.5,202.5,111.9z"/>\n                </g>\n              </g>\n            </g>\n            <g>\n              <g>\n                <g>\n                  <path fill="#FFFFFF" d="M231.4,105.9L231.4,105.9c-0.7,0.3-1.6,0-1.9-0.8l-3.2-7.7c-0.3-0.7,0-1.6,0.8-1.9l0,0\n                    c0.7-0.3,1.6,0,1.9,0.8l3.2,7.7C232.5,104.8,232.1,105.6,231.4,105.9z"/>\n                </g>\n                <g>\n                  <path fill="#FFFFFF" d="M315.4,140.7L315.4,140.7c-0.3-0.7,0-1.6,0.8-1.9l7.7-3.2c0.7-0.3,1.6,0,1.9,0.8l0,0\n                    c0.3,0.7,0,1.6-0.8,1.9l-7.7,3.2C316.6,141.8,315.7,141.5,315.4,140.7z"/>\n                  <path fill="#FFFFFF" d="M186.2,194.3L186.2,194.3c-0.3-0.7,0-1.6,0.8-1.9l7.7-3.2c0.7-0.3,1.6,0,1.9,0.8l0,0\n                    c0.3,0.7,0,1.6-0.8,1.9l-7.7,3.2C187.3,195.4,186.5,195,186.2,194.3z"/>\n                </g>\n              </g>\n              <g>\n                <g>\n                  <path fill="#FFFFFF" d="M280.6,105.9L280.6,105.9c-0.7-0.3-1.1-1.2-0.8-1.9l3.2-7.7c0.3-0.7,1.2-1.1,1.9-0.8l0,0\n                    c0.7,0.3,1.1,1.2,0.8,1.9l-3.2,7.7C282.2,105.9,281.4,106.2,280.6,105.9z"/>\n                </g>\n                <g>\n                  <path fill="#FFFFFF" d="M315.4,190L315.4,190c0.3-0.7,1.2-1.1,1.9-0.8l7.7,3.2c0.7,0.3,1.1,1.2,0.8,1.9l0,0\n                    c-0.3,0.7-1.2,1.1-1.9,0.8l-7.7-3.2C315.5,191.6,315.1,190.7,315.4,190z"/>\n                  <path fill="#FFFFFF" d="M186.2,136.4L186.2,136.4c0.3-0.7,1.2-1.1,1.9-0.8l7.7,3.2c0.7,0.3,1.1,1.2,0.8,1.9l0,0\n                    c-0.3,0.7-1.2,1.1-1.9,0.8l-7.7-3.2C186.2,138,185.9,137.2,186.2,136.4z"/>\n                </g>\n              </g>\n            </g>\n          </g>\n          <line fill="#F1543F" x1="229.6" y1="257.2" x2="282.4" y2="257.2"/>\n          <rect x="229.7" y="257.2" fill="#324A5E" width="52.6" height="14.8"/>\n        </g>\n      </g>\n    </g>\n    <style>\n    #circle{transition: all 0.6s;transform: scale(0);transform-origin: 50% 50% 0px;}\n    #pencil{transition: all 1.5s ease-in-out;transition-delay: 0.2s; transform:translateY(20%);}\n    #sparks{\n        transition: all 1.6s;transform: scale(0);transition-delay: 1.2s;transform-origin: 50% 50% 0px;\n        position: absolute;top: 50%;left: 50%;\n    }.swiper-slide-active #circle{transform: scale(1);}.swiper-slide-active #pencil{transition: all 2s; transform:translateY(0%);}.swiper-slide-active #sparks{transform: scale(1);}\n    </style>\n    </svg>\n    <h1>تعلم في أي مكان وفي أي وقت مع . </h1>\n    <h3>أكادمية عبد الرحمان عمر</h3>\n    <button ion-button color="white" (click)="proceed()">تقدم</button>\n  </ion-slide>\n\n  <ion-slide class="earn">\n\n\n    <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"\n   viewBox="0 0 512 512" enable-background="new 0 0 512 512" xml:space="preserve">\n<g>\n  <rect fill="#324A5E" width="512" height="512"/>\n\n  <g>\n    <rect x="141.4" y="86.1" fill="#FFFFFF" width="229.3" height="309"/>\n\n    <path fill="#E6E9EE" d="M153.2,374.9V106.2c4.6,0,8.3-3.7,8.3-8.3h189.1c0,4.6,3.7,8.3,8.3,8.3v268.8c-4.6,0-8.3,3.7-8.3,8.3\n      H161.5C161.5,378.6,157.8,374.9,153.2,374.9z"/>\n    <g class="flower">\n      <path fill="#84DBFF" d="M141.4,334.4v-25.9C135.9,313.7,134.7,323.1,141.4,334.4z"/>\n      <path fill="#84DBFF" d="M103.8,340.7c15.3,16,29.8,19.3,37.6,14.5v-16.8C122.8,326.6,107.8,323.4,103.8,340.7z"/>\n      <path fill="#84DBFF" d="M193.2,124.4c-22.2-6.6-51.2,10.9-54.3,31.3c-3.2,3.2-6.2,6.6-9,10.1c10.1-19.5,13.2-35.8-5.1-37.9\n        c-22.1,25-15.2,44.2,1.1,43.3c-6,8.6-10.9,17.9-14.7,27.7c3.6-21.2,0.9-37.2-16.6-34.1c-12.7,29.5-0.8,45.9,14.4,40.4\n        c-3.2,9.7-5.2,19.9-6,30.3c-2.6-21.2-9.9-35.3-25.7-27.5c-3.5,31.6,12.2,43.9,25.3,34.2c-0.3,10.2,0.6,20.6,2.8,30.8\n        c-8.3-19.6-19.4-31.1-32.3-19c5.4,31.3,23.9,38.6,33.8,25.4c2.7,10.2,6.5,19.8,11.3,28.7c-13.7-16.4-27.3-24-36.3-8.7\n        c14,28.5,34.3,30.3,39.8,14.8c5.5,8.9,12,16.9,19.6,24.1v-2.6c-7-6.8-13.1-14.4-18.2-22.7c16.8,0.2,19.8-16.6,16.5-34.5\n        c-14.2-3.6-26.3,8.1-19.3,29.7c-5-9.1-9-18.9-11.7-29.4c15.8,4.9,23.8-10,25.6-28c-12.6-7.6-27.2,0.1-27,22.3\n        c-2.2-10.3-3.1-20.8-2.8-31.1c13.8,9.3,25.6-2.6,32.4-19.4c-10-11-26.1-7.8-32.1,13.7c0.8-10.5,2.8-20.9,6-30.8\n        c10.7,12.9,25.2,4.9,36.6-9.3c-6.3-13.5-22.9-15.1-34.7,3.8c3.7-9.9,8.7-19.2,14.7-27.8c6.4,15.6,22.6,12,38.4,1.6\n        c-1.5-14.9-17.5-21.2-34.8-6.4c2.9-3.7,6-7.2,9.3-10.5C159.8,152.5,178.1,140.8,193.2,124.4z"/>\n    </g>\n    <g class="flower">\n      <path fill="#84DBFF" d="M370.6,334.3c6.7-11.2,5.5-20.6,0-25.9V334.3z"/>\n      <path fill="#84DBFF" d="M370.6,338.4v16.8c7.8,4.8,22.3,1.5,37.6-14.5C404.2,323.4,389.2,326.6,370.6,338.4z"/>\n      <path fill="#84DBFF" d="M393.8,308c4.8-8.9,8.6-18.5,11.3-28.7c9.9,13.2,28.4,5.8,33.8-25.4c-12.9-12.1-24-0.7-32.3,19\n        c2.1-10.3,3.1-20.6,2.8-30.8c13.1,9.7,28.9-2.6,25.3-34.2c-15.7-7.9-23.1,6.3-25.7,27.5c-0.8-10.4-2.8-20.5-6-30.3\n        c15.3,5.5,27.1-10.9,14.4-40.4c-17.6-3.1-20.3,12.9-16.6,34.1c-3.7-9.8-8.7-19.1-14.7-27.7c16.3,0.9,23.1-18.3,1.1-43.3\n        c-18.3,2.1-15.3,18.4-5.1,37.9c-2.8-3.5-5.8-6.9-9-10.1c-3.1-20.3-32.1-37.9-54.3-31.3c15.1,16.4,33.4,28.1,52.8,32.4\n        c3.3,3.3,6.4,6.9,9.3,10.5c-17.3-14.8-33.4-8.5-34.8,6.4c15.8,10.5,32,14,38.4-1.6c6.1,8.6,11,18,14.7,27.8\n        c-11.8-18.8-28.4-17.3-34.7-3.8c11.4,14.2,26,22.2,36.6,9.3c3.2,9.9,5.2,20.2,6,30.8c-5.9-21.4-22.1-24.7-32.1-13.7\n        c6.7,16.7,18.5,28.7,32.4,19.4c0.3,10.3-0.6,20.7-2.8,31.1c0.2-22.2-14.4-29.9-27-22.3c1.8,18,9.8,32.9,25.6,28\n        c-2.7,10.5-6.7,20.3-11.7,29.4c7-21.6-5.1-33.3-19.3-29.7c-3.3,17.9-0.3,34.7,16.5,34.5c-5.1,8.3-11.2,15.9-18.2,22.7v2.5\n        c7.5-7.1,14.1-15.2,19.6-24.1c5.5,15.5,25.8,13.7,39.8-14.8C421.1,284,407.5,291.7,393.8,308z"/>\n    </g>\n    <path fill="#FFFFFF" d="M141.4,338.3c0.1,0.1,0.2,0.2,0.4,0.4c-0.1-0.1-0.2-0.2-0.4-0.2V338.3z"/>\n    <path fill="#FFFFFF" d="M141.4,334.4c0.7,1.2,1.5,2.4,2.4,3.7c-0.8-0.8-1.6-1.5-2.4-2.3V334.4z"/>\n    <path fill="#FFFFFF" d="M370.6,334.3v1.4c-0.8,0.8-1.6,1.6-2.4,2.3C369.1,336.8,369.9,335.6,370.6,334.3z"/>\n    <path fill="#FFFFFF" d="M370.3,338.6c0.1-0.1,0.3-0.2,0.4-0.4v0.1C370.5,338.5,370.4,338.5,370.3,338.6z"/>\n    <g class="circle">\n      <path fill="#FF7058" d="M276.3,180.5l-9.7-9.1l-3.2,13l-6-20.1c4.7-0.2,9.1-1.8,12.8-4.2L276.3,180.5z"/>\n      <path fill="#FF7058" d="M254.6,164.2l-6,20.1l-3.2-13l-9.8,9.1l6.1-20.5C245.5,162.5,249.9,164,254.6,164.2z"/>\n    </g>\n    <circle class="circle" fill="#FFD05B" cx="256" cy="138.5" r="25.7"/>\n    <circle class="circle" fill="#F9B54C" cx="256" cy="138.5" r="19.8"/>\n    <rect class="rectangle1" x="172.5" y="211" fill="#CED5E0" width="167" height="8.1"/>\n    <rect class="rectangle2" x="172.5" y="230.6" fill="#CED5E0" width="167" height="8.1"/>\n    <rect class="rectangle3" x="172.5" y="250.2" fill="#CED5E0" width="167" height="8.1"/>\n    <rect class="rectangle4" x="172.5" y="269.8" fill="#CED5E0" width="167" height="8.1"/>\n    <rect class="rectangle5" x="172.5" y="289.5" fill="#CED5E0" width="167" height="8.1"/>\n    <rect class="rectangle6" x="172.5" y="309.1" fill="#CED5E0" width="167" height="8.1"/>\n    <rect class="rectangle7" x="172.5" y="328.7" fill="#CED5E0" width="87.5" height="8.1"/>\n    <rect class="rectangle8" x="285.2" y="358.3" fill="#CED5E0" width="43.9" height="8.1"/>\n  </g>\n</g>\n<style>\n  .rectangle1,.rectangle2,.rectangle3,.rectangle4\n  ,.rectangle5,.rectangle6,.rectangle7,.rectangle8{transition: all 0.6s ease-in;     transform: scale(0);\n    transform-origin: 50% 50% 0;}\n  .rectangle2{transition-delay: 0.2s;}.rectangle3{transition-delay: 0.4s;}.rectangle4{transition-delay: 0.6s;}.rectangle5{transition-delay: 0.8s;}.rectangle6{transition-delay: 1s;}.rectangle7{transition-delay: 1.2s;}.rectangle8{transition-delay: 1.4s;}\n\n  .circle{transition: all 1s ease-in;transform: scale(0);transition-delay: 1.6s;transform-origin: 50% 50% 0px;}\n\n  .flower{transition: all 1s ease-in;transform: scale(0);transition-delay: 1.8s;transform-origin: 50% 50% 0px;}\n\n\n  .swiper-slide-active .rectangle7,.swiper-slide-active .rectangle8,.swiper-slide-active .rectangle6,.swiper-slide-active .rectangle5,.swiper-slide-active .rectangle4,.swiper-slide-active .rectangle3,.swiper-slide-active .rectangle2,.swiper-slide-active .rectangle1{transform: scale(1);}\n  .swiper-slide-active .circle{transform: scale(1);}\n  .swiper-slide-active .flower{transform: scale(1);}\n</style>\n</svg>\n    <h1>تعلم واكتسب المهارات</h1>\n    <h3>من خلال دوراتنا</h3>\n    <button ion-button color="white" (click)="proceed()">تقدم</button>\n  </ion-slide>\n\n  <ion-slide class="sync">\n    <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"\n   viewBox="0 0 512 512" enable-background="new 0 0 512 512" xml:space="preserve">\n<g>\n  <rect fill="#324A5E" width="512" height="512"/>\n\n  <g>\n    <path fill="#FFFFFF" d="M370.5,313.2h-275c-2.7,0-5-2.2-5-5V107.2c0-2.7,2.2-5,5-5h275c2.7,0,5,2.2,5,5v201.1\n      C375.4,311,373.2,313.2,370.5,313.2z"/>\n    <rect x="99.4" y="155.2" fill="#84DBFF" width="195.1" height="121.3"/>\n    <rect x="99.4" y="258" fill="#E6E9EE" width="195.1" height="18.4"/>\n    <path fill="#324A5E" d="M108.4,262.7v9.1c0,0.5,0.6,0.8,1,0.4l4.6-4.6c0.2-0.2,0.2-0.6,0-0.8l-4.6-4.6\n      C109,261.9,108.4,262.2,108.4,262.7z"/>\n    <path fill="#E6E9EE" d="M375.4,302.2V196.4c-2.3-2.6-5.6-4.1-9.1-4.1c-2.1,0-4.2,0.6-6.1,1.6l-0.4,0.2c-3.5,2-5.7,5.6-6.1,9.4\n      l-46.2,53.2c-1.2-0.3-2.5-0.5-3.8-0.5c-2.5,0-4.9,0.7-7,1.9l-36,20.7c-3.3,1.9-5.6,4.9-6.6,8.5c-0.4,1.5-0.6,3-0.5,4.5\n      c-5.1,4.1-8.7,9.7-10.4,16.1c-0.5,1.7-0.7,3.5-0.9,5.2H361l9.5-1.8C373.5,309.4,375.4,306.1,375.4,302.2z"/>\n    <polygon fill="#CED5E0" points="264.9,276.5 294.5,276.5 294.5,259.5     "/>\n    <path fill="#54C0EB" d="M375.4,123v-9.8c0-6.1-4.9-11-11-11h-263c-6.1,0-11,4.9-11,11v9.8H375.4z"/>\n    <polygon fill="#ACB3BA" points="280.8,123 217.9,123 222.5,111.3 276.2,111.3     "/>\n    <polygon fill="#CED5E0" points="221.4,123 158.5,123 163.1,111.3 216.9,111.3     "/>\n    <polygon fill="#E6E9EE" points="163.1,123 158.6,111.3 104.8,111.3 100.2,123 90.5,123 90.5,146.5 375.5,146.5 375.5,123     "/>\n    <ellipse fill="#FF7058" cx="359.5" cy="112.9" rx="5.5" ry="5.5"/>\n    <ellipse fill="#E6E9EE" cx="341.5" cy="112.9" rx="5.5" ry="5.5"/>\n    <ellipse fill="#84DBFF" cx="323.4" cy="112.9" rx="5.5" ry="5.5"/>\n    <rect x="135.2" y="128.7" fill="#FFFFFF" width="232.7" height="12.2"/>\n    <path fill="#324A5E" d="M140,134.3c-0.4,0-0.9,0.2-1.2,0.7v2.3c0,0.1,0,0.2-0.1,0.2c-0.1,0.1-0.2,0.1-0.2,0.1\n      c-0.1,0-0.2,0-0.2-0.1c-0.1-0.1-0.1-0.1-0.1-0.2v-4.9c0-0.1,0-0.2,0.1-0.3c0.1-0.1,0.1-0.1,0.2-0.1c0.1,0,0.2,0,0.2,0.1\n      c0.1,0.1,0.1,0.1,0.1,0.3v2c0.2-0.2,0.4-0.4,0.5-0.4c0.3-0.2,0.6-0.3,0.8-0.3c0.3,0,0.5,0,0.6,0.1c0.2,0.1,0.3,0.2,0.4,0.3\n      c0.2,0.3,0.4,0.6,0.4,1v2.2c0,0.1,0,0.2-0.1,0.2c-0.1,0.1-0.2,0.1-0.2,0.1c-0.1,0-0.2,0-0.2-0.1c-0.1-0.1-0.1-0.1-0.1-0.2v-2.1\n      c0-0.3-0.1-0.5-0.2-0.7C140.5,134.3,140.3,134.3,140,134.3z"/>\n    <path fill="#324A5E" d="M144.8,137c0.1,0,0.2,0,0.3,0s0.1,0,0.2,0s0.1,0,0.2,0.1c0.1,0.1,0.1,0.1,0.1,0.2s-0.1,0.2-0.2,0.2\n      c-0.2,0.1-0.4,0.2-0.6,0.2c-0.2,0-0.3,0-0.4,0c-0.1,0-0.2-0.1-0.4-0.1c-0.3-0.2-0.4-0.4-0.4-0.8v-2.3h-0.5c-0.1,0-0.1,0-0.1-0.1\n      c0,0,0-0.1,0.1-0.1l1-1c0,0,0.1-0.1,0.1-0.1c0,0,0.1,0,0.1,0c0,0,0,0.1,0,0.1v0.6h0.9c0.1,0,0.2,0,0.2,0.1\n      c0.1,0.1,0.1,0.1,0.1,0.2c0,0.1,0,0.2-0.1,0.2c-0.1,0.1-0.1,0.1-0.2,0.1h-0.9v2.3c0,0.2,0.1,0.3,0.2,0.4\n      C144.6,137,144.7,137,144.8,137z"/>\n    <path fill="#324A5E" d="M148.5,137c0.1,0,0.2,0,0.3,0s0.1,0,0.2,0s0.1,0,0.2,0.1c0.1,0.1,0.1,0.1,0.1,0.2s-0.1,0.2-0.2,0.2\n      c-0.2,0.1-0.4,0.2-0.6,0.2c-0.2,0-0.3,0-0.4,0c-0.1,0-0.2-0.1-0.4-0.1c-0.3-0.2-0.4-0.4-0.4-0.8v-2.3h-0.5c-0.1,0-0.1,0-0.1-0.1\n      c0,0,0-0.1,0.1-0.1l1-1c0,0,0.1-0.1,0.1-0.1c0,0,0.1,0,0.1,0c0,0,0,0.1,0,0.1v0.6h0.9c0.1,0,0.2,0,0.2,0.1\n      c0.1,0.1,0.1,0.1,0.1,0.2c0,0.1,0,0.2-0.1,0.2c-0.1,0.1-0.1,0.1-0.2,0.1h-0.9v2.3c0,0.2,0.1,0.3,0.2,0.4\n      C148.3,137,148.4,137,148.5,137z"/>\n    <path fill="#324A5E" d="M151.5,134.2c0.4-0.4,0.8-0.6,1.3-0.6c0.5,0,0.9,0.2,1.3,0.5c0.4,0.4,0.6,0.9,0.6,1.5\n      c0,0.6-0.2,1.1-0.6,1.5c-0.4,0.3-0.8,0.5-1.3,0.5c-0.5,0-0.9-0.2-1.3-0.6v1.9c0,0.1,0,0.2-0.1,0.3c-0.1,0.1-0.1,0.1-0.2,0.1\n      c-0.1,0-0.2,0-0.2-0.1c-0.1-0.1-0.1-0.1-0.1-0.3v-5c0-0.1,0-0.2,0.1-0.2c0.1-0.1,0.1-0.1,0.2-0.1c0.1,0,0.2,0,0.2,0.1\n      c0.1,0.1,0.1,0.1,0.1,0.2V134.2z M151.5,136.4c0.3,0.4,0.7,0.6,1.2,0.6c0.6,0,1-0.3,1.2-0.8c0.1-0.2,0.1-0.4,0.1-0.6\n      c0-0.4-0.1-0.8-0.3-1c-0.2-0.2-0.5-0.3-0.9-0.3c-0.5,0-0.9,0.2-1.2,0.6V136.4z"/>\n    <path fill="#324A5E" d="M157.6,137c0.6,0,0.8-0.2,0.8-0.5c0-0.1-0.1-0.2-0.2-0.3c-0.1-0.1-0.3-0.1-0.4-0.2c-0.2,0-0.4-0.1-0.5-0.1\n      c-0.2,0-0.4-0.1-0.5-0.2c-0.2-0.1-0.3-0.2-0.4-0.3c-0.1-0.1-0.2-0.3-0.2-0.5c0-0.2,0-0.4,0.1-0.5c0.1-0.1,0.2-0.3,0.3-0.4\n      c0.3-0.2,0.6-0.3,1.1-0.3c0.4,0,0.7,0.1,1.1,0.2c0.1,0,0.1,0.1,0.2,0.1c0,0.1,0.1,0.1,0.1,0.2c0,0.1,0,0.1-0.1,0.2\n      c-0.1,0.1-0.1,0.1-0.2,0.1c-0.1,0-0.1,0-0.2,0c-0.2-0.1-0.5-0.1-0.8-0.1c-0.3,0-0.5,0.1-0.7,0.2c-0.1,0.1-0.2,0.2-0.2,0.4\n      c0,0.1,0.1,0.2,0.2,0.3c0.1,0.1,0.3,0.1,0.4,0.2c0.2,0,0.3,0.1,0.5,0.1c0.2,0,0.4,0.1,0.5,0.2c0.4,0.2,0.6,0.5,0.6,0.9\n      c0,0.3-0.1,0.6-0.4,0.8c-0.3,0.2-0.6,0.3-1.1,0.3c-0.5,0-1-0.1-1.4-0.3c-0.1-0.1-0.1-0.1-0.1-0.2s0-0.2,0.1-0.2\n      c0.1-0.1,0.1-0.1,0.2-0.1c0.1,0,0.1,0,0.2,0.1C156.9,136.9,157.2,137,157.6,137z"/>\n    <path fill="#324A5E" d="M161.1,133.7c0.1,0,0.2,0,0.3,0.1c0.1,0.1,0.1,0.2,0.1,0.3v0c0,0.1,0,0.2-0.1,0.3\n      c-0.1,0.1-0.2,0.1-0.3,0.1h-0.1c-0.1,0-0.2,0-0.3-0.1c-0.1-0.1-0.1-0.2-0.1-0.3v0c0-0.1,0-0.2,0.1-0.3\n      C160.9,133.7,161,133.7,161.1,133.7L161.1,133.7z M161.1,136.7c0.1,0,0.2,0,0.3,0.1c0.1,0.1,0.1,0.2,0.1,0.3v0\n      c0,0.1,0,0.2-0.1,0.3c-0.1,0.1-0.2,0.1-0.3,0.1h-0.1c-0.1,0-0.2,0-0.3-0.1c-0.1-0.1-0.1-0.2-0.1-0.3v0c0-0.1,0-0.2,0.1-0.3\n      C160.9,136.7,161,136.7,161.1,136.7L161.1,136.7z"/>\n    <path fill="#324A5E" d="M165.2,132c0-0.1,0.1-0.2,0.3-0.2c0.1,0,0.2,0,0.2,0.1c0.1,0.1,0.1,0.1,0.1,0.2c0,0.1,0,0.1,0,0.2l-2,5.9\n      c0,0.1-0.1,0.2-0.3,0.2c-0.1,0-0.2,0-0.2-0.1c-0.1-0.1-0.1-0.1-0.1-0.2c0-0.1,0-0.1,0-0.2L165.2,132z"/>\n    <path fill="#324A5E" d="M168.2,132c0-0.1,0.1-0.2,0.3-0.2c0.1,0,0.2,0,0.2,0.1c0.1,0.1,0.1,0.1,0.1,0.2c0,0.1,0,0.1,0,0.2l-2,5.9\n      c0,0.1-0.1,0.2-0.3,0.2c-0.1,0-0.2,0-0.2-0.1c-0.1-0.1-0.1-0.1-0.1-0.2c0-0.1,0-0.1,0-0.2L168.2,132z"/>\n    <circle id="circle" fill="#FFFFFF" cx="197" cy="210.4" r="24.4"/>\n    <path fill="#84DBFF" d="M187.9,196.8V224c0,1.5,2.4,2.2,3.7,1.2l17.6-13.6c0.9-0.7,0.9-1.7,0-2.4l-17.6-13.6\n      C190.2,194.6,187.9,195.3,187.9,196.8z"/>\n    <path fill="#324A5E" d="M281.6,269.6H125.3c-1.3,0-2.3-1.1-2.3-2.3l0,0c0-1.3,1.1-2.3,2.3-2.3h156.3c1.3,0,2.3,1.1,2.3,2.3l0,0\n      C284,268.6,282.9,269.6,281.6,269.6z"/>\n    <path fill="#2B3B4E" d="M281.6,269.6c1.3,0,2.3-1.1,2.3-2.3l0,0c0-0.5-0.2-1-0.5-1.4l-6.6,3.8H281.6z"/>\n    <path class="bar" fill="#ACB3BA" d="M196.9,264.9h-71.6c-1.3,0-2.3,1.1-2.3,2.3c0,1.3,1.1,2.3,2.3,2.3h71.6V264.9z"/>\n    <rect x="303.4" y="155.2" fill="#E6E9EE" width="64.5" height="11.3"/>\n    <rect x="303.4" y="174.7" fill="#E6E9EE" width="64.5" height="11.3"/>\n    <rect x="303.4" y="194.2" fill="#E6E9EE" width="64.5" height="11.3"/>\n    <path fill="#CED5E0" d="M353.8,203.6l-1.7,1.9h15.8v-11.3h-8.2C356.3,196.2,354.2,199.8,353.8,203.6z"/>\n    <rect x="303.4" y="213.7" fill="#E6E9EE" width="64.5" height="11.3"/>\n    <polygon fill="#CED5E0" points="335.2,225 367.9,225 367.9,213.7 345,213.7     "/>\n    <rect x="303.4" y="233.2" fill="#E6E9EE" width="64.5" height="11.3"/>\n    <polygon fill="#CED5E0" points="318.2,244.5 367.9,244.5 367.9,233.2 328,233.2     "/>\n    <rect x="303.4" y="252.8" fill="#E6E9EE" width="64.5" height="11.3"/>\n    <path fill="#CED5E0" d="M307.6,256.8c-1.2-0.3-2.5-0.5-3.8-0.5c-0.1,0-0.3,0-0.4,0v7.8h64.5v-11.3h-56.9L307.6,256.8z"/>\n    <g id="speaker">\n    <path fill="#FFFFFF" d="M354.2,367.3l-8.8,5c-1.5,0.9-3.4,0.8-4.8-0.3l-54-44l28-16.1l40.5,48.3\n      C357.2,362.4,356.7,365.9,354.2,367.3z"/>\n    <path fill="#FFD05B" d="M376.1,251.3l5.2,9.1c1.8,3.1,5.7,4.1,8.7,2.3c3.8-2.3,7.5-4.5,11-6.8c5.1-3.2,6.7-9.8,3.7-15l0,0\n      c-3-5.2-9.5-7.1-14.8-4.3c-3.7,1.9-7.5,4-11.4,6.1C375.4,244.3,374.3,248.2,376.1,251.3z"/>\n    <path fill="#FFFFFF" d="M268,291.9l-6.1,3.5c-11.5,6.6-15.4,21.2-8.8,32.7l0,0c6.6,11.5,21.2,15.4,32.7,8.8l6.1-3.5L268,291.9z"/>\n    <polygon fill="#FFFFFF" points="309.1,266.5 334.5,310.6 419.7,294.3 366,201     "/>\n    <path fill="#FF7058" d="M334.8,317.1l-42.2,24.3c-1.4,0.8-3.2,0.3-4-1.1l-28.3-49.1c-0.8-1.4-0.3-3.2,1.1-4l42.2-24.3\n      c1.4-0.8,3.2-0.3,4,1.1l28.3,49.1C336.7,314.5,336.2,316.3,334.8,317.1z"/>\n    <path fill="#FF7058" d="M420.7,295.5l-3.4,2c-1.4,0.8-3.1,0.3-3.9-1.1l-52.3-90.9c-0.8-1.4-0.3-3.1,1.1-3.9l3.4-2\n      c1.4-0.8,3.1-0.3,3.9,1.1l52.3,90.9C422.6,292.9,422.1,294.7,420.7,295.5z"/>\n    </g>\n    <circle class="bar" fill="#FFFFFF" cx="196.1" cy="267.3" r="6"/>\n\n  </g>\n</g>\n<style>\n  #speaker{transition: all 1s ease-in;transform: rotate(-30deg);transform-origin: 50% 50% 0px;}\n  .bar{transition: all 1s ease-in;transition-delay: 1s;transform: scale(0);transform-origin: 0% 50% 0px;}\n  #circle{transition: all 1s ease-in;transform: scale(0);transition-delay: 1.5s;transform-origin: 50% 50% 0px;}\n\n  .swiper-slide-active #speaker{transform: rotate(0deg);}\n  .swiper-slide-active .bar{transform: scale(1);}\n  .swiper-slide-active #circle{transform: scale(1);}\n\n</style>\n</svg>\n    <h1>تعزيز نمو حياتك</h1>\n    <h3>مع التعلم في أي وقت في أي مكان!</h3>\n    <button ion-button color="white" (click)="proceed()">تقدم</button>\n  </ion-slide>\n\n  <ion-slide class="app">\n    <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"\n   viewBox="0 0 512 512" enable-background="new 0 0 512 512" xml:space="preserve">\n<g>\n\n  <circle fill="#ffffff" cx="256" cy="158.5" r="155.7"></circle>\n  <g id="rocket">\n    <path fill="#E6E9EE" fill-opacity="0.4" d="M255.5,318.6c-0.1,0-0.2,0-0.2,0c-0.5,0-1-0.1-1.5-0.1c-6.8,0-12.7,3.8-15.7,9.4c-1.9-0.7-3.9-1.1-6.1-1.1    c-4.5,0-8.6,1.6-11.7,4.4c10.5-39.2,17-81.9,19-96.4h9.4C249.1,247.9,250.6,282.3,255.5,318.6z" />\n    <path fill="#E6E9EE" fill-opacity="0.4" d="M292.7,332.1c-3.2-3.2-7.7-5.2-12.6-5.2c-2.1,0-4.2,0.4-6.1,1.1c-3-5.6-8.9-9.4-15.7-9.4    c-0.4,0-0.7,0-1.1,0c5-36.2,6.4-70.6,6.8-83.7h9.5C275.5,249.4,282,292.6,292.7,332.1z" />\n    <path fill="#CED5E0" d="M272.5,238c0,22.2-1,44.3-3.1,61.3c-2.2-17.7-3.2-41.2-3.1-64.4h6.1C272.5,235.9,272.5,236.9,272.5,238z" id="fire1"/>\n    <path fill="#CED5E0" d="M247.2,238c0,22.2-1,44.3-3.1,61.3c-2.2-17.7-3.2-41.2-3.1-64.4h6.1C247.2,235.9,247.2,236.9,247.2,238z" id="fire2"/>\n    <path fill="#324A5E" d="M307.2,224.6c0,4.6-0.5,9-1.6,13.2c-2.5-4.4-5.6-8.4-9.2-12c-4.6-4.6-10-8.4-16-11.2    c2.8-11.2,4.5-22.9,5-34.6c1.8,1.4,3.5,2.9,5,4.5C300.9,194.8,307.2,209,307.2,224.6z"/>\n    <path fill="#324A5E" d="M232.2,214.6c-6,2.8-11.4,6.6-16,11.2c-3.5,3.6-6.6,7.6-9.1,12c-1-4.3-1.6-8.7-1.6-13.2    c0-15.7,6.3-29.9,16.6-40.1c1.6-1.6,3.3-3.1,5.1-4.5C227.8,191.8,229.4,203.4,232.2,214.6z"/>\n    <path fill="#FF7058" d="M279.7,217.6c12.9-48.1,5.1-104-23.4-142.6h0c-28.5,38.5-36.2,94.5-23.4,142.6H279.7z"/>\n    <path fill="#324A5E" d="M273,104.7c-4.4-10.6-9.9-20.6-16.6-29.7h0c-6.7,9-12.2,19-16.6,29.7H273z" id="darsak_smoke"/>\n    <circle fill="#FFFFFF" cx="256.3" cy="144.8" r="15.5"/>\n    <circle fill="#84DBFF" cx="256.3" cy="144.8" r="12.2"/>\n    <path fill="#54C0EB" d="M267.5,139.9l-16,16c4.5,2,9.8,1.1,13.5-2.5C268.6,149.7,269.5,144.3,267.5,139.9z"/>\n    <path fill="#FFD05B" d="M276.8,234.9c0.4-2.4,0.6-5.1,0.6-7.9c0-12.1-3.9-21.8-8.8-21.8s-8.8,9.8-8.8,21.8c0,2.8,0.2,5.4,0.6,7.9    H276.8z"/>\n    <path fill="#FFD05B" d="M252.3,234.9c0.4-2.4,0.6-5.1,0.6-7.9c0-12.1-3.9-21.8-8.8-21.8c-4.8,0-8.8,9.8-8.8,21.8    c0,2.8,0.2,5.4,0.6,7.9H252.3z"/>\n    <path fill="#E6E9EE" fill-opacity="0.3" d="M416.6,358.8c0-1.8-0.4-3.6-1-5.2c-2.1-5.6-7.5-9.6-13.8-9.6c-0.7,0-1.4,0.1-2.1,0.2    c-0.3-9.6-8.2-17.3-17.9-17.3c-2.1,0-4.2,0.4-6.1,1.1c-3-5.6-8.9-9.4-15.7-9.4c-0.5,0-1,0-1.5,0.1c-0.5,0-1-0.1-1.5-0.1    c-6.8,0-12.7,3.8-15.7,9.4c-1.9-0.7-3.9-1.1-6.1-1.1c-9.9,0-17.9,8-17.9,17.9c0,1.1,0.1,2.3,0.3,3.3c-0.9-0.2-1.8-0.3-2.8-0.3    c-5.1,0-9.5,2.6-12.1,6.5c-2.2-1.4-4.9-2.3-7.8-2.3c-7.6,0-13.8,5.9-14.4,13.3c0,0,0,0-0.1,0c-5.9,0-11,3.6-13.2,8.7    c-2.6-3-6.5-5-10.9-5c0,0-0.1,0-0.1,0c0,0-0.1,0-0.1,0c-0.1,0-0.1,0-0.2,0c-0.1,0-0.1,0-0.2,0c0,0-0.1,0-0.1,0c0,0-0.1,0-0.1,0    c-4.3,0-8.2,1.9-10.9,5c-2.2-5.1-7.3-8.7-13.2-8.7c0,0,0,0-0.1,0c-0.6-7.5-6.8-13.3-14.4-13.3c-2.9,0-5.5,0.8-7.8,2.3    c-2.6-3.9-7-6.5-12.1-6.5c-0.9,0-1.9,0.1-2.8,0.3c0.2-1.1,0.3-2.2,0.3-3.3c0-9.9-8-17.9-17.9-17.9c-2.1,0-4.2,0.4-6.1,1.1    c-3-5.6-8.9-9.4-15.7-9.4c-0.5,0-1,0-1.5,0.1c-0.5,0-1-0.1-1.5-0.1c-6.8,0-12.7,3.8-15.7,9.4c-1.9-0.7-3.9-1.1-6.1-1.1    c-9.7,0-17.6,7.7-17.9,17.3c-0.7-0.1-1.4-0.2-2.1-0.2c-6.3,0-11.7,4-13.8,9.6c-0.6,1.6-1,3.4-1,5.2c0,4,1.6,7.6,4.2,10.3    c-0.5,1.2-0.8,2.6-0.8,4c0,6,4.9,10.9,10.9,10.9h145.9h0.7h145.9c6,0,10.9-4.9,10.9-10.9c0-1.4-0.3-2.8-0.8-4    C415,366.4,416.6,362.8,416.6,358.8z" id="light_smoke1" />\n    <path fill="#CED5E0" fill-opacity="0.3" d="M209.2,354.3c2.2-1.4,4.9-2.3,7.8-2.3c7.6,0,13.8,5.9,14.4,13.3c0,0,0,0,0.1,0c5.9,0,11,3.6,13.2,8.7    c2.6-3,6.5-5,10.9-5c0,0,0.1,0,0.1,0c0,0,0.1,0,0.1,0c0.1,0,0.1,0,0.2,0c0.1,0,0.1,0,0.2,0c0,0,0.1,0,0.1,0c0,0,0.1,0,0.1,0    c4.3,0,8.2,1.9,10.9,5c2.2-5.1,7.3-8.7,13.2-8.7c0,0,0,0,0.1,0c0.6-7.5,6.8-13.3,14.4-13.3c2.9,0,5.5,0.8,7.8,2.3    c1.8-2.8,4.6-4.8,7.8-5.9c-2.7-2.7-6.4-4.5-10.5-4.5c-0.7,0-1.4,0.1-2.1,0.2c-0.3-9.6-8.2-17.3-17.9-17.3c-2.1,0-4.2,0.4-6.1,1.1    c-3-5.6-8.9-9.4-15.7-9.4c-0.5,0-1,0-1.5,0.1c-0.2,0-0.5,0-0.7,0c-0.2,0-0.5,0-0.7,0c-0.5,0-1-0.1-1.5-0.1    c-6.8,0-12.7,3.8-15.7,9.4c-1.9-0.7-3.9-1.1-6.1-1.1c-9.7,0-17.6,7.7-17.9,17.3c-0.7-0.1-1.4-0.2-2.1-0.2c-4.1,0-7.8,1.7-10.5,4.5    C204.6,349.5,207.4,351.6,209.2,354.3z" id="dark_smoke"/><path fill="#E6E9EE" fill-opacity="0.4" d="M416.6,358.8c0-1.8-0.4-3.6-1-5.2c-2.1-5.6-7.5-9.6-13.8-9.6c-0.7,0-1.4,0.1-2.1,0.2    c-0.3-9.6-8.2-17.3-17.9-17.3c-2.1,0-4.2,0.4-6.1,1.1c-3-5.6-8.9-9.4-15.7-9.4c-0.5,0-1,0-1.5,0.1c-0.5,0-1-0.1-1.5-0.1    c-6.8,0-12.7,3.8-15.7,9.4c-1.9-0.7-3.9-1.1-6.1-1.1c-9.9,0-17.9,8-17.9,17.9c0,1.1,0.1,2.3,0.3,3.3c-0.9-0.2-1.8-0.3-2.8-0.3    c-5.1,0-9.5,2.6-12.1,6.5c-2.2-1.4-4.9-2.3-7.8-2.3c-7.6,0-13.8,5.9-14.4,13.3c0,0,0,0-0.1,0c-5.9,0-11,3.6-13.2,8.7    c-2.6-3-6.5-5-10.9-5c0,0-0.1,0-0.1,0c0,0-0.1,0-0.1,0c-0.1,0-0.1,0-0.2,0c-0.1,0-0.1,0-0.2,0c0,0-0.1,0-0.1,0c0,0-0.1,0-0.1,0    c-4.3,0-8.2,1.9-10.9,5c-2.2-5.1-7.3-8.7-13.2-8.7c0,0,0,0-0.1,0c-0.6-7.5-6.8-13.3-14.4-13.3c-2.9,0-5.5,0.8-7.8,2.3    c-2.6-3.9-7-6.5-12.1-6.5c-0.9,0-1.9,0.1-2.8,0.3c0.2-1.1,0.3-2.2,0.3-3.3c0-9.9-8-17.9-17.9-17.9c-2.1,0-4.2,0.4-6.1,1.1    c-3-5.6-8.9-9.4-15.7-9.4c-0.5,0-1,0-1.5,0.1c-0.5,0-1-0.1-1.5-0.1c-6.8,0-12.7,3.8-15.7,9.4c-1.9-0.7-3.9-1.1-6.1-1.1    c-9.7,0-17.6,7.7-17.9,17.3c-0.7-0.1-1.4-0.2-2.1-0.2c-6.3,0-11.7,4-13.8,9.6c-0.6,1.6-1,3.4-1,5.2c0,4,1.6,7.6,4.2,10.3    c-0.5,1.2-0.8,2.6-0.8,4c0,6,4.9,10.9,10.9,10.9h145.9h0.7h145.9c6,0,10.9-4.9,10.9-10.9c0-1.4-0.3-2.8-0.8-4    C415,366.4,416.6,362.8,416.6,358.8z" id="light_smoke2"/>\n\n  </g>\n</g>\n<style>\n@keyframes moving {\n\n    from {\n      transition: all 1s ease-in-out;\n      transform:translateY(0%);\n    }\n\n    to{\n      transform:translateY(2%);\n    }\n\n}\n\n@keyframes fired {\n\n    from {\n      fill: currentColor;\n    }\n\n    to{\n      fill: #F9B54C;\n    }\n\n}\n\n@keyframes changewidth {\n    from {\n     transition: all 1s cubic-bezier(0.55, 0.09, 0.68, 0.53);\n      transform: translateY(0px)  scale(1);\n    }\n\n    to {\n      transform: translateY(-2%) scale(1.02);\n\n    }\n}\n\n#rocket{\n  animation-duration: 1.5s;\n  animation-name: moving;\n  animation-iteration-count: infinite;\n  animation-direction: alternate;\n  transform-origin:center;\n}\n#fire1,#fire2{\n  animation-duration: 0.5s;\n  animation-name: fired;\n  animation-iteration-count: infinite;\n  animation-direction: alternate;\n  transform-origin:center;\n}\n\n#light_smoke2,#light_smoke1{\n}\n#light_smoke2{transition: all 1s;\n    transform: translateY(100%) scale(1) rotate(180deg);\n    transform-origin: 50% 50% 0;}\n#dark_smoke {\n  transition-delay:1s;\n  animation-duration: 0.5s;\n  animation-name: changewidth;\n  animation-iteration-count: infinite;\n  animation-direction: alternate;\n  transform-origin:center;\n}\n</style>\n</svg>\n        <h1>مع أكادمية عبد الرحمان عمر</h1>\n        <h3>الى اللانهائية نرتقي سويا</h3>\n        <button ion-button color="white" (click)="goToHome()">إبتدإ الآن</button>\n  </ion-slide>\n\n</ion-slides>\n'/*ion-inline-end:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\pages\intro\intro.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_2__services_config__["a" /* ConfigService */],
            __WEBPACK_IMPORTED_MODULE_3__ionic_storage__["b" /* Storage */]])
    ], Intro);
    return Intro;
}());

//# sourceMappingURL=intro.js.map

/***/ }),

/***/ 316:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return HomePage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__profile_profile__ = __webpack_require__(22);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__search_search__ = __webpack_require__(61);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__directory_directory__ = __webpack_require__(72);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__course_course__ = __webpack_require__(62);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__services_course__ = __webpack_require__(49);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__services_config__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__services_wallet__ = __webpack_require__(89);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__services_wishlist__ = __webpack_require__(73);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__services_users__ = __webpack_require__(29);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_rxjs_add_operator_map__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_11_rxjs_add_operator_map__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};











// import { AdMob } from "ionic-admob";
// import { AdmobService } from '../../services/admob';

var HomePage = /** @class */ (function () {
    // barcodeScannerOptions: BarcodeScannerOptions;
    function HomePage(navCtrl, courseService, modalCtrl, loadingController, userService, config, wishlistService, walletService, toastCtrl
    // private admob: AdMob,
    // public  AdmobService: AdmobService
    ) {
        this.navCtrl = navCtrl;
        this.courseService = courseService;
        this.modalCtrl = modalCtrl;
        this.loadingController = loadingController;
        this.userService = userService;
        this.config = config;
        this.wishlistService = wishlistService;
        this.walletService = walletService;
        this.toastCtrl = toastCtrl;
        this.isLoggedIn = false;
        this.featured = [];
        this.popular = [];
        this.categories = [];
        this.categoryPage = __WEBPACK_IMPORTED_MODULE_4__directory_directory__["a" /* DirectoryPage */];
        this.profilePage = __WEBPACK_IMPORTED_MODULE_2__profile_profile__["a" /* ProfilePage */];
        this.coursePage = __WEBPACK_IMPORTED_MODULE_5__course_course__["a" /* CoursePage */];
        // options:BarcodeScannerOptions;
        this.barcodeData = '';
        // this.encodeData = "https://www.FreakyJolly.com";
        // //Options
        // this.barcodeScannerOptions = {
        //   showTorchButton: true,
        //   showFlipCameraButton: true
        // };
    }
    HomePage.prototype.ngOnInit = function () {
        var _this = this;
        console.log('waiting to be loaded');
        var loading = this.loadingController.create({
            content: '<img src="assets/images/bubbles.svg">',
            duration: 15000,
            spinner: 'hide',
            showBackdrop: true,
        });
        loading.present();
        this.config.isLoading().then(function (res) {
            if (res) {
                _this.config.track = res;
            }
            _this.courseService.getFeaturedCourses().subscribe(function (featured) {
                if (featured) {
                    console.log("featured");
                    console.log(featured);
                    console.log("featured");
                    _this.featured = featured;
                }
            });
            setTimeout(function () {
                console.log("featured2");
                console.log(this.featured);
                console.log("featured2");
            }, 5000);
            _this.courseService.getPopularCourses().subscribe(function (popular) {
                if (popular) {
                    _this.popular = popular;
                }
                loading.dismiss();
            });
            _this.courseService.getAllCourseCategory().subscribe(function (cats) {
                if (cats) {
                    console.log(cats);
                    _this.categories = cats;
                }
            });
        });
        this.wishlistService.getWishList();
    };
    HomePage.prototype.ionViewDidLoad = function () {
    };
    HomePage.prototype.openSearch = function () {
        var modal = this.modalCtrl.create(__WEBPACK_IMPORTED_MODULE_3__search_search__["a" /* SearchPage */]);
        modal.present();
    };
    HomePage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-home',template:/*ion-inline-start:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\pages\home\home.html"*/'<ion-header>\n    <ion-navbar  color="transparent" >\n        <ion-buttons start>\n            <button ion-button menuToggle>\n                <ion-icon name="md-menu"></ion-icon>\n            </button>\n        </ion-buttons> \n        <ion-title>{{config.get_translation(\'home_title\')}}<span [innerHtml]="config.get_translation(\'home_subtitle\')"></span></ion-title>\n        <ion-buttons end>\n            <button ion-button (click)="openSearch()">\n                <ion-icon name="md-search"></ion-icon>\n            </button>\n        </ion-buttons>\n        <ion-buttons end>\n            <button ion-button [navPush]="profilePage">\n                <ion-icon name="md-contact" *ngIf="!config.isLoggedIn"></ion-icon>\n                <img *ngIf="config.isLoggedIn" [src]="config.user?.avatar">\n            </button>\n        </ion-buttons>\n    </ion-navbar>\n</ion-header>\n<ion-content fixedscrollheader>\n    <div id="featured" *ngIf="featured && featured.length && config.homePage.featuredCourseSlider">\n        <ion-slides dir="{{config.settings.rtl ? \'rtl\' : undefined }}" spaceBetween="0">\n            <ion-slide *ngFor="let course of featured">\n                 <lazy-img [inputSrc]="course.featured_image" [navPush]="coursePage" [navParams]="course">2</lazy-img>\n                <span [innerHtml]="course.name"></span>\n            </ion-slide>\n        </ion-slides>\n    </div>\n    <div id="homecontent" padding>\n        <div *ngIf="categories.length && config.homePage.categories">\n        <h3 class="heading"><a [navPush]="categoryPage"><ion-icon ios="ios-more" md="md-more"></ion-icon></a><span>{{config.get_translation(\'categories_title_home_page\')}}</span><span>{{config.get_translation(\'categories_subtitle_home_page\')}}</span></h3>\n        <ion-slides dir="{{config.settings.rtl ? \'rtl\' : undefined }}" id="categories" spaceBetween="0" slidesPerView="3">\n            <ion-slide *ngFor="let category of categories">\n                <ion-card [navPush]="categoryPage" [navParams]="category">\n                    <div class="featured_category_block">\n                        <lazy-img [inputSrc]="category.image"></lazy-img>\n                        <div class="category-content">\n                            <div class="category-title">{{category.name}}</div>\n                            <div class="category-subtitle">{{category.count}} {{config.get_translation(\'courses\')}}</div>\n                        </div>\n                    </div>\n                  </ion-card>\n            </ion-slide>\n        </ion-slides>\n        </div>\n        <div *ngIf="popular.length && config.homePage.popular">\n            <h3 class="heading"><a [navPush]="categoryPage" [navParams]="{sortby:\'popular\'}"> <ion-icon ios="ios-more" md="md-more"></ion-icon></a><span>{{config.get_translation(\'popular_courses_title_home_page\')}}</span><span>{{config.get_translation(\'popular_courses_subtitle_home_page\')}}</span></h3>\n            <div id="popular_courses">\n                <ion-slides dir="{{config.settings.rtl ? \'rtl\' : undefined }}" spaceBetween="0" slidesPerView="2" >\n                    <ion-slide *ngFor="let lcourse of popular">\n                        <coursecard [course]="lcourse"></coursecard>\n                    </ion-slide>\n                </ion-slides>\n            </div>\n        </div>\n        <div *ngIf="featured.length && config.homePage.featured">\n            <h3 class="heading"><span>{{config.get_translation(\'featured_courses\')}}</span><span>{{config.get_translation(\'selected_courses\')}}</span></h3>\n            <div id="popular_courses">\n                <ion-slides dir="{{config.settings.rtl ? \'rtl\' : undefined }}" spaceBetween="0" slidesPerView="2" >\n                    <ion-slide *ngFor="let lcourse of featured">\n                        <coursecard [course]="lcourse"></coursecard>\n                    </ion-slide>\n                </ion-slides>\n            </div>\n        </div>\n    </div>        \n</ion-content>'/*ion-inline-end:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\pages\home\home.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_6__services_course__["a" /* CourseService */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* ModalController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* LoadingController */],
            __WEBPACK_IMPORTED_MODULE_10__services_users__["a" /* UserService */],
            __WEBPACK_IMPORTED_MODULE_7__services_config__["a" /* ConfigService */],
            __WEBPACK_IMPORTED_MODULE_9__services_wishlist__["a" /* WishlistService */],
            __WEBPACK_IMPORTED_MODULE_8__services_wallet__["a" /* WalletService */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* ToastController */]
            // private admob: AdMob,
            // public  AdmobService: AdmobService
        ])
    ], HomePage);
    return HomePage;
}());

//# sourceMappingURL=home.js.map

/***/ }),

/***/ 322:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return LoginPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_forms__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__ionic_native_in_app_browser__ = __webpack_require__(58);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_toPromise__ = __webpack_require__(59);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_toPromise___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_toPromise__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__services_authentication__ = __webpack_require__(33);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__services_users__ = __webpack_require__(29);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__services_config__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__profile_profile__ = __webpack_require__(22);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__tabs_tabs__ = __webpack_require__(57);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__ionic_storage__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__ionic_native_camera__ = __webpack_require__(71);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



//import { InAppBrowser } from 'ionic-native';









var LoginPage = /** @class */ (function () {
    function LoginPage(navCtrl, viewCtrl, toastCtrl, navParams, auth, userService, platform, config, storage, formBuilder, loadingCtrl, action, alertCtrl, camera, iab, appCtrl) {
        this.navCtrl = navCtrl;
        this.viewCtrl = viewCtrl;
        this.toastCtrl = toastCtrl;
        this.navParams = navParams;
        this.auth = auth;
        this.userService = userService;
        this.platform = platform;
        this.config = config;
        this.storage = storage;
        this.formBuilder = formBuilder;
        this.loadingCtrl = loadingCtrl;
        this.action = action;
        this.alertCtrl = alertCtrl;
        this.camera = camera;
        this.iab = iab;
        this.appCtrl = appCtrl;
        this.isLoggedIn = false;
        this.register = false;
        this.signin = false;
        this.currentTab = 'dashboard';
        this.signupForm = formBuilder.group({
            username: ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["i" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["i" /* Validators */].required, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["i" /* Validators */].maxLength(30),
                    __WEBPACK_IMPORTED_MODULE_2__angular_forms__["i" /* Validators */].pattern(/[a-zA-Z0-9_]+/)]),
            ],
            email: ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["i" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["i" /* Validators */].required, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["i" /* Validators */].maxLength(40),
                    __WEBPACK_IMPORTED_MODULE_2__angular_forms__["i" /* Validators */].pattern(/[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/)])],
            password: ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["i" /* Validators */].required],
        });
        this.signinForm = formBuilder.group({
            username: ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["i" /* Validators */].required],
            password: ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["i" /* Validators */].required],
        });
    }
    LoginPage_1 = LoginPage;
    LoginPage.prototype.ngOnInit = function () {
        this.isLoggedIn = this.config.isLoggedIn;
        if (!this.config.settings.access_token) {
            this.isLoggedIn = false;
        }
    };
    LoginPage.prototype.showSignIn = function () {
        console.log(' ==>  ' + this.config.settings.login);
        if (this.config.settings.login == 'app') {
            this.navCtrl.push(LoginPage_1);
        }
        else {
            this.auth.signIn();
        }
    };
    LoginPage.prototype.onSignIn = function () {
        var _this = this;
        if (this.signinForm.valid) {
            var loading_1 = this.loadingCtrl.create({
                content: '<img src="assets/images/bubbles.svg">',
                duration: 15000,
                spinner: 'hide',
                showBackdrop: true,
            });
            loading_1.present();
            var env_1 = this;
            this.auth.signinUser(this.signinForm.value).subscribe(function (res) {
                if (res) {
                    if (!res.status) {
                        var alert_1 = _this.alertCtrl.create({
                            title: res.message,
                            buttons: [
                                {
                                    text: _this.config.get_translation('dismiss'),
                                    role: 'cancel',
                                    handler: function (data) {
                                    },
                                },
                            ]
                        });
                        alert_1.present();
                    }
                    if (res.status) {
                        env_1.userService.getUser();
                        if (env_1.navCtrl) {
                            env_1.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_9__tabs_tabs__["a" /* TabsPage */]);
                        }
                    }
                    loading_1.dismiss();
                }
            });
        }
    };
    LoginPage.prototype.launchAuthorize = function () {
        this.auth.authRequest();
    };
    LoginPage.prototype.onClose = function () {
        console.log("close");
        this.viewCtrl.dismiss();
    };
    LoginPage.prototype.backToLogin = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_8__profile_profile__["a" /* ProfilePage */]);
    };
    LoginPage.prototype.showterms = function () {
        var alert = this.alertCtrl.create({
            title: this.config.get_translation('login_terms_conditions'),
            message: this.config.terms_conditions,
            buttons: [
                {
                    text: this.config.get_translation('accept_continue'),
                    role: 'cancel',
                }
            ]
        });
        alert.present();
    };
    var LoginPage_1;
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["d" /* Content */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["d" /* Content */])
    ], LoginPage.prototype, "content", void 0);
    LoginPage = LoginPage_1 = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-login',template:/*ion-inline-start:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\pages\login\login.html"*/'<ion-header center class="{{user ? \'loggedin\': \'non-loggedin\'}}">\n	<ion-buttons start>\n        <button ion-button menuToggle>\n            <ion-icon name="md-menu"></ion-icon>\n        </button>\n    </ion-buttons>\n    <ion-title *ngIf="!isLoggedIn"><h1>{{config.get_translation(\'login_heading\')}}</h1></ion-title>\n   \n</ion-header>\n<ion-content class="{{isLoggedIn ? \'loggedin\': \'non-loggedin\'}}">\n	<div class="signin_register" *ngIf="!isLoggedIn">\n		<div class="signin_content" padding>\n			\n			<div id="signin" center>\n				<form [formGroup]="signinForm" (ngSubmit)="onSignIn()">\n					<ion-list>\n						<ion-item>\n							<ion-label floating [innerHtml]="config.get_translation(\'signin_username\')"></ion-label>\n							<ion-input type="text" formControlName="username"></ion-input>\n						</ion-item>\n						<ion-item>\n							<ion-label floating [innerHtml]="config.get_translation(\'signup_password\')"></ion-label>\n							<ion-input type="password" formControlName="password"></ion-input>\n						</ion-item>\n					</ion-list>\n					<button ion-button block outline type="submit" color="white" [innerHtml]="config.get_translation(\'login_signin\')"></button>\n					\n				</form>\n				<button ion-button clear center icon-left color="white" (click)="backToLogin()" [innerHtml]="config.get_translation(\'login_back\')"><ion-icon name="md-arrow-back"></ion-icon></button>\n			</div>\n			\n		</div>\n	</div>\n	\n\n</ion-content>\n'/*ion-inline-end:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\pages\login\login.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["r" /* ViewController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* ToastController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_5__services_authentication__["a" /* AuthenticationService */],
            __WEBPACK_IMPORTED_MODULE_6__services_users__["a" /* UserService */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["o" /* Platform */],
            __WEBPACK_IMPORTED_MODULE_7__services_config__["a" /* ConfigService */],
            __WEBPACK_IMPORTED_MODULE_10__ionic_storage__["b" /* Storage */],
            __WEBPACK_IMPORTED_MODULE_2__angular_forms__["a" /* FormBuilder */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* LoadingController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* ActionSheetController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */],
            __WEBPACK_IMPORTED_MODULE_11__ionic_native_camera__["a" /* Camera */],
            __WEBPACK_IMPORTED_MODULE_3__ionic_native_in_app_browser__["a" /* InAppBrowser */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["c" /* App */]])
    ], LoginPage);
    return LoginPage;
}());

//# sourceMappingURL=login.js.map

/***/ }),

/***/ 323:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return RegisterPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_forms__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__ionic_native_in_app_browser__ = __webpack_require__(58);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_toPromise__ = __webpack_require__(59);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_toPromise___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_toPromise__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__services_authentication__ = __webpack_require__(33);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__services_users__ = __webpack_require__(29);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__services_config__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__profile_profile__ = __webpack_require__(22);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__tabs_tabs__ = __webpack_require__(57);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__ionic_storage__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__ionic_native_camera__ = __webpack_require__(71);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



//import { InAppBrowser } from 'ionic-native';









var RegisterPage = /** @class */ (function () {
    function RegisterPage(navCtrl, viewCtrl, toastCtrl, navParams, auth, userService, platform, config, storage, formBuilder, loadingCtrl, action, alertCtrl, camera, iab) {
        this.navCtrl = navCtrl;
        this.viewCtrl = viewCtrl;
        this.toastCtrl = toastCtrl;
        this.navParams = navParams;
        this.auth = auth;
        this.userService = userService;
        this.platform = platform;
        this.config = config;
        this.storage = storage;
        this.formBuilder = formBuilder;
        this.loadingCtrl = loadingCtrl;
        this.action = action;
        this.alertCtrl = alertCtrl;
        this.camera = camera;
        this.iab = iab;
        this.isLoggedIn = false;
        this.register = false;
        this.signin = false;
        this.currentTab = 'dashboard';
        this.signupForm = formBuilder.group({
            username: ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["i" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["i" /* Validators */].required, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["i" /* Validators */].maxLength(30),
                    __WEBPACK_IMPORTED_MODULE_2__angular_forms__["i" /* Validators */].pattern(/[a-zA-Z0-9_]+/)]),
            ],
            email: ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["i" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["i" /* Validators */].required, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["i" /* Validators */].maxLength(40),
                    __WEBPACK_IMPORTED_MODULE_2__angular_forms__["i" /* Validators */].pattern(/[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/)])],
            password: ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["i" /* Validators */].required],
        });
        this.signinForm = formBuilder.group({
            username: ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["i" /* Validators */].required],
            password: ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["i" /* Validators */].required],
        });
    }
    RegisterPage.prototype.ngOnInit = function () {
        this.isLoggedIn = this.config.isLoggedIn;
        this.user = this.config.user;
        if (!this.config.settings.access_token) {
            this.isLoggedIn = false;
        }
    };
    RegisterPage.prototype.launchAuthorize = function () {
        this.auth.authRequest();
    };
    RegisterPage.prototype.onClose = function () {
        console.log("close");
        this.viewCtrl.dismiss();
    };
    RegisterPage.prototype.onSignUp = function () {
        var _this = this;
        console.log(this.signupForm);
        var loading = this.loadingCtrl.create({
            content: '<img src="assets/images/bubbles.svg">', duration: 15000,
            spinner: 'hide',
            showBackdrop: true,
        });
        loading.present();
        if (this.signupForm.valid) {
            this.auth.registerUser(this.signupForm.value).subscribe(function (res) {
                if (res) {
                    loading.dismiss();
                    var toast = _this.toastCtrl.create({
                        message: res.message,
                        duration: 2000,
                        position: 'bottom'
                    });
                    if (res.status) {
                        _this.userService.getUser();
                        toast.onDidDismiss(function () {
                            _this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_9__tabs_tabs__["a" /* TabsPage */]);
                        });
                    }
                    toast.present();
                }
            });
        }
    };
    RegisterPage.prototype.backToLogin = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_8__profile_profile__["a" /* ProfilePage */]);
    };
    RegisterPage.prototype.showterms = function () {
        var alert = this.alertCtrl.create({
            title: this.config.get_translation('login_terms_conditions'),
            message: this.config.terms_conditions,
            buttons: [
                {
                    text: this.config.get_translation('accept_continue'),
                    role: 'cancel',
                }
            ]
        });
        alert.present();
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["d" /* Content */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["d" /* Content */])
    ], RegisterPage.prototype, "content", void 0);
    RegisterPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-register',template:/*ion-inline-start:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\pages\register\register.html"*/'<ion-header center class="{{user ? \'loggedin\': \'non-loggedin\'}}">\n	<ion-buttons start>\n        <button ion-button menuToggle>\n            <ion-icon name="md-menu"></ion-icon>\n        </button>\n    </ion-buttons>\n    <ion-title *ngIf="!isLoggedIn"><h1>{{config.get_translation(\'login_heading\')}}</h1></ion-title>\n   \n</ion-header>\n<ion-content class="{{isLoggedIn ? \'loggedin\': \'non-loggedin\'}}">\n	<div class="signin_register" *ngIf="!isLoggedIn">\n		<div class="signin_content" padding>\n			\n			<div id="register" center>\n				<form [formGroup]="signupForm" (ngSubmit)="onSignUp()">\n					<ion-list>\n						<ion-item>\n							<ion-label floating [innerHtml]="config.get_translation(\'signup_username\')"></ion-label>\n							<ion-input type="text" formControlName="username"></ion-input>\n							<span *ngIf="signupForm.controls.username.pending"><ion-spinner></ion-spinner></span>\n						</ion-item>\n						<ion-item>\n							<ion-label floating [innerHtml]="config.get_translation(\'signup_email\')"></ion-label>\n							<ion-input type="text" formControlName="email"></ion-input>\n						</ion-item>\n						<ion-item>\n							<ion-label floating [innerHtml]="config.get_translation(\'signup_password\')"></ion-label>\n							<ion-input type="password" formControlName="password"></ion-input>\n						</ion-item>\n					</ion-list>\n					<button ion-button block outline type="submit" color="white" [innerHtml]="config.get_translation(\'login_signup\')"></button>\n					\n				</form>\n			</div>\n			<button ion-button clear center icon-left color="white" (click)="backToLogin()" [innerHtml]="config.get_translation(\'login_back\')"><ion-icon name="md-arrow-back"></ion-icon></button>\n		</div>\n	</div>\n	\n\n</ion-content>\n'/*ion-inline-end:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\pages\register\register.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["r" /* ViewController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* ToastController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_5__services_authentication__["a" /* AuthenticationService */],
            __WEBPACK_IMPORTED_MODULE_6__services_users__["a" /* UserService */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["o" /* Platform */],
            __WEBPACK_IMPORTED_MODULE_7__services_config__["a" /* ConfigService */],
            __WEBPACK_IMPORTED_MODULE_10__ionic_storage__["b" /* Storage */],
            __WEBPACK_IMPORTED_MODULE_2__angular_forms__["a" /* FormBuilder */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* LoadingController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* ActionSheetController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */],
            __WEBPACK_IMPORTED_MODULE_11__ionic_native_camera__["a" /* Camera */],
            __WEBPACK_IMPORTED_MODULE_3__ionic_native_in_app_browser__["a" /* InAppBrowser */]])
    ], RegisterPage);
    return RegisterPage;
}());

//# sourceMappingURL=register.js.map

/***/ }),

/***/ 324:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PostPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_config__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__services_blog__ = __webpack_require__(117);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var PostPage = /** @class */ (function () {
    function PostPage(navCtrl, navParams, blog, config, loadingController) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.blog = blog;
        this.config = config;
        this.loadingController = loadingController;
    }
    PostPage.prototype.ngOnInit = function () {
        var _this = this;
        this.post = this.navParams.data;
        var loading = this.loadingController.create({
            content: '<img src="assets/images/bubbles.svg">',
            duration: 15000,
            spinner: 'hide',
            showBackdrop: true,
        });
        loading.present();
        this.blog.getPost(this.post.id).subscribe(function (res) {
            console.log('gotcha');
            console.log(res);
            if (res) {
                _this.post['content'] = res['content'];
                if (res['post_content']) {
                    _this.post['post_content'] = res['post_content'];
                } // for video-gular support
                console.log('Content post');
                console.log(_this.post);
            }
            loading.dismiss();
        });
    };
    PostPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-post',template:/*ion-inline-start:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\pages\post\post.html"*/'<ion-header>\n    <ion-navbar  color="transparent">\n        <ion-buttons start>\n            <button ion-button menuToggle>\n                <ion-icon name="md-menu"></ion-icon>\n            </button>\n        </ion-buttons>\n        <ion-title>{{post.title}}</ion-title>\n    </ion-navbar>\n</ion-header>\n<ion-content elastic-header fixedscrollheader>\n    <div id="featured">\n        <lazy-img [inputSrc]="post.featured_image"></lazy-img> \n    </div>\n    <div padding>\n        <p [innerHtml]="post.date"></p>\n        <h1 [innerHtml]="post.title"></h1>\n         <!-- older version for description handle if post_content key is set -->\n        <div *ngIf="post.content && !post.post_content" >\n            <div [innerHtml]="post.content"></div>\n        </div>\n        <div *ngIf="post.post_content">\n            <div *ngIf="post.post_content.meta">\n                <VideoGularBlock [meta]="post.post_content.meta"></VideoGularBlock>\n            </div>\n            <!-- content -->\n            <div *ngIf="post.post_content.rest_content" [innerHTML]="post.post_content.rest_content"></div>\n        </div>\n        <ion-item>\n            <ion-avatar item-start>\n              <lazy-img [inputSrc]="post.author.avatar"></lazy-img>\n            </ion-avatar> \n            <h2 [innerHtml]="post.author.name"></h2>\n            <p [innerHtml]="post.date"></p>\n        </ion-item>\n	</div>\n</ion-content>\n'/*ion-inline-end:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\pages\post\post.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_3__services_blog__["a" /* BlogService */],
            __WEBPACK_IMPORTED_MODULE_2__services_config__["a" /* ConfigService */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* LoadingController */]])
    ], PostPage);
    return PostPage;
}());

//# sourceMappingURL=post.js.map

/***/ }),

/***/ 327:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ReviewCoursePage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_forms__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_ionic_angular__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__services_config__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__services_users__ = __webpack_require__(29);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var ReviewCoursePage = /** @class */ (function () {
    function ReviewCoursePage(viewCtrl, navCtrl, navParams, userService, config, loadingCtrl) {
        this.viewCtrl = viewCtrl;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.userService = userService;
        this.config = config;
        this.loadingCtrl = loadingCtrl;
        this.message = '';
    }
    ReviewCoursePage.prototype.ngOnInit = function () {
        var _this = this;
        this.course = this.navParams.get('course');
        this.initializeForm();
        console.log('inside');
        console.log(this.course);
        this.userService.getReview(this.course.id).subscribe(function (res) {
            if (res && 'title' in res) {
                console.log('fetching');
                _this.review = res;
                _this.reviewForm.setValue({
                    'title': _this.review.title,
                    'rating': _this.review.rating,
                    'review': _this.review.review
                });
            }
        });
    };
    ReviewCoursePage.prototype.initializeForm = function () {
        this.reviewForm = new __WEBPACK_IMPORTED_MODULE_1__angular_forms__["c" /* FormGroup */]({
            'title': new __WEBPACK_IMPORTED_MODULE_1__angular_forms__["b" /* FormControl */](null, __WEBPACK_IMPORTED_MODULE_1__angular_forms__["i" /* Validators */].required),
            'rating': new __WEBPACK_IMPORTED_MODULE_1__angular_forms__["b" /* FormControl */](5, __WEBPACK_IMPORTED_MODULE_1__angular_forms__["i" /* Validators */].required),
            'review': new __WEBPACK_IMPORTED_MODULE_1__angular_forms__["b" /* FormControl */](null, __WEBPACK_IMPORTED_MODULE_1__angular_forms__["i" /* Validators */].required),
        });
    };
    ReviewCoursePage.prototype.onSubmit = function () {
        var _this = this;
        var loading = this.loadingCtrl.create({
            content: '<img src="assets/images/bubbles.svg">',
            duration: 15000,
            spinner: 'hide',
            showBackdrop: true,
        });
        loading.present();
        this.userService.postReview(this.course.id, this.reviewForm.value).subscribe(function (res) {
            console.log(res);
            _this.message = res.message;
            loading.dismiss();
            if (res.status) {
            }
        });
        setTimeout(function () {
            if (this.viewCtrl) {
                this.viewCtrl.dismiss();
            }
        }, 3000);
    };
    ReviewCoursePage.prototype.onClose = function () {
        if (this.viewCtrl) {
            this.viewCtrl.dismiss();
        }
    };
    ReviewCoursePage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-reviewcourse',template:/*ion-inline-start:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\pages\reviewcourse\reviewcourse.html"*/'<ion-header center>\n    <ion-buttons start>\n        <button ion-button icon-only color="white" (click)="onClose()">\n            <ion-icon name="md-arrow-back"></ion-icon>\n        </button>\n    </ion-buttons>\n     <ion-title><span *ngIf="course.name">{{course.name}}</span><span *ngIf="course.instructor && course.instructor.name" [innerHtml]="course.instructor.name"></span></ion-title>\n</ion-header>\n\n<ion-content padding>\n    <h3 class="heading">\n    	<span [innerHtml]="config.get_translation(\'post_review\')"></span>\n    	<span *ngIf="course.name && course.instructor && course.instructor.name" >{{course.name}} - {{course.instructor.name}}</span>\n	</h3>\n	<form [formGroup]="reviewForm" (ngSubmit)="onSubmit()">\n		<ion-list>\n			<ion-item>\n				<ion-label floating>{{config.get_translation(\'review_title\')}}</ion-label>\n				<ion-input type="text" formControlName="title"></ion-input>\n			</ion-item>\n			<ion-item>\n				<ion-label floating>{{config.get_translation(\'review_rating\')}}</ion-label>\n	    		<ion-select formControlName="rating" okText="{{config.get_translation(\'ok\')}}" cancelText="{{config.get_translation(\'cancel\')}}">\n				    <ion-option value="1">{{config.get_translation(\'rating1star\')}}</ion-option>\n				    <ion-option value="2">{{config.get_translation(\'rating2star\')}}</ion-option>\n				    <ion-option value="3">{{config.get_translation(\'rating3star\')}}</ion-option>\n				    <ion-option value="4">{{config.get_translation(\'rating4star\')}}</ion-option>\n				    <ion-option value="5">{{config.get_translation(\'rating5star\')}}</ion-option>\n			  	</ion-select>\n			</ion-item>\n			<ion-item>\n	    		<ion-textarea formControlName="review" [placeholder]="config.get_translation(\'review_content\')"></ion-textarea>\n			</ion-item>\n		</ion-list>\n		<button type="submit" ion-button block [innerHtml]="config.get_translation(\'submit_review\')"></button>\n		<div class="message" *ngIf="message.length" [innerHtml]="message"></div>	\n	</form>\n</ion-content>\n'/*ion-inline-end:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\pages\reviewcourse\reviewcourse.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2_ionic_angular__["r" /* ViewController */],
            __WEBPACK_IMPORTED_MODULE_2_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_2_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_4__services_users__["a" /* UserService */],
            __WEBPACK_IMPORTED_MODULE_3__services_config__["a" /* ConfigService */],
            __WEBPACK_IMPORTED_MODULE_2_ionic_angular__["j" /* LoadingController */]])
    ], ReviewCoursePage);
    return ReviewCoursePage;
}());

//# sourceMappingURL=reviewcourse.js.map

/***/ }),

/***/ 328:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return UnitCommentPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_notes_discussions__ = __webpack_require__(120);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__services_config__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__pages_add_edit_unit_comment_add_edit_unit_comment__ = __webpack_require__(186);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






var UnitCommentPage = /** @class */ (function () {
    function UnitCommentPage(navCtrl, navParams, notes, notesanddiscussion, alertCtrl, loadingCtrl, config) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.notes = notes;
        this.notesanddiscussion = notesanddiscussion;
        this.alertCtrl = alertCtrl;
        this.loadingCtrl = loadingCtrl;
        this.config = config;
        this.comments = [];
        this.loading = 1;
        this.paged = 0;
        this.res_check = true;
        this.noMoreCommentsAvailable = false;
        console.log('constructor unit comment page');
    }
    UnitCommentPage.prototype.ngOnInit = function () {
        var _this = this;
        this.unit_id = this.navParams.data;
        if (this.paged <= 1) {
            this.notesanddiscussion.getComments(this.unit_id).subscribe(function (res) {
                if (res) {
                    //this.comments = this.notesanddiscussion.comments;
                    if (_this.notesanddiscussion.paged === 0 || !_this.notesanddiscussion.comments.length) {
                        _this.noMoreCommentsAvailable = true;
                    }
                    else {
                        _this.paged = _this.notesanddiscussion.paged;
                    }
                }
            });
        }
    };
    UnitCommentPage.prototype.formatComments = function (comments) {
        var _this = this;
        this.comments = comments;
        var comments_tree = [];
        this.comments.map(function (comment, i) {
            var c = _this.recursiveFormat(comment);
            comments_tree.push(c);
        });
        return comments_tree;
    };
    UnitCommentPage.prototype.recursiveFormat = function (comment) {
        var _this = this;
        this.comments.map(function (c, i) {
            if (parseInt(comment.comment_ID) === parseInt(c.comment_parent)) {
                if (!comment.hasOwnProperty('child')) {
                    comment['child'] = [];
                }
                _this.comments.splice(i, 1);
                comment.child.push(_this.recursiveFormat(c));
            }
        });
        return comment;
    };
    /*infiniteload(){
        this.unit_id=this.navParams.data;
        console.log(this.unit_id);
        console.log('below unit id and above res check');

        this.notesanddiscussion.getCommentPerPage(this.unit_id,this.notesanddiscussion.page_number);
        console.log('res_check');
        console.log(this.res_check);
        this.notesanddiscussion.page_number++;
    }*/
    UnitCommentPage.prototype.showCommentForm = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_4__pages_add_edit_unit_comment_add_edit_unit_comment__["a" /* AddEditUnitCommentPage */], { 'comment': 0, 'unit_id': this.unit_id, 'type': 'new' });
    };
    UnitCommentPage.prototype.doRefresh = function (refresher) {
        var _this = this;
        this.notesanddiscussion.getComments(this.unit_id, 0).subscribe(function (res) {
            _this.paged = _this.notesanddiscussion.paged;
            refresher.complete();
        });
    };
    UnitCommentPage.prototype.loadMoreComments = function (loaded) {
        var _this = this;
        this.notesanddiscussion.getComments(this.unit_id, this.paged).subscribe(function (res) {
            if (res) {
                console.log(_this.notesanddiscussion.paged + '  vs ' + _this.paged);
                if (_this.paged === _this.notesanddiscussion.paged) {
                    _this.noMoreCommentsAvailable = true;
                }
                else {
                    _this.paged = _this.notesanddiscussion.paged;
                }
            }
            else {
                _this.noMoreCommentsAvailable = true;
            }
            loaded.complete();
        });
    };
    UnitCommentPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-unitcomment',template:/*ion-inline-start:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\pages\unitcomment\unitcomment.html"*/'<ion-header>\n	  <ion-navbar>\n	    <ion-title>{{config.get_translation(\'Unitcomment\')}}</ion-title>\n	  </ion-navbar>\n</ion-header>\n\n\n<ion-content padding>\n	<button ion-button (click)="showCommentForm()">{{config.get_translation(\'Add_comment\')}}</button> \n	<div>\n		<ion-refresher (ionRefresh)="doRefresh($event)">\n		    <ion-refresher-content pullingText="{{config.get_translation(\'pull_to_refresh\')}}"\n		      pullingIcon="arrow-dropdown"\n		      refreshingSpinner="circles"\n		      refreshingText="{{config.get_translation(\'refreshing\')}}"></ion-refresher-content>\n	  	</ion-refresher>\n	  	<div *ngIf="notesanddiscussion.comments.length" >\n			<ul class="unit_comments"> \n	 			<li *ngFor="let mcomment of formatComments(notesanddiscussion.comments); let i = index">	\n	 				<CommentBlock [comment]="mcomment"></CommentBlock>\n	 			</li>\n	 		</ul>\n	 		<ion-infinite-scroll *ngIf="!noMoreCommentsAvailable" (ionInfinite)="loadMoreComments($event)">\n	           <ion-infinite-scroll-content></ion-infinite-scroll-content>\n	        </ion-infinite-scroll>\n        </div>\n	    <div  *ngIf="!notesanddiscussion.comments.length">{{config.get_translation(\'No_comment_avail\')}}</div>\n	</div>\n	\n	       \n\n</ion-content>\n'/*ion-inline-end:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\pages\unitcomment\unitcomment.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__services_notes_discussions__["a" /* NotesDiscussionService */],
            __WEBPACK_IMPORTED_MODULE_2__services_notes_discussions__["a" /* NotesDiscussionService */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* LoadingController */],
            __WEBPACK_IMPORTED_MODULE_3__services_config__["a" /* ConfigService */]])
    ], UnitCommentPage);
    return UnitCommentPage;
}());

//# sourceMappingURL=unitcomment.js.map

/***/ }),

/***/ 329:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return UploadAssignmentPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_forms__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__services_upload_assignment__ = __webpack_require__(187);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__services_status__ = __webpack_require__(184);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__services_config__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_Observable__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_rxjs_Observable__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__ionic_storage__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__ionic_native_camera__ = __webpack_require__(71);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__ionic_native_file_transfer__ = __webpack_require__(182);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



// import { FormBuilder, FormGroup,FormControl, Validators, } from '@angular/forms';
// import { FormGroup,FormControl, Validators } from '@angular/forms';








var UploadAssignmentPage = /** @class */ (function () {
    function UploadAssignmentPage(navCtrl, navParams, upload_assignment, statusservice, alertCtrl, loadingController, config, camera, storage, action, transfer, toastCtrl) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.upload_assignment = upload_assignment;
        this.statusservice = statusservice;
        this.alertCtrl = alertCtrl;
        this.loadingController = loadingController;
        this.config = config;
        this.camera = camera;
        this.storage = storage;
        this.action = action;
        this.transfer = transfer;
        this.toastCtrl = toastCtrl;
        this.loading = 0;
        this.timer_end = 0;
        console.log('constructor upload assignment page');
    }
    UploadAssignmentPage.prototype.ngOnInit = function () {
        var _this = this;
        this.timerVar = __WEBPACK_IMPORTED_MODULE_6_rxjs_Observable__["Observable"].interval(1000000).subscribe(function (x) { }); // initialzile for ion view did leave so that no error occure
        this.initializeForm(); // Initialize form content
        console.log('assignment data---');
        this.assignment_data = this.navParams.data;
        this.current_unit_id = this.assignment_data.current_unit_id;
        this.coursestatus = JSON.parse(this.navParams.data.coursestatus); // necessary  structure circular error 
        this.current_i = this.navParams.data.current_i;
        var loading = this.loadingController.create({
            content: '<img src="assets/images/bubbles.svg">',
            duration: 15000,
            spinner: 'hide',
            showBackdrop: true,
        });
        loading.present();
        this.upload_assignment.get_assignment_data(this.assignment_data.id).subscribe(function (res) {
            if (_this.upload_assignment.assignment_res_data_service.flag == 1 || _this.upload_assignment.assignment_res_data_service.flag == 2) {
                _this.startTimer(_this.upload_assignment.assignment_res_data_service.duration, _this.upload_assignment.assignment_res_data_service.start);
            }
            _this.UnitStorageUpdate();
            loading.dismiss();
            _this.loading = 1;
        });
    };
    UploadAssignmentPage.prototype.ionViewDidEnter = function () {
        console.log('I entered');
    };
    UploadAssignmentPage.prototype.startTimer = function (duration, start) {
        var _this = this;
        this.timer_end = 0;
        this.time = parseInt(duration) + parseInt(start) - Math.round(new Date().getTime() / 1000);
        this.timerVar = __WEBPACK_IMPORTED_MODULE_6_rxjs_Observable__["Observable"].interval(1000).subscribe(function (x) {
            _this.timerVal = _this.time - x;
            _this.days = Math.floor(_this.timerVal / 86400);
            _this.hours = Math.floor((_this.timerVal % 86400) / 3600);
            _this.minutes = Math.floor(((_this.timerVal % 86400) % 3600) / 60);
            _this.seconds = ((_this.timerVal % 86400) % 3600) % 60;
            if (_this.timerVal <= 0) {
                _this.timerVar.unsubscribe();
                _this.timer_end = 1; // removes form from page  (on time remaining =0)
                if (_this.upload_assignment.assignment_res_data_service.flag == 1) {
                    _this.upload_assignment.assignment_res_data_service.message = _this.config.get_translation('Timer_expired');
                }
            }
            if (_this.timerVal == 120) {
                var toast = _this.toastCtrl.create({
                    message: _this.config.get_translation('You_have_2_minutes_remaining'),
                    duration: 1000,
                    position: 'bottom'
                });
                toast.present();
            }
        });
    };
    UploadAssignmentPage.prototype.onSubmit = function (data) {
        var _this = this;
        if (this.file != undefined && data.value.comment_content != null) {
            var check_mime_value = this.upload_assignment.assignment_res_data_service.permit_mime.indexOf(this.file.type);
            if (this.file.size < this.upload_assignment.assignment_res_data_service.permit_size && check_mime_value >= 0) {
                var loading_1 = this.loadingController.create({
                    content: '<img src="assets/images/bubbles.svg">',
                    duration: 15000,
                    spinner: 'hide',
                    showBackdrop: true,
                });
                loading_1.present();
                var datapass = { 'comment_content': data.value.comment_content, 'file': this.file };
                this.upload_assignment.upload_assignment_data(this.assignment_data.id, datapass).subscribe(function (res) {
                    if (res.attachment_id) {
                        var toast = _this.toastCtrl.create({
                            message: 'Assignment Uploaded!',
                            duration: 5000,
                            position: 'bottom'
                        });
                        toast.present();
                    }
                    loading_1.dismiss();
                });
            }
            else {
                var toast = this.toastCtrl.create({
                    message: this.config.get_translation('Not_match_size_or_type'),
                    duration: 2000,
                    position: 'bottom'
                });
                toast.present();
            }
        }
        else {
            var toast = this.toastCtrl.create({
                message: this.config.get_translation('file_not_selected_comment_not_entered'),
                duration: 2000,
                position: 'bottom'
            });
            toast.present();
        }
    };
    UploadAssignmentPage.prototype.changeListener = function ($event) {
        this.file = $event.target.files[0];
    };
    UploadAssignmentPage.prototype.initializeForm = function () {
        this.commentForm = new __WEBPACK_IMPORTED_MODULE_2__angular_forms__["c" /* FormGroup */]({
            'assignment': new __WEBPACK_IMPORTED_MODULE_2__angular_forms__["b" /* FormControl */](null, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["i" /* Validators */].required),
            'comment_content': new __WEBPACK_IMPORTED_MODULE_2__angular_forms__["b" /* FormControl */](null, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["i" /* Validators */].required),
        });
    };
    UploadAssignmentPage.prototype.start_assignment = function () {
        var _this = this;
        var loading = this.loadingController.create({
            content: '<img src="assets/images/bubbles.svg">',
            duration: 15000,
            spinner: 'hide',
            showBackdrop: true,
        });
        loading.present();
        this.upload_assignment.start_assignment(this.assignment_data.id).subscribe(function (res) {
            _this.upload_assignment.assignment_res_data_service.flag = 1;
            _this.timer_end = 0;
            _this.startTimer(res.duration, res.start);
            _this.UnitStorageUpdate();
            loading.dismiss();
            _this.loading = 1;
        });
    };
    UploadAssignmentPage.prototype.ionViewDidLeave = function () {
        var _this = this;
        this.timerVar.unsubscribe();
        var assignment_index = this.upload_assignment.assignments.findIndex(function (assignment) { return assignment.id == _this.assignment_data.id; });
        this.upload_assignment.assignments[assignment_index].flag = this.upload_assignment.assignment_res_data_service.flag;
        this.upload_assignment.assignments[assignment_index].started = this.upload_assignment.assignment_res_data_service.start;
        this.upload_assignment.assignments[assignment_index].status = this.upload_assignment.assignment_res_data_service.marks;
        this.UnitStorageUpdate();
    };
    UploadAssignmentPage.prototype.doRefresh = function (refresher) {
        var _this = this;
        this.timerVar.unsubscribe();
        var loading = this.loadingController.create({
            content: '<img src="assets/images/bubbles.svg">',
            duration: 15000,
            spinner: 'hide',
            showBackdrop: true,
        });
        loading.present();
        this.upload_assignment.get_assignment_data(this.assignment_data.id, 1).subscribe(function (res) {
            if (_this.upload_assignment.assignment_res_data_service.flag == 1 || _this.upload_assignment.assignment_res_data_service.flag == 2) {
                _this.startTimer(_this.upload_assignment.assignment_res_data_service.duration, _this.upload_assignment.assignment_res_data_service.start);
            }
            _this.UnitStorageUpdate();
            loading.dismiss();
            _this.loading = 1;
            refresher.complete();
        });
    };
    // for storage in unit.meta.assignment update when something change in current assignment
    UploadAssignmentPage.prototype.UnitStorageUpdate = function () {
        var _this = this;
        if (this.coursestatus.courseitems[this.current_i] && this.coursestatus.courseitems[this.current_i].meta.assignments) {
            var assignment_index = this.coursestatus.courseitems[this.current_i].meta.assignments.findIndex(function (x) { return x.id == _this.assignment_data.id; });
            this.coursestatus.courseitems[this.current_i].meta.assignments[assignment_index] = this.upload_assignment.assignments[assignment_index];
            this.statusservice.updateCourseStatus(this.coursestatus);
        }
    };
    UploadAssignmentPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-uploadassignment',template:/*ion-inline-start:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\pages\uploadassignment\uploadassignment.html"*/'<ion-header>\n	  <ion-navbar>\n	    <ion-title>{{assignment_data.title}}</ion-title>\n	  </ion-navbar>\n</ion-header>\n\n<ion-content padding> \n\n		<ion-refresher (ionRefresh)="doRefresh($event)">\n		    <ion-refresher-content pullingText="{{config.get_translation(\'pull_to_refresh\')}}"\n		      pullingIcon="arrow-dropdown"\n		      refreshingSpinner="circles"\n		      refreshingText="{{config.get_translation(\'refreshing\')}}"></ion-refresher-content>\n	  	</ion-refresher>\n\n	 \n	\n\n		\n		<div  *ngIf=" loading == 1 ">\n			\n\n			\n				<h1 [innerHtml]="assignment_data.title"></h1>\n\n				<div class="assignment_header">\n					<span class="assignment_status">{{upload_assignment.assignment_res_data_service.message}}</span>\n					<span class="assignment_marks">\n						<span *ngIf="upload_assignment.assignment_res_data_service.flag == 2">{{upload_assignment.assignment_res_data_service.marks}}</span>\n						<span>{{upload_assignment.assignment_res_data_service.total_marks}}</span>\n					</span>\n				</div>\n				<div *ngIf="upload_assignment.assignment_res_data_service.flag == 1">\n					<div class="assignment_timer" *ngIf="timer_end == 0 && this.timerVal > 0" >\n						<span><strong>{{days}}</strong><span>{{config.get_translation(\'days\')}}</span></span>\n						<span><strong>{{hours}}</strong><span>{{config.get_translation(\'hours\')}}</span></span>\n						<span><strong>{{minutes}}</strong><span>{{config.get_translation(\'minutes\')}}</span></span>\n						<span><strong>{{seconds}}</strong><span>{{config.get_translation(\'seconds\')}}</span></span>\n					</div>\n				</div>\n				<div class="assignment_content" [innerHtml]="upload_assignment.assignment_res_data_service.content"></div>\n\n				<button ion-button ion-full  (click)="start_assignment()" *ngIf="upload_assignment.assignment_res_data_service.flag == 0 ">{{config.get_translation(\'start_assignment\')}}</button>\n				\n				<div  *ngIf="upload_assignment.assignment_res_data_service.flag == 1">\n\n					<div class="uploaded_assignment" *ngIf="upload_assignment.assignment_res_data_service.attachment_url && upload_assignment.assignment_res_data_service.comment_content">\n						<h2>{{config.get_translation(\'your_attachment\')}}:</h2>\n						<a [href]="upload_assignment.assignment_res_data_service.attachment_url"><ion-icon name="md-cloud-download"></ion-icon></a>\n						<h3>{{config.get_translation(\'your_attachment_comment\')}}:</h3>\n						<p   [innerHtml]="upload_assignment.assignment_res_data_service.comment_content"></p>\n				    \n				    </div>			\n			    </div>\n\n			    <fieldset class="assignment_form"  *ngIf="upload_assignment.assignment_res_data_service.flag == 1 && timer_end == 0  && this.timerVal> 0" >\n				   \n				    <form [formGroup]="commentForm" (ngSubmit)="onSubmit(commentForm)"  >\n				    	\n				    	<ion-textarea formControlName="comment_content" placeholder="{{config.get_translation(\'Enter_your_comment\')}}"></ion-textarea>\n				        <input type="file" formControlName="assignment" name="assignment" (change)="changeListener($event)"/>\n				       \n				        <h6>{{config.get_translation(\'Allowed_file_size\')}}:</h6> \n				        <span [innerHtml]="upload_assignment.assignment_res_data_service.permit_size"></span>kb\n				        <h6>{{config.get_translation(\'Allowed_extensions\')}}:</h6> \n				        <span *ngFor="let permit_extension of upload_assignment.assignment_res_data_service.permit_extension">\n				        	<span [innerHtml]="permit_extension"></span>,\n				        </span>\n\n						<button ion-button ion-full>{{config.get_translation(\'upload_assignment\')}}</button>\n					</form>\n\n				</fieldset>\n\n		</div>\n\n  \n\n\n</ion-content>'/*ion-inline-end:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\pages\uploadassignment\uploadassignment.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_3__services_upload_assignment__["a" /* UploadAssignmentService */],
            __WEBPACK_IMPORTED_MODULE_4__services_status__["a" /* CourseStatusService */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* LoadingController */],
            __WEBPACK_IMPORTED_MODULE_5__services_config__["a" /* ConfigService */],
            __WEBPACK_IMPORTED_MODULE_8__ionic_native_camera__["a" /* Camera */],
            __WEBPACK_IMPORTED_MODULE_7__ionic_storage__["b" /* Storage */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* ActionSheetController */],
            __WEBPACK_IMPORTED_MODULE_9__ionic_native_file_transfer__["a" /* FileTransfer */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* ToastController */]])
    ], UploadAssignmentPage);
    return UploadAssignmentPage;
}());

//# sourceMappingURL=uploadassignment.js.map

/***/ }),

/***/ 33:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AuthenticationService; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_ionic_angular__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_map__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_Observable__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_Observable__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__ionic_native_in_app_browser__ = __webpack_require__(58);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__config__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__ionic_storage__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__ionic_native_device__ = __webpack_require__(317);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__ionic_native_facebook__ = __webpack_require__(318);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__ionic_native_google_plus__ = __webpack_require__(319);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__chat__ = __webpack_require__(87);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__push_notification__ = __webpack_require__(114);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





//import { InAppBrowser } from 'ionic-native';








var AuthenticationService = /** @class */ (function () {
    function AuthenticationService(http, platform, storage, config, fb, loadingCtrl, toastCtrl, iab, googlePlus, device, chatService, push_notification) {
        this.http = http;
        this.platform = platform;
        this.storage = storage;
        this.config = config;
        this.fb = fb;
        this.loadingCtrl = loadingCtrl;
        this.toastCtrl = toastCtrl;
        this.iab = iab;
        this.googlePlus = googlePlus;
        this.device = device;
        this.chatService = chatService;
        this.push_notification = push_notification;
        this.fbloggedin = false;
        this.baseUrl = this.config.oAuthUrl;
        this.client_id = this.config.settings.client_id;
        this.client_secret = this.config.settings.client_secret;
        this.redirect_uri = this.config.settings.url;
        this.state = this.config.settings.state;
        if (!this.config.isLoggedIn) {
            // this.fb.browserInit(this.config.settings.facebook.app_id, "v2.9");    
        }
        this.access_token = this.config.settings.access_token; //'mbyrxvaoicy7encgoi3t62jt1koiq6szqmystpt0';
    }
    AuthenticationService.prototype.authorizeURL = function () {
        return this.config.baseUrl + 'authorize?client_id=' + this.config.settings.client_id + '&redirect_uri=' + this.config.settings.url + '&response_type=code&scope=basic&state=' + this.config.settings.state;
    };
    AuthenticationService.prototype.tokenURL = function () {
        return this.config.baseUrl + 'token';
    };
    AuthenticationService.prototype.getAccessToken = function () {
        if (this.access_token)
            return this.access_token;
        else
            return this.config.settings.access_token;
    };
    AuthenticationService.prototype.setAccessToken = function (token) {
        console.log('Setting access token ' + token);
        if (token) {
            this.access_token = token;
            console.log('setting token ' + token);
            this.config.set_settings('access_token', token);
        }
    };
    AuthenticationService.prototype.setUser = function (user) {
        this.config.isLoggedIn = true;
        this.config.user = user;
        this.user = this.config.user;
        this.storage.set('user', this.user);
        this.config.addToTracker('user', user);
        this.config.getTracker();
        this.chatService.register_new_user(user); // make firebase hit here to register new user ,login to user or register 
        this.push_notification.add_user_to_user_notification_list(user); // add user to site for notification
    };
    AuthenticationService.prototype.getHeaders = function () {
        this.headers = this.storage.get('token').then(function (token) {
            return new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]({
                "Content-Type": "application/json",
                "Authorization": token,
            });
        });
    };
    AuthenticationService.prototype.authRequest = function () {
        var _this = this;
        this.platform.ready().then(function () {
            //, "EnableViewPortScale=yes,closebuttoncaption=Done"
            _this.browser = _this.iab.create(_this.authorizeURL(), "_blank");
            _this.browser.on('loadstop', function (event) {
                var _this = this;
                console.log('listen event oauth callback');
                if ((event.url).startsWith(this.config.settings.url)) {
                    console.log('oauth callback url');
                    var query = event.url.substr(event.url.indexOf('?code') + 1);
                    var data = {};
                    var parts = query.split('&');
                    console.log(parts);
                    // read names and values
                    for (var i = 0; i < parts.length; i++) {
                        var name = parts[i].substr(0, parts[i].indexOf('='));
                        var val = parts[i].substr(parts[i].indexOf('=') + 1);
                        val = decodeURIComponent(val);
                        data[name] = val;
                        if (name == 'code') {
                            console.log('authorization code = ' + val);
                            this.authCode = val;
                        }
                        if (name == 'error') {
                            this.browser.close();
                            var toast = this.toastCtrl.create({
                                message: val,
                                duration: 1000,
                                position: 'bottom'
                            });
                            toast.present();
                        }
                    }
                    var body = JSON.stringify({
                        grant_type: 'authorization_code',
                        code: this.authCode,
                        client_id: this.config.settings.client_id,
                        client_secret: this.config.settings.client_secret,
                        redirect_uri: this.config.redirect_uri
                    });
                    var loading_1 = this.loadingCtrl.create({
                        content: '<img src="assets/images/bubbles.svg">',
                        duration: 2000,
                        spinner: 'hide',
                        showBackdrop: true,
                    });
                    loading_1.present();
                    this.http.post(this.tokenURL(), body)
                        .map(function (res) { return res.json(); })
                        .subscribe(function (data) {
                        console.log(data);
                        if (!data.error) {
                            _this.access_token = data.access_token;
                            _this.setAccessToken(data.access_token);
                            var opt = _this.getUserAuthorizationHeaders();
                            _this.http.get(_this.config.baseUrl + "user/?full", opt)
                                .map(function (response) {
                                if (response.status == 400) {
                                    return "FAILURE";
                                }
                                else if (response.status == 200) {
                                    var body_1 = response.json();
                                    console.log(body_1);
                                    if (body_1) {
                                        _this.setUser(body_1);
                                    }
                                }
                            });
                        }
                        loading_1.dismiss();
                    }, function (err) {
                        console.log("ERROR!: ", err);
                    });
                }
            });
        });
        //return this.access_token;
    };
    AuthenticationService.prototype.getUser = function () {
        var _this = this;
        if (this.config.trackComponents('user')) {
            this.storage.get('user').then(function (user) {
                _this.user = user;
                return __WEBPACK_IMPORTED_MODULE_4_rxjs_Observable__["Observable"].of(_this.user);
            });
        }
        else {
            var opt = this.getUserAuthorizationHeaders();
            this.observable = this.http.get(this.config.baseUrl + "user/", opt)
                .map(function (response) {
                _this.observable = null;
                if (response.status == 400) {
                    return "FAILURE";
                }
                else if (response.status == 200) {
                    var body = response.json();
                    console.log(body);
                    if (body) {
                        _this.user = body;
                        _this.config.updateComponents('user', _this.user.id);
                        _this.storage.set('user', _this.user);
                        return body;
                    }
                }
            });
        }
        return this.observable;
    };
    AuthenticationService.prototype.fbLogin = function () {
        var _this = this;
        var $this = this;
        console.log('FB CLICKED');
        var permissions = ["public_profile", "email"];
        //let env = this;
        var params = [];
        return __WEBPACK_IMPORTED_MODULE_4_rxjs_Observable__["Observable"].fromPromise(this.fb.login(permissions).then(function (res) {
            return __WEBPACK_IMPORTED_MODULE_4_rxjs_Observable__["Observable"].fromPromise(_this.fb.api("/me?fields=name,email,gender", params)
                .then(function (user) {
                console.log('FB User response');
                console.log(user);
                //env.fbloggedin=true;
                var user_obj = {
                    'name': user.name,
                    'email': user.email,
                    'fbid': user.id,
                    'id': user.id,
                    'avatar': "https://graph.facebook.com/" + user.id + "/picture?type=large",
                };
                $this.setUser(user_obj);
                return user_obj;
            }));
        }));
    };
    AuthenticationService.prototype.googleLogin = function () {
        var _this = this;
        var $this = this;
        var loading = this.loadingCtrl.create({
            content: '<img src="assets/images/bubbles.svg">',
            duration: 2000,
            spinner: 'hide',
            showBackdrop: true,
        });
        loading.present();
        return __WEBPACK_IMPORTED_MODULE_4_rxjs_Observable__["Observable"].fromPromise(this.googlePlus.login({}).then(function (res) {
            console.log('Response');
            console.log(res);
            loading.dismiss();
            var user_obj = {
                'name': res.displayName,
                'email': res.email,
                'gid': res.userId,
                'id': res.userId,
                'avatar': res.imageUrl,
            };
            _this.setUser(user_obj);
            return user_obj;
        }, function (err) {
            console.log('Error');
            console.log(err);
        }));
    };
    AuthenticationService.prototype.logout = function (user) {
        if (user) {
            var opt = this.getUserAuthorizationHeaders();
            var url = this.config.baseUrl + "user/logout";
            this.http.post(url, {}, opt).subscribe(function (res) {
            });
            console.log(this.config.defaultTrack);
            console.log('this.config.defaultTrack;');
            console.log(this.config.track);
            this.config.track = this.config.defaultTrack;
        }
        this.fb.logout();
        this.googlePlus.logout();
        this.chatService.logout(user); // logout user from firebase
        this.push_notification.delete_user_to_user_notification_list();
        this.storage.clear();
    };
    AuthenticationService.prototype.signinUser = function (form) {
        var _this = this;
        console.log('signinUser');
        form.client_id = this.config.settings.client_id;
        form.state = this.config.settings.state;
        form.device = this.device.uuid;
        form.platform = this.device.platform;
        form.model = this.device.model;
        var headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]({
            'Content-Type': 'application/json'
        });
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({
            headers: headers
        });
        this.observable = this.http.post(this.config.baseUrl + "user/signin", form, options)
            .map(function (response) {
            _this.observable = null;
            console.log('signinuser first response');
            console.log(response);
            if (response.status == 400) {
                return "FAILURE";
            }
            else if (response.status == 200) {
                console.log('signinuser response');
                console.log(response);
                var body = response.json();
                console.log('Attempting Signin');
                console.log(body);
                if (body.status) {
                    _this.setAccessToken(body.token.access_token);
                    _this.setUser(body.user);
                    _this.config.track.counter--;
                    //this.config.getTracker();
                }
                return { 'status': body.status, 'message': body.message };
            }
        });
        return this.observable;
    };
    AuthenticationService.prototype.registerUser = function (form) {
        var _this = this;
        console.log(form);
        form.client_id = this.config.settings.client_id;
        form.state = this.config.settings.state;
        form.device = this.device.uuid;
        form.platform = this.device.platform + ' ( ' + this.device.version + ') ';
        form.model = this.device.model;
        var headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]({
            'Content-Type': 'application/json'
        });
        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({
            headers: headers
        });
        this.observable = this.http.post(this.config.baseUrl + "user/register", form, options)
            .map(function (response) {
            _this.observable = null;
            if (response.status == 400) {
                return "FAILURE";
            }
            else if (response.status == 200) {
                var body = response.json();
                if (body.status) {
                    _this.setAccessToken(body.token.access_token);
                    _this.setUser(body.user);
                }
                console.log('body');
                console.log(body);
                return { 'status': body.status, 'message': body.message };
            }
        });
        return this.observable;
    };
    AuthenticationService.prototype.checkEmailAvailability = function (control) {
        var _this = this;
        var email = control.value;
        console.log('CALLED =' + email);
        return new Promise(function (resolve) {
            _this.http.get(_this.config.baseUrl + "user/verify/?email=" + email)
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                resolve(data);
            });
        });
    };
    AuthenticationService.prototype.checkUsernameAvailability = function (control) {
        var _this = this;
        var username = control.value;
        console.log('CALLED =' + username);
        return new Promise(function (resolve) {
            _this.http.get(_this.config.baseUrl + "user/verify/?username=" + username)
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                resolve(data);
            });
        });
    };
    AuthenticationService.prototype.getUserAuthorizationHeaders = function () {
        var userheaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        userheaders.append('Authorization', this.config.settings.access_token);
        return new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: userheaders });
    };
    AuthenticationService.prototype.openRegistration = function () {
    };
    AuthenticationService.prototype.signIn = function () {
        this.authRequest();
    };
    // make firebase hit here to register new user
    AuthenticationService.prototype.firebase_login_from_storage = function (user) {
        if (this.config.chat.enable_chat) {
            this.chatService.register_new_user(user); // make login to user or register
        }
    };
    AuthenticationService = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Http */],
            __WEBPACK_IMPORTED_MODULE_2_ionic_angular__["o" /* Platform */],
            __WEBPACK_IMPORTED_MODULE_7__ionic_storage__["b" /* Storage */],
            __WEBPACK_IMPORTED_MODULE_6__config__["a" /* ConfigService */],
            __WEBPACK_IMPORTED_MODULE_9__ionic_native_facebook__["a" /* Facebook */],
            __WEBPACK_IMPORTED_MODULE_2_ionic_angular__["j" /* LoadingController */],
            __WEBPACK_IMPORTED_MODULE_2_ionic_angular__["q" /* ToastController */],
            __WEBPACK_IMPORTED_MODULE_5__ionic_native_in_app_browser__["a" /* InAppBrowser */],
            __WEBPACK_IMPORTED_MODULE_10__ionic_native_google_plus__["a" /* GooglePlus */],
            __WEBPACK_IMPORTED_MODULE_8__ionic_native_device__["a" /* Device */],
            __WEBPACK_IMPORTED_MODULE_11__chat__["a" /* ChatService */],
            __WEBPACK_IMPORTED_MODULE_12__push_notification__["a" /* PushNotificationService */]])
    ], AuthenticationService);
    return AuthenticationService;
}());

//# sourceMappingURL=authentication.js.map

/***/ }),

/***/ 330:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ResultPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_users__ = __webpack_require__(29);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__services_config__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_util_isNumeric__ = __webpack_require__(74);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_util_isNumeric___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_util_isNumeric__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var ResultPage = /** @class */ (function () {
    function ResultPage(navCtrl, navParams, config, userService, loadingCtrl) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.config = config;
        this.userService = userService;
        this.loadingCtrl = loadingCtrl;
        this.fullresult = [];
        this.localresult = false;
        this.site_result = false;
    }
    ResultPage.prototype.ngOnInit = function () {
        var _this = this;
        var loading = this.loadingCtrl.create({
            content: '<img src="assets/images/bubbles.svg">',
            spinner: 'hide',
            showBackdrop: true,
        });
        loading.present();
        this.result = this.navParams.data;
        console.log(this.navParams.data);
        if ('meta' in this.result && Array.isArray(this.result.meta.questions)) {
            this.localresult = true;
            loading.dismiss();
            console.log(this.result.meta.questions);
        }
        else {
            console.log(this.result);
            this.userService.getResult(this.result).subscribe(function (site_fullresult) {
                console.log('Full result');
                console.log(site_fullresult);
                if (site_fullresult) {
                    _this.fullresult = site_fullresult;
                    _this.site_result = true;
                    loading.dismiss();
                }
            });
        }
    };
    ResultPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-result',template:/*ion-inline-start:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\pages\result\result.html"*/'<ion-header center color="transparent">\n    <ion-buttons start>\n        <button ion-button icon-only clear navPop>\n            <ion-icon name="md-arrow-back"></ion-icon>\n        </button>\n    </ion-buttons>\n</ion-header>\n<ion-content padding>\n    \n	<h3 [innerHtml]="navParams.data?.title"></h3>\n	\n	<div *ngIf="localresult && result.meta.questions.length">\n		<ion-row>\n			<ion-col>\n				<ion-label>{{config.get_translation(\'marks_obtained\')}} : <strong>{{result.meta.marks}}</strong></ion-label>\n			</ion-col>\n			<ion-col>\n				<ion-label>{{config.get_translation(\'max_marks\')}} : <strong>{{result.meta.max}}</strong></ion-label>\n			</ion-col>\n		</ion-row>\n		<ion-card *ngFor="let q of result.meta.questions">\n			<ion-card-content>\n				<div class="marks"><span *ngIf="q.user_marks!==\'\'" [innerHtml]="q.user_marks"></span>/\n					<span *ngIf="q.marks" [innerHtml]="q.marks"></span></div>\n				<div [innerHtml]="q[\'content\']"></div>\n				<div [ngClass]="{\'correct\':(q.marks>0), \'incorrect\':(q.marks==0) }">\n					<ion-label>{{config.get_translation(\'marked_answer\')}} </ion-label>\n					<div [innerHtml]="q.marked"></div>\n				</div>\n				<div class="correct_answer">\n					<ion-label>{{config.get_translation(\'correct_answer\')}}  </ion-label>\n					<div [innerHtml]="q.correct"></div>\n				</div>\n				<div class="answer_explanation" *ngIf="q.explanation.length">\n					<ion-label>{{config.get_translation(\'explanation\')}} </ion-label>\n					<div [innerHtml]="q.explanation"></div>\n				</div>	\n			</ion-card-content>\n		</ion-card>	\n		<button ion-button *ngIf="result.meta.retakes">\n			{{config.get_translation(\'retake_quiz\')}}\n			<span>{{result.meta.retakes}} {{config.get_translation(\'remaining\')}}</span>\n		</button>	\n	</div>\n	<p *ngIf="fullresult.error" [innerHtml]="fullresult.error"></p>\n	<div *ngIf="fullresult.length && site_result">\n		\n		\n		<ion-grid *ngIf="fullresult.length > 0 && !fullresult[\'error\']">\n			<ion-row>\n				<ion-col col-12 col-md-6 *ngFor="let result of fullresult">\n					<ion-card class="question_card">\n						<p class="marks">{{result.value.marks}}/{{result.value.max_marks}}</p>\n						<ion-card-title>\n							<ion-row>\n								<ion-col col-10>\n									<p [innerHtml]="result.value.content"></p>\n								</ion-col>\n								<ion-col col-2>\n									\n								</ion-col>\n							</ion-row>\n						</ion-card-title>\n						<ion-card-content>\n							<div [ngClass]="{\'correct\':(result.value.marks>0), \'incorrect\':(result.value.marks==0) }">\n								<ion-label>{{config.get_translation(\'marked_answer\')}}</ion-label>\n								<div [innerHtml]="result.value.marked_answer"></div>\n							</div>\n							<div class="correct_answer">\n								<ion-label>{{config.get_translation(\'correct_answer\')}}</ion-label>\n								 <div [innerHtml]="result.value.correct_answer"></div>\n							</div>\n							<div class="answer_explanation">\n								<ion-label>{{config.get_translation(\'explanation\')}} </ion-label>\n								<div [innerHtml]="result.value.explaination"></div>\n							</div>\n						</ion-card-content>\n					</ion-card>\n				</ion-col>\n			</ion-row>\n		</ion-grid>\n	</div>\n</ion-content>'/*ion-inline-end:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\pages\result\result.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_3__services_config__["a" /* ConfigService */],
            __WEBPACK_IMPORTED_MODULE_2__services_users__["a" /* UserService */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* LoadingController */]])
    ], ResultPage);
    return ResultPage;
}());

//# sourceMappingURL=result.js.map

/***/ }),

/***/ 464:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return WalletPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_config__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__services_wallet__ = __webpack_require__(89);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__ionic_storage__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






var WalletPage = /** @class */ (function () {
    function WalletPage(walletService, config, toast, nav, storage) {
        this.walletService = walletService;
        this.config = config;
        this.toast = toast;
        this.nav = nav;
        this.storage = storage;
        this.transactions = [];
        this.walletTabslist = [];
        this.products = [];
        this.wallettransactionstab = 0;
        this.noMoreTransactionsAvailable = false;
        this.transactionpaged = 1;
        this.transactiontype = 'all';
        this.walletTabslist = [
            { 'name': 'Dashboard', 'value': 'dashbord', 'icon': 'md-speedometer' },
            { 'name': 'Transactions', 'value': 'transactions', 'icon': 'md-analytics' }
        ];
    }
    WalletPage.prototype.ngOnInit = function () {
        var _this = this;
        this.walletService.getProducts().then(function (products) {
            console.log('wallet products');
            if (products) {
                _this.walletService.products = products;
                _this.products = products;
            }
            console.log('wallet products');
            console.log(_this.products);
        })
            .catch(function (err) {
            console.log(err);
        });
        this.products.push({
            'productId': 'sample',
            'price': '10',
            'title': 'Sample Product',
            'description': 'Sample product',
        });
        this.walletService.getWallet(true).subscribe(function (res) {
            if (res) {
                _this.wallet = res;
            }
        });
    };
    WalletPage.prototype.onTabChanged = function () {
        var index = this.walletTabs.getActiveIndex();
        this.walletSlides.slideTo(index, 500);
    };
    WalletPage.prototype.onSlideChanged = function () {
        var _this = this;
        var index = this.walletSlides.getActiveIndex();
        this.walletTabs.slideTo(index, 500);
        if (index) {
            console.log('fetching transactions');
            this.walletService.getTransactions({ force: false, type: 'all', paged: 1 }).subscribe(function (res) {
                console.log('Got transactions');
                if (res) {
                    _this.transactions = _this.walletService.mergeTransactions(_this.transactions, res);
                    _this.transactions.sort(function (a, b) {
                        if (a.date > b.date)
                            return -1;
                        if (a.date < b.date)
                            return 1;
                        return 0;
                    });
                    console.log('Sorted transactions');
                    console.log(_this.transactions);
                }
            });
        }
    };
    WalletPage.prototype.selectedTab = function (index) {
        this.walletSlides.slideTo(index, 500);
    };
    WalletPage.prototype.doRefresh = function (refresher) {
        var _this = this;
        var index = this.walletSlides.getActiveIndex();
        console.log(index);
        if (index) {
            this.walletService.getTransactions({ force: true, type: this.transactiontype, paged: this.transactionpaged }).subscribe(function (res) {
                if (res) {
                    _this.transactions = res;
                }
                refresher.complete();
            });
        }
        else {
            this.walletService.getWallet(true).subscribe(function (res) {
                if (res) {
                    _this.transactions = _this.walletService.mergeTransactions(_this.transactions, res);
                }
            });
            this.walletService.getProducts().then(function (products) {
                console.log(products);
                if (products) {
                    _this.walletService.products = products;
                    _this.products = products;
                    refresher.complete();
                }
            })
                .catch(function (err) {
                console.log(err);
                refresher.complete();
            });
        }
    };
    WalletPage.prototype.gettimediff = function (time) {
        return (this.config.timestamp - time);
    };
    WalletPage.prototype.getWalletAmount = function () {
        return this.walletService.wallet.amount;
    };
    WalletPage.prototype.restorePurchases = function () {
        this.walletService.restorePurchases().then(function (purchases) {
            console.log(JSON.stringify(purchases));
        })
            .catch(function (err) {
            console.log(err);
        });
    };
    WalletPage.prototype.showTransactions = function (type) {
        this.transactiontype = type;
        this.transactions = this.walletService.transactions;
        this.transactionpaged = 1;
        if (type == 'credit') {
            this.wallettransactionstab = 1;
        }
        if (type == 'debit') {
            this.wallettransactionstab = 2;
        }
        if (type == 'all') {
            this.wallettransactionstab = 0;
        }
        if (this.transactions.length && type != 'all') {
            this.transactions = this.transactions.filter(function (item) {
                return item.status.toLowerCase().indexOf(type) > -1;
            });
        }
    };
    WalletPage.prototype.loadMoreTransactions = function (event) {
        var _this = this;
        this.transactionpaged++;
        this.walletService.getTransactions({ force: false, type: this.transactiontype, paged: this.transactionpaged }).subscribe(function (res) {
            if (res) {
                _this.transactions = _this.walletService.mergeTransactions(_this.transactions, res);
                _this.transactions.sort(function (a, b) {
                    if (a.date > b.date)
                        return -1;
                    if (a.date < b.date)
                        return 1;
                    return 0;
                });
                if (_this.walletService.transactions.length >= _this.config.trackComponents('transactions')) {
                    _this.noMoreTransactionsAvailable = true;
                }
            }
            event.complete();
        });
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('WalletTabs'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["p" /* Slides */])
    ], WalletPage.prototype, "walletTabs", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('WalletSlides'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["p" /* Slides */])
    ], WalletPage.prototype, "walletSlides", void 0);
    WalletPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-wallet',template:/*ion-inline-start:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\pages\wallet\wallet.html"*/'<ion-header>\n\n  <ion-navbar>\n\n	  <ion-slides dir="{{config.settings.rtl ? \'rtl\' : undefined }}" #WalletTabs id="wallettabs" spaceBetween="0" slidesPerView="2" (ionSlideDidChange)="onTabChanged()">\n		    <ion-slide *ngFor="let tab of walletTabslist; let i=index;" (click)="selectedTab(i)">\n		    	<div class="wallet_tab">\n		    		<ion-icon [name]=tab.icon></ion-icon>\n		        	<span>{{tab.name}}</span>\n		    	</div>\n		    </ion-slide>\n		</ion-slides>\n	</ion-navbar>\n</ion-header>\n<ion-content>\n	<ion-refresher (ionRefresh)="doRefresh($event)">\n    	<ion-refresher-content pullingText="{{config.get_translation(\'pull_to_refresh\')}}"\n      pullingIcon="arrow-dropdown"\n      refreshingSpinner="circles"\n      refreshingText="{{config.get_translation(\'refreshing\')}}"></ion-refresher-content>\n	</ion-refresher>\n    <ion-slides dir="{{config.settings.rtl ? \'rtl\' : undefined }}" id="walletslides" #WalletSlides (ionSlideDidChange)="onSlideChanged()">\n        <ion-slide *ngFor="let tab of walletTabslist; let i=index;">\n        	<div class="walletslidecontent" padding *ngIf="tab.value == \'dashbord\' ">\n\n        		<h3 class="heading"><span>Current Balance</span></h3>\n        		<h1 [innerHtml]="walletService.wallet?.amount"></h1>\n	        	\n	        	<h3 class="heading"><span>Add Money</span><span>Add points to your account</span></h3>\n\n	        	<div *ngIf="products.length">\n	        		<ion-slides dir="{{config.settings.rtl ? \'rtl\' : undefined }}" id="wallettopup" spaceBetween="0" slidesPerView="2">\n					    <ion-slide *ngFor="let product of products; let i=index;" (click)="walletService.buyProduct(product)">\n					    	<ion-card class="recharge">\n					    		<svg version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 58.007 58.007" style="enable-background:new 0 0 58.007 58.007;" xml:space="preserve"><g id="XMLID_22_"><path id="XMLID_143_" style="fill:#FCC62D;" d="M52.003,29.211v1.238c0,6.932-11.641,12.551-26,12.551c-7.926,0-15.019-1.714-19.788-4.414C7.823,44.831,18.751,50,32.003,50c14.359,0,26-6.068,26-13C58.003,33.952,55.747,31.266,52.003,29.211"></path><path id="XMLID_142_" style="fill:#E4AF18;" d="M32.003,50c-14.359,0-26-6.068-26-13v8.448c0,6.932,11.641,12.552,26,12.552s26-5.62,26-12.552V37C58.003,43.932,46.362,50,32.003,50"></path><path id="XMLID_141_" style="fill:#CE9912;" d="M9.003,51.349c0.59,0.539,1.259,1.055,2,1.545v-8.291c-0.741-0.51-1.41-1.045-2-1.603V51.349z"></path><path id="XMLID_140_" style="fill:#CE9912;" d="M53.003,44.603v8.291c0.741-0.489,1.41-1.006,2-1.545V43C54.414,43.558,53.745,44.093,53.003,44.603"></path><path id="XMLID_139_" style="fill:#CE9912;" d="M13.003,54.06c0.632,0.327,1.3,0.636,2,0.929v-8.193c-0.7-0.308-1.368-0.633-2-0.975V54.06z"></path><path id="XMLID_138_" style="fill:#CE9912;" d="M49.003,54.988c0.7-0.292,1.368-0.602,2-0.929V45.82c-0.632,0.342-1.3,0.668-2,0.975V54.988z"></path><path id="XMLID_137_" style="fill:#CE9912;" d="M17.003,55.745c0.646,0.221,1.313,0.427,2,0.619V48.25c-0.687-0.204-1.354-0.423-2-0.656V55.745z"></path><path id="XMLID_136_" style="fill:#CE9912;" d="M45.003,56.364c0.687-0.192,1.354-0.398,2-0.619v-8.151c-0.646,0.233-1.313,0.452-2,0.656V56.364z"></path><path id="XMLID_135_" style="fill:#CE9912;" d="M22.003,57.084c0.653,0.132,1.321,0.25,2,0.355v-8.044c-0.679-0.113-1.347-0.239-2-0.379V57.084z"></path><path id="XMLID_134_" style="fill:#CE9912;" d="M40.003,57.439c0.679-0.106,1.347-0.224,2-0.355v-8.069c-0.653,0.14-1.321,0.266-2,0.38V57.439z"></path><path id="XMLID_133_" style="fill:#CE9912;" d="M28.003,57.899c0.658,0.049,1.326,0.083,2,0.107v-8.003c-0.674-0.026-1.342-0.062-2-0.115V57.899z"></path><path id="XMLID_132_" style="fill:#CE9912;" d="M34.003,58.007c0.674-0.025,1.342-0.058,2-0.107v-8.012c-0.658,0.053-1.326,0.089-2,0.116V58.007z"></path><path id="XMLID_131_" style="fill:#E4AF18;" d="M26.003,34.993c-14.359,0-26-6.068-26-13v8.448c0,6.932,11.641,12.552,26,12.552s26-5.62,26-12.552v-8.448C52.003,28.925,40.362,34.993,26.003,34.993"></path><path id="XMLID_130_" style="fill:#CE9912;" d="M3.003,36.342c0.59,0.539,1.259,1.055,2,1.545v-8.291c-0.741-0.51-1.41-1.045-2-1.602V36.342z"></path><path id="XMLID_129_" style="fill:#CE9912;" d="M47.003,29.596v8.291c0.741-0.489,1.41-1.006,2-1.545v-8.349C48.414,28.551,47.745,29.086,47.003,29.596"></path><path id="XMLID_128_" style="fill:#CE9912;" d="M7.003,39.053c0.632,0.327,1.3,0.636,2,0.929v-8.193c-0.7-0.308-1.368-0.633-2-0.975V39.053z"></path><path id="XMLID_127_" style="fill:#CE9912;" d="M43.003,39.981c0.7-0.292,1.368-0.601,2-0.929v-8.239c-0.632,0.342-1.3,0.668-2,0.975V39.981z"></path><path id="XMLID_126_" style="fill:#CE9912;" d="M11.003,40.738c0.646,0.221,1.313,0.427,2,0.619v-8.114c-0.687-0.204-1.354-0.423-2-0.656V40.738z"></path><path id="XMLID_125_" style="fill:#CE9912;" d="M39.003,41.357c0.687-0.192,1.354-0.398,2-0.619v-8.151c-0.646,0.233-1.313,0.452-2,0.656V41.357z"></path><path id="XMLID_124_" style="fill:#CE9912;" d="M16.003,42.077c0.653,0.132,1.321,0.25,2,0.355v-8.044c-0.679-0.113-1.347-0.239-2-0.379V42.077z"></path><path id="XMLID_123_" style="fill:#CE9912;" d="M34.003,42.433c0.679-0.106,1.347-0.224,2-0.355v-8.069c-0.653,0.14-1.321,0.266-2,0.38V42.433z"></path><path id="XMLID_122_" style="fill:#CE9912;" d="M22.003,42.893c0.658,0.049,1.326,0.083,2,0.107v-8.003c-0.674-0.026-1.342-0.062-2-0.115V42.893z"></path><path id="XMLID_121_" style="fill:#CE9912;" d="M28.003,43c0.674-0.025,1.342-0.058,2-0.107v-8.012c-0.658,0.053-1.326,0.089-2,0.116V43z"></path><path id="XMLID_120_" style="fill:#FFD949;" d="M51.32,33.302C48.643,38.858,38.329,43,26.003,43c-4.604,0-8.926-0.58-12.677-1.593c3.628,2.463,10.085,4.559,18.677,4.559c13.682,0,22-5.311,22-8.966C54.003,35.78,53.064,34.486,51.32,33.302"></path><path id="XMLID_119_" style="fill:#FFD949;" d="M31.003,33c-14.359,0-26-5.62-26-12.552v-5.652c-3.141,1.969-5,4.438-5,7.204c0,6.932,11.641,13,26,13c6.914,0,13.192-1.409,17.849-3.642C40.061,32.401,35.678,33,31.003,33"></path><path id="XMLID_118_" style="fill:#E4AF18;" d="M31.003,24.993c-14.359,0-26-6.068-26-13v8.448c0,6.932,11.641,12.552,26,12.552c14.359,0,26-5.62,26-12.552v-8.448C57.003,18.925,45.362,24.993,31.003,24.993"></path><path id="XMLID_117_" style="fill:#CE9912;" d="M8.003,26.342c0.59,0.539,1.259,1.055,2,1.545v-8.291c-0.741-0.51-1.41-1.045-2-1.602V26.342z"></path><path id="XMLID_116_" style="fill:#CE9912;" d="M52.003,19.596v8.291c0.741-0.489,1.41-1.006,2-1.545v-8.349C53.414,18.551,52.745,19.086,52.003,19.596"></path><path id="XMLID_115_" style="fill:#CE9912;" d="M12.003,29.053c0.632,0.327,1.3,0.636,2,0.929v-8.193c-0.7-0.308-1.368-0.633-2-0.975V29.053z"></path><path id="XMLID_114_" style="fill:#CE9912;" d="M48.003,29.981c0.7-0.292,1.368-0.601,2-0.929v-8.239c-0.632,0.342-1.3,0.668-2,0.975V29.981z"></path><path id="XMLID_113_" style="fill:#CE9912;" d="M16.003,30.738c0.646,0.221,1.313,0.427,2,0.619v-8.114c-0.687-0.204-1.354-0.423-2-0.656V30.738z"></path><path id="XMLID_112_" style="fill:#CE9912;" d="M44.003,31.357c0.687-0.192,1.354-0.398,2-0.619v-8.151c-0.646,0.233-1.313,0.452-2,0.656V31.357z"></path><path id="XMLID_111_" style="fill:#CE9912;" d="M21.003,32.077c0.653,0.132,1.321,0.25,2,0.355v-8.044c-0.679-0.113-1.347-0.239-2-0.379V32.077z"></path><path id="XMLID_110_" style="fill:#CE9912;" d="M39.003,32.433c0.679-0.106,1.347-0.224,2-0.355v-8.069c-0.653,0.14-1.321,0.266-2,0.38V32.433z"></path><path id="XMLID_109_" style="fill:#CE9912;" d="M27.003,32.893c0.658,0.049,1.326,0.083,2,0.107v-8.003c-0.674-0.026-1.342-0.062-2-0.115V32.893z"></path><path id="XMLID_108_" style="fill:#CE9912;" d="M33.003,33c0.674-0.025,1.342-0.058,2-0.107v-8.012c-0.658,0.053-1.326,0.089-2,0.116V33z"></path><path id="XMLID_107_" style="fill:#FCC62D;" d="M57.003,12c0,6.932-11.641,13-26,13c-14.359,0-26-6.068-26-13c0-6.932,11.641-12,26-12C45.362,0,57.003,5.068,57.003,12"></path><path id="XMLID_106_" style="fill:#FFD949;" d="M31.003,20.966c-13.682,0-22-5.31-22-8.966c0-3.655,8.318-9,22-9c13.682,0,22,5.345,22,9C53.003,15.656,44.685,20.966,31.003,20.966"></path><path id="XMLID_105_" style="fill:#F0C41B;" d="M37.784,13.359c0.82-0.174,1.301-0.68,1.124-1.257l-0.19-0.616c-0.139-0.453-0.68-0.831-1.343-1.019c-0.902-1.927-3.202-2.625-6.618-2.625c-0.162,0-0.32,0.004-0.476,0.01c-1.166,0.048-2.329-0.064-3.236-0.396c-0.37-0.135-0.671-0.276-0.87-0.423c-0.09-0.066-0.308-0.024-0.308,0.06c0,0.146,0.011,0.319,0.043,0.511c0.124,0.747-0.024,0.635-0.762,1.38c-0.428,0.434-0.769,0.934-1.016,1.486c-0.659,0.189-1.197,0.566-1.336,1.017l-0.19,0.616c-0.177,0.577,0.304,1.083,1.124,1.257c0.234,1.476,1.237,2.772,3.424,3.486l-0.12,1.037c-0.032,0.277-0.271,0.533-0.619,0.659l-4.411,1.592C24.58,20.674,27.516,21,30.757,21c3.196,0,6.095-0.317,8.645-0.842l-4.315-1.613c-0.341-0.128-0.575-0.382-0.606-0.654l-0.121-1.045C36.547,16.132,37.55,14.835,37.784,13.359"></path></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g></svg>\n					    		<h3 class="heading"><span [innerHtml]="product.price"></span><span [innerHtml]="product.description"></span></h3>\n				    			\n					    	</ion-card>\n					    </ion-slide>\n					</ion-slides>\n	        	</div>\n	        	<div *ngIf="!products.length">\n	        		<div class="message" [innerHtml]="config.get_translation(\'wallet_no_products\')"></div>\n	        	</div>\n        	</div>\n        	<div class="walletslidecontent" padding *ngIf="tab.value == \'transactions\' ">\n        		<ion-grid class="button-group" *ngIf="transactions.length || transactiontype != \'all\'">\n				  	<ion-row> \n				    	<ion-col col-4>\n				      		<button ion-button [outline]="wallettransactionstab == 0?null:\'\'" block (click)="showTransactions(\'all\')">{{config.get_translation(\'all\')}}</button>\n			    		</ion-col>\n				    	<ion-col col-4>\n				      		<button ion-button [outline]="wallettransactionstab == 1?null:\'\'" block (click)="showTransactions(\'credit\')">{{config.get_translation(\'credit\')}}</button>\n				    	</ion-col>\n			    		<ion-col col-4>\n				      		<button ion-button [outline]="wallettransactionstab == 2?null:\'\'" block (click)="showTransactions(\'debit\')">{{config.get_translation(\'debit\')}}</button>\n			    		</ion-col>\n				  	</ion-row>\n				</ion-grid>\n				<div id="transaction_list">\n	        		<ion-list  *ngIf="transactions.length">\n	    				<ion-item *ngFor="let transaction of transactions">\n	    					<div class="transaction">\n	    						<span [class]="transaction.status">{{transaction.status}}</span>\n	    						<span><friendlytime [time]="gettimediff(transaction.date)"></friendlytime></span>\n	    						<h2>{{transaction.points}}<span>{{transaction.amount}}</span></h2>\n								<p [innerHtml]="transaction.description"></p>\n							</div>\n	    				</ion-item>\n	        		</ion-list>\n	        		<div *ngIf="!transactions.length">\n	        			<div class="message" [innerHtml]="config.get_translation(\'wallet_no_transactions\')"></div>\n	        		</div>\n        		</div>\n        	</div>\n    	</ion-slide>\n	</ion-slides>\n	<ion-infinite-scroll *ngIf="!noMoreTransactionsAvailable" (ionInfinite)="loadMoreTransactions($event)">\n       <ion-infinite-scroll-content></ion-infinite-scroll-content>\n    </ion-infinite-scroll>\n\n</ion-content>\n'/*ion-inline-end:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\pages\wallet\wallet.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_3__services_wallet__["a" /* WalletService */],
            __WEBPACK_IMPORTED_MODULE_2__services_config__["a" /* ConfigService */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* ToastController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_4__ionic_storage__["b" /* Storage */]])
    ], WalletPage);
    return WalletPage;
}());

//# sourceMappingURL=wallet.js.map

/***/ }),

/***/ 465:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ChatPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_config__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__services_chat__ = __webpack_require__(87);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__ionic_storage__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__message_message__ = __webpack_require__(121);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__angular_forms__ = __webpack_require__(17);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};








var ChatPage = /** @class */ (function () {
    function ChatPage(config, chatService, toastCtrl, storage, navCtrl, navParams, loadingCtrl, formBuilder) {
        this.config = config;
        this.chatService = chatService;
        this.toastCtrl = toastCtrl;
        this.storage = storage;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.loadingCtrl = loadingCtrl;
        this.formBuilder = formBuilder;
        this.chatTabslist = [];
        this.myChatsVal = [];
        this.messagePage = __WEBPACK_IMPORTED_MODULE_6__message_message__["a" /* MessagePage */];
        this.removeLoadMore = 1; /* load more toggle untill DATA WILL NOT GET */
        this.to_search_user = '';
        this.send_chat_obj = {};
        this.non_logged_in_exist = 0; // for non logged in form toggle
        this.from_firebase = 1; /*toggle search member firebase and local users */
        this.contact = formBuilder.group({
            chat_name: [''],
            chat_email: new __WEBPACK_IMPORTED_MODULE_7__angular_forms__["b" /* FormControl */]('', __WEBPACK_IMPORTED_MODULE_7__angular_forms__["i" /* Validators */].compose([
                __WEBPACK_IMPORTED_MODULE_7__angular_forms__["i" /* Validators */].required,
                __WEBPACK_IMPORTED_MODULE_7__angular_forms__["i" /* Validators */].pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')
            ])),
            chat_message: [''],
        });
        this.chatTabslist = [
            {
                'key': 'mychats',
                'label': this.config.get_translation('mychats'),
                'icon': 'ios-chatbubbles'
            },
            {
                'key': 'members',
                'label': this.config.get_translation('members'),
                'icon': 'md-person-add'
            }
        ];
    }
    /*
    new FormControl('', Validators.compose([
        Validators.required,
        Validators.maxLength(25),
        Validators.minLength(5),
        Validators.pattern('^(?=.*[a-zA-Z])(?=.*[0-9])[a-zA-Z0-9]+$')
    ])),
    */
    ChatPage.prototype.ngOnInit = function () {
        var _this = this;
        var loading = this.loadingCtrl.create({
            content: '<img src="assets/images/bubbles.svg">',
            duration: 3000,
            spinner: 'hide',
            showBackdrop: true,
        });
        loading.present();
        if (this.config.isLoggedIn) {
            this.chatService.fetchMyChats('ngoninit', {}).then(function (mychats) {
                loading.dismiss();
            });
        }
        else {
            this.non_logged_in_exist = 0;
            this.chatService.fetchMyChats('ngoninit', {}).then(function (mychats) {
                _this.non_logged_in_exist = 1;
                loading.dismiss();
            });
        }
    };
    ChatPage.prototype.selectedTab = function (index) {
        this.chatSlides.slideTo(index, 500);
    };
    ChatPage.prototype.onSlideChanged = function () {
        var index = this.chatSlides.getActiveIndex();
        this.chatTabs.slideTo(index, 500);
        if (this.chatTabslist[index]) {
            switch (this.chatTabslist[index].key) {
                case 'mychats':
                    // console.log('mychats');
                    break;
                case 'chat':
                    //console.log('chat');
                    break;
                case 'members':
                    this.online_users();
                    // console.log('members');
                    break;
                default:
                    //console.log('default');
                    break;
            }
        }
    };
    ChatPage.prototype.onTabChanged = function () {
        var index = this.chatTabs.getActiveIndex();
        this.chatSlides.slideTo(index, 500);
    };
    ChatPage.prototype.loadMoreChats = function (event) {
        var _this = this;
        this.chatService.removeLoadMore = 0;
        this.chatService.fetchMyChats('loadmorechats', {}).then(function (mychats) {
            _this.chatService.removeLoadMore = 1;
            event.complete();
        });
    };
    ChatPage.prototype.doRefresh = function (refresher) {
        refresher.complete();
        this.chatService.fetchMyChats('doRefresh', {}).then(function (mychats) {
        });
    };
    ChatPage.prototype.goToNextPage = function (chat) {
        this.navCtrl.push(this.messagePage, { 'chat_key': chat.key });
    };
    ChatPage.prototype.online_users = function () {
        var _this = this;
        this.from_firebase = 1;
        var loading = this.loadingCtrl.create({
            content: '<img src="assets/images/bubbles.svg">',
            duration: 15000,
            spinner: 'hide',
            showBackdrop: true,
        });
        loading.present();
        //make api hit to search users
        this.chatService.search_online_members().then(function (all_users) {
            _this.all_searched_users = all_users;
            _this.backup_all_searched_users = all_users;
            loading.dismiss();
        });
    };
    ChatPage.prototype.doRefresh_members = function (refresher) {
        var _this = this;
        this.from_firebase = 1;
        refresher.complete();
        var loading = this.loadingCtrl.create({
            content: '<img src="assets/images/bubbles.svg">',
            duration: 15000,
            spinner: 'hide',
            showBackdrop: true,
        });
        loading.present();
        //make api hit to search users
        this.chatService.search_online_members().then(function (all_users) {
            loading.dismiss();
            _this.all_searched_users = all_users;
            _this.backup_all_searched_users = all_users;
        });
    };
    /* Data format of log form
          let user={
            'email':'testEmail',
            'image':'assets/images/chat_user.png',
            'id':1,
            'name':'testName',
          };
          let data={'chat_key':'-LdbpRnIJ_X25U9oYGUx','user':user};
          this.storage.set('non_logged_in',data);
          this.navCtrl.push(this.messagePage,data);
    */
    ChatPage.prototype.logForm = function () {
        var _this = this;
        var loading = this.loadingCtrl.create({
            content: '<img src="assets/images/bubbles.svg">',
            duration: 5000,
            spinner: 'hide',
            showBackdrop: true,
        });
        loading.present();
        this.chatService.addNewChat(this.contact.value).then(function (data) {
            _this.non_logged_in_exist = 1; // message form toggle
            loading.dismiss();
            var toast = _this.toastCtrl.create({
                message: _this.config.get_translation('chat_initiated'),
                duration: 3000,
                position: 'bottom'
            });
            toast.present();
            /* data= {chat_key:xyz,user:{}}   'data' format*/
            _this.storage.set('non_logged_in', data);
            _this.chatService.set_current_user().then(function (current_user_id) {
            });
            _this.navCtrl.push(_this.messagePage, data);
        });
    };
    /*
    sortMyChats(chats){
        return chats.sort((a,b)=>{ return a.lastUpdate - b.lastUpdate});
    }
    */
    ChatPage.prototype.start_new_chat = function () {
        var _this = this;
        var loading = this.loadingCtrl.create({
            content: '<img src="assets/images/bubbles.svg">',
            duration: 5000,
            spinner: 'hide',
            showBackdrop: true,
        });
        loading.present();
        //get user info then proceed to create new chat for user
        this.chatService.set_current_user().then(function (current_user_id) {
            var user = _this.config.user;
            var args = {
                'type': 'general',
                'primary_id': '0'
            };
            _this.chatService.start_new_chat(user, args).then(function (response) {
                loading.dismiss();
                var data = {
                    'chat_key': response.key,
                    'user': user
                };
                _this.navCtrl.push(_this.messagePage, data);
            });
        });
    };
    ChatPage.prototype.start_new_chat_with_members = function (member) {
        var _this = this;
        var member_id = member.id; // initialized member id to start chat
        var loading = this.loadingCtrl.create({
            content: '<img src="assets/images/bubbles.svg">',
            duration: 5000,
            spinner: 'hide',
            showBackdrop: true,
        });
        loading.present();
        var user = this.config.user;
        var args = {
            'type': 'general',
            'primary_id': '0'
        };
        this.chatService.start_new_chat_with_member(user, args, member_id).then(function (response) {
            loading.dismiss();
            var data = {
                'chat_key': response.key,
                'user': user
            };
            _this.navCtrl.push(_this.messagePage, data);
        });
    };
    // getChatLastTime(time){
    // 	return Math.floor((new Date().getTime() - time)/1000);
    // }
    /* filter firebase online user*/
    ChatPage.prototype.user_search = function (args) {
        var $this = this;
        var result = $this.all_searched_users.filter(function (user) { return user.name.search($this.to_search_user) >= 0 ? 1 : 0; });
        $this.backup_all_searched_users = result;
    };
    ChatPage.prototype.search_user_from_directory = function () {
        var $this = this;
        this.from_firebase = 0;
        var loading = this.loadingCtrl.create({
            content: '<img src="assets/images/bubbles.svg">',
            duration: 5000,
            spinner: 'hide',
            showBackdrop: true,
        });
        loading.present();
        /*make api hit  when initials length > 3*/
        if ($this.to_search_user.length > 3) {
            $this.chatService.search_user_from_directory($this.to_search_user).then(function (result) {
                loading.dismiss();
                $this.backup_all_searched_users = result['users'];
            });
        }
        else {
            /* dismiss loading and make a toast controller */
            var toast = this.toastCtrl.create({
                message: this.config.get_translation('Lenght_greater_than3'),
                duration: 3000,
                position: 'bottom'
            });
            toast.present();
            loading.dismiss();
        }
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('ChatTabs'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["p" /* Slides */])
    ], ChatPage.prototype, "chatTabs", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('ChatSlides'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["p" /* Slides */])
    ], ChatPage.prototype, "chatSlides", void 0);
    ChatPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-chat',template:/*ion-inline-start:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\pages\chat\chat.html"*/'<ion-header>\n    <ion-navbar  *ngIf="config.isLoggedIn">\n      <ion-slides dir="{{config.settings.rtl ? \'rtl\' : undefined }}" #ChatTabs id="chattabs" spaceBetween="0" slidesPerView="2" (ionSlideDidChange)="onTabChanged()" *ngIf="config.isLoggedIn">\n            <ion-slide *ngFor="let tab of chatTabslist; let i=index;" (click)="selectedTab(i)">\n                <div class="chat_tab">\n                    <ion-icon [name]=tab.icon></ion-icon>\n                    <span>{{tab.label}}</span>\n                </div>\n            </ion-slide>\n        </ion-slides>\n    </ion-navbar>\n</ion-header>\n     \n<ion-content padding>  \n     <div *ngIf="config.isLoggedIn">\n     \n         <ion-slides dir="{{config.settings.rtl ? \'rtl\' : undefined }}" id="chatslides" #ChatSlides (ionSlideDidChange)="onSlideChanged()">\n             <ion-slide *ngFor="let tab of chatTabslist; let i=index;">\n                    \n                    <div *ngIf="tab.key == \'mychats\' ">\n                              <ion-refresher (ionRefresh)="doRefresh($event)">\n            						        <ion-refresher-content pullingText="{{config.get_translation(\'pull_to_refresh\')}}"\n            						      pullingIcon="arrow-dropdown"\n            						      refreshingSpinner="circles"\n            						      refreshingText="{{config.get_translation(\'refreshing\')}}"></ion-refresher-content>\n            					</ion-refresher>\n                              \n                        	<ion-buttons *ngIf="tab.key == \'mychats\' ">\n    			                <button ion-button (click)="start_new_chat()" class="start_chat">{{config.get_translation(\'start_new_chat\')}}</button>\n    			            </ion-buttons>\n                             <div *ngIf="chatService.myChats.length">\n                                   <div *ngFor="let chat of chatService.myChats" >\n                                     <ChatBlock [chat]="chat"></ChatBlock>\n                                   </div>\n                          </div>\n                 \n                    </div>\n\n                    \n\n                    <div padding *ngIf="tab.key == \'members\' ">\n                      <ion-refresher (ionRefresh)="doRefresh_members($event)">\n                          <ion-refresher-content pullingText="{{config.get_translation(\'pull_to_refresh\')}}"\n                        pullingIcon="arrow-dropdown"\n                        refreshingSpinner="circles"\n                        refreshingText="{{config.get_translation(\'refreshing\')}}"></ion-refresher-content>\n                      </ion-refresher>\n                        <ion-item>\n                            <ion-input type="text" name="search_user" [(ngModel)]="to_search_user" [placeholder]="config.get_translation(\'type_here\')" (keyup)="user_search()"\n                               ></ion-input>\n                        </ion-item>\n                        <div *ngIf="from_firebase">\n                        	<p  class="user_chat_message" [innerHtml]="config.get_translation(\'online_user_to_initiate_new_chat\')"></p>\n	                        <div  *ngIf="backup_all_searched_users && backup_all_searched_users.length">\n	                            <div *ngFor="let user of backup_all_searched_users">\n\n                      <div (click)="start_new_chat_with_members(user)">\n								       <div class="user_online">\n								           <img [src]="user.image" />    \n								            <div>\n								              <div class="user_online_content">\n								              	<p [innerHtml]="user.name"></p>\n								              </div>\n								            </div>\n								       </div>\n								     </div> \n	                            </div>\n	                        </div>\n	                    </div>\n\n                        <div *ngIf="!from_firebase">\n                        	<p class="user_chat_message" [innerHtml]="config.get_translation(\'user_from_site_you_can_not_chat\')"></p>\n	                        <div  *ngIf="backup_all_searched_users && backup_all_searched_users.length">\n		                            <div *ngFor="let user of backup_all_searched_users">\n\n	                      <div>\n    									       <div class="user_online">\n    									           <img [src]="user.image" />    \n    									            <div>\n    									              <div class="user_online_content">\n    									              	<p [innerHtml]="user.name"></p>\n    									              </div>\n    									            </div>\n    									       </div>\n									     </div> \n		                            </div>\n		                        </div>\n	                        </div>\n                        <ion-buttons >\n                          <button ion-button class="start_chat" (click)="search_user_from_directory()">{{config.get_translation(\'search_user_from_website\')}}</button>\n                	   </ion-buttons>  \n                    </div>\n\n\n\n                    <div  padding *ngIf="tab.key == \'chat\' ">\n                         <ion-card  >\n                              <ion-card-content>\n                                 Current Chat\n                              </ion-card-content>\n                         </ion-card>   \n                    </div>\n\n\n\n                    <div  padding *ngIf="tab.key == \'notification\' ">\n                         <ion-card>\n                              <ion-card-content>\n                                 notification\n                              </ion-card-content>\n                         </ion-card>   \n                    </div>\n\n\n             </ion-slide>\n                 <ion-infinite-scroll (ionInfinite)="loadMoreChats($event)" position="bottom" *ngIf="removeLoadMore==1">\n                           <ion-infinite-scroll-content></ion-infinite-scroll-content>\n                </ion-infinite-scroll>\n         </ion-slides>\n\n     </div>\n     \n     <div *ngIf="!config.isLoggedIn">\n\n          <div *ngIf="non_logged_in_exist==0">\n         \n              <div [innerHtml]="config.chat.welcome_text"></div>\n              <div class="chat_messageform">\n                      <form [formGroup]="contact" (ngSubmit)="logForm()">\n                        <ion-item>\n                            <ion-label floating>{{config.get_translation(\'chat_name\')}}</ion-label>\n                            <ion-input type="text" formControlName="chat_name"></ion-input>\n                        </ion-item>\n                        <ion-item>\n                            <ion-label floating>{{config.get_translation(\'chat_email\')}}</ion-label>\n                            <ion-input type="text" formControlName="chat_email"></ion-input>\n                        </ion-item>\n                        <ion-item>\n                            <ion-label floating>{{config.get_translation(\'chat_message\')}}</ion-label>\n                            <ion-textarea formControlName="chat_message"></ion-textarea>\n                        </ion-item>\n                        <ion-item>\n                            <button ion-button type="submit" block [disabled]="!contact.valid">{{config.get_translation(\'start_chat\')}}</button>\n                        </ion-item>\n                    </form>  \n              </div>\n          </div>\n\n         <div *ngIf="non_logged_in_exist">\n            <ion-refresher (ionRefresh)="doRefresh_members($event)">\n                <ion-refresher-content pullingText="{{config.get_translation(\'pull_to_refresh\')}}"\n                    pullingIcon="arrow-dropdown"\n                    refreshingSpinner="circles"\n                    refreshingText="{{config.get_translation(\'refreshing\')}}"></ion-refresher-content>\n                  </ion-refresher>\n            <ion-buttons >\n                    <button ion-button (click)="start_new_chat()" class="start_chat">{{config.get_translation(\'start_new_chat\')}}</button>\n            </ion-buttons>  \n            \n            <div *ngIf="chatService.myChats.length">\n                 <div *ngFor="let chat of chatService.myChats" >\n                    <ChatBlock [chat]="chat"></ChatBlock>\n                 </div>\n            </div>\n\n        </div>\n\n     </div>\n</ion-content>\n\n\n\n\n\n      <!--     <div (click)="goToNextPage(chat)">\n                     <div class="mychat" *ngIf="chat.allMessages[0] && chat.allMessages[0].user">\n                         <img [src]="chat.allMessages[0].user.image" />    \n                          <div>\n                            <div class="mychat_header"> \n                               <friendlytime [time]="getChatLastTime(chat.allMessages[0].time)"></friendlytime>\n                              </div> \n                            <div class="mychat_content">\n                              <p [innerHtml]="chat.allMessages[0].message"></p>\n                            </div>\n                          </div>\n                     </div>\n                   </div> -->'/*ion-inline-end:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\pages\chat\chat.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2__services_config__["a" /* ConfigService */],
            __WEBPACK_IMPORTED_MODULE_3__services_chat__["a" /* ChatService */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* ToastController */],
            __WEBPACK_IMPORTED_MODULE_4__ionic_storage__["b" /* Storage */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* LoadingController */],
            __WEBPACK_IMPORTED_MODULE_7__angular_forms__["a" /* FormBuilder */]])
    ], ChatPage);
    return ChatPage;
}());

//# sourceMappingURL=chat.js.map

/***/ }),

/***/ 466:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return WishlistPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_config__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_wishlist__ = __webpack_require__(73);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var WishlistPage = /** @class */ (function () {
    function WishlistPage(wishlistService, config) {
        this.wishlistService = wishlistService;
        this.config = config;
    }
    WishlistPage.prototype.ionViewDidEnter = function () {
        console.log("FETCH");
        this.wishlistService.getWishList();
    };
    WishlistPage.prototype.ngOnInit = function () {
    };
    WishlistPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-wishlist',template:/*ion-inline-start:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\pages\wishlist\wishlist.html"*/'<ion-header>\n	<ion-navbar>\n	  	<ion-buttons start>\n	        <button ion-button menuToggle>\n	            <ion-icon name="md-menu"></ion-icon>\n	        </button>\n	    </ion-buttons>\n    	<ion-title>{{config.get_translation(\'wishlist_title\')}}</ion-title>\n  	</ion-navbar>\n\n</ion-header>\n\n\n<ion-content padding>\n	<div *ngIf="wishlistService.wishlist.length">\n		<ion-grid>\n			<ion-row>\n				<ion-col col-12 col-sm-6 col-md-4 col-lg-3 *ngFor="let lcourse of wishlistService.wishlist">\n					<ion-card>\n			            <courseblock [course]="lcourse"></courseblock>\n			    	</ion-card> \n		    	</ion-col>\n	    	</ion-row>\n    	</ion-grid>\n	</div>\n	<div class="message" *ngIf="!wishlistService.wishlist.length" [innerHtml]="config.get_translation(\'no_wishlist\')"></div>\n</ion-content>\n'/*ion-inline-end:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\pages\wishlist\wishlist.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2__services_wishlist__["a" /* WishlistService */],
            __WEBPACK_IMPORTED_MODULE_1__services_config__["a" /* ConfigService */]])
    ], WishlistPage);
    return WishlistPage;
}());

//# sourceMappingURL=wishlist.js.map

/***/ }),

/***/ 467:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return UpdatesPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_config__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__services_updates__ = __webpack_require__(468);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var UpdatesPage = /** @class */ (function () {
    function UpdatesPage(config, viewCtrl, updatesService) {
        this.config = config;
        this.viewCtrl = viewCtrl;
        this.updatesService = updatesService;
    }
    UpdatesPage.prototype.ngOnInit = function () {
        this.updatesService.getUpdates();
    };
    UpdatesPage.prototype.onClose = function () {
        this.viewCtrl.dismiss();
    };
    UpdatesPage.prototype.gettimediff = function (time) {
        return ((Math.floor(new Date().getTime() / 1000)) - time);
    };
    UpdatesPage.prototype.doRefresh = function (refresher) {
        this.config.getTracker();
        this.updatesService.getUpdates();
        setTimeout(function () {
            refresher.complete();
        }, 1000);
    };
    UpdatesPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-updates',template:/*ion-inline-start:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\pages\updates\updates.html"*/'<ion-header>\n  	<ion-navbar>\n        <ion-buttons start>\n          <button ion-button menuToggle>\n              <ion-icon name="md-menu"></ion-icon>\n          </button>\n      </ion-buttons>\n    	<ion-title>{{config.get_translation(\'update_title\')}}</ion-title>\n  	</ion-navbar> \n</ion-header>\n<ion-content padding>\n  <ion-refresher (ionRefresh)="doRefresh($event)">\n    <ion-refresher-content pullingText="{{config.get_translation(\'pull_to_refresh\')}}"\n      pullingIcon="arrow-dropdown"\n      refreshingSpinner="circles"\n      refreshingText="{{config.get_translation(\'refreshing\')}}"></ion-refresher-content>\n  </ion-refresher>\n  \n	<ion-list *ngIf="updatesService.updates.length">\n      <ion-list-header *ngIf="updatesService.updates.length > updatesService.readupdates.length">\n        {{config.get_translation(\'unread_notifications\')}}\n      </ion-list-header>\n      <div *ngFor="let update of updatesService.updates | orderBy: \'time\':true">\n  		<ion-item-sliding *ngIf="!updatesService.isRead(update)">\n    		<ion-item>\n      			<span><friendlytime [time]="gettimediff(update.time)"></friendlytime></span>\n				<div [innerHtml]="update.content"></div>\n    		</ion-item>\n    		<ion-item-options side="right">\n    			<button ion-button (click)="updatesService.markRead(update)">{{config.get_translation(\'update_read\')}}</button>\n    		</ion-item-options>\n  		</ion-item-sliding>\n      </div>\n      <ion-list-header>\n        {{config.get_translation(\'read_notifications\')}}\n      </ion-list-header>\n\n      <div *ngFor="let update of updatesService.readupdates | orderBy: \'time\':true">\n      <ion-item-sliding>\n        <ion-item>\n            <span><friendlytime [time]="gettimediff(update.time)"></friendlytime></span>\n        <div [innerHtml]="update.content"></div>\n        </ion-item>\n        <ion-item-options side="right">\n            <button ion-button (click)="updatesService.markUnread(update)">{{config.get_translation(\'update_unread\')}}</button>\n        </ion-item-options>\n      </ion-item-sliding>\n      </div>\n	</ion-list>\n	<div *ngIf="!updatesService.updates.length" class="message" [innerHtml]="config.get_translation(\'no_updates\')"></div>\n	\n</ion-content>\n'/*ion-inline-end:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\pages\updates\updates.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2__services_config__["a" /* ConfigService */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["r" /* ViewController */],
            __WEBPACK_IMPORTED_MODULE_3__services_updates__["a" /* UpdatesService */]])
    ], UpdatesPage);
    return UpdatesPage;
}());

//# sourceMappingURL=updates.js.map

/***/ }),

/***/ 468:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return UpdatesService; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__ionic_storage__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__config__ = __webpack_require__(3);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var UpdatesService = /** @class */ (function () {
    function UpdatesService(config, storage) {
        this.config = config;
        this.storage = storage;
        this.updates = [];
        this.readupdates = [];
    }
    UpdatesService.prototype.getUpdates = function () {
        var _this = this;
        this.storage.get('updates').then(function (updates) {
            if (updates) {
                for (var i = 0; i < updates.length; i++) {
                    if (!_this.matchObj(_this.updates, updates[i])) {
                        console.log(i);
                        _this.updates.push(updates[i]);
                    }
                }
            }
        });
        this.storage.get('readupdates').then(function (updates) {
            if (updates) {
                for (var i = 0; i < updates.length; i++) {
                    if (!_this.matchObj(_this.readupdates, updates[i])) {
                        _this.readupdates.push(updates[i]);
                    }
                }
            }
        });
        if (this.config.isLoggedIn) {
            this.storage.get('updates_' + this.config.user.id).then(function (updates) {
                if (updates) {
                    for (var i = 0; i < updates.length; i++) {
                        if (!_this.matchObj(_this.updates, updates[i])) {
                            _this.updates.push(updates[i]);
                        }
                    }
                }
            });
        }
    };
    UpdatesService.prototype.isRead = function (update) {
        if (this.readupdates.length) {
            return this.matchObj(this.readupdates, update);
        }
        return false;
    };
    UpdatesService.prototype.getUnreadupdates = function () {
        var updates = [];
        for (var i = 0; i < this.updates.length; i++) {
            if (!this.readupdates.indexOf(this.updates[i])) {
                updates.push(this.updates[i]);
            }
        }
        return updates;
    };
    UpdatesService.prototype.markRead = function (update) {
        var _this = this;
        if (this.readupdates.length) {
            this.readupdates.push(update);
            this.storage.set('readupdates', this.readupdates);
        }
        else {
            this.storage.get('readupdates').then(function (updates) {
                if (updates) {
                    for (var i = 0; i < updates.length; i++) {
                        _this.readupdates.push(updates[i]);
                    }
                }
                _this.readupdates.push(update);
                _this.storage.set('readupdates', _this.readupdates);
            });
        }
        this.config.unread_notifications_count--;
        if (this.config.unread_notifications_count < 0) {
            this.config.unread_notifications_count = 0;
        }
        console.log(this.readupdates);
        console.log(this.updates);
    };
    UpdatesService.prototype.markUnread = function (update) {
        var _this = this;
        if (this.readupdates.length) {
            var k = this.readupdates.indexOf(update);
            this.readupdates.splice(k, 1);
            this.storage.set('readupdates', this.readupdates);
        }
        else {
            this.storage.get('readupdates').then(function (updates) {
                if (updates) {
                    for (var i = 0; i < updates.length; i++) {
                        _this.readupdates.push(updates[i]);
                    }
                }
                var k = _this.readupdates.indexOf(update);
                _this.readupdates.splice(k, 1);
                _this.storage.set('readupdates', _this.readupdates);
            });
        }
        this.config.unread_notifications_count++;
    };
    UpdatesService.prototype.matchObj = function (big, small) {
        for (var i = 0; i < big.length; i++) {
            if (big[i].time == small.time && big[i].content == small.content) {
                return true;
            }
        }
        return false;
    };
    UpdatesService = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2__config__["a" /* ConfigService */],
            __WEBPACK_IMPORTED_MODULE_1__ionic_storage__["b" /* Storage */]])
    ], UpdatesService);
    return UpdatesService;
}());

//# sourceMappingURL=updates.js.map

/***/ }),

/***/ 469:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MultiselectorPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_config__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__ionic_storage__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__tabs_tabs__ = __webpack_require__(57);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__services_sidemenu__ = __webpack_require__(189);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__services_push_notification__ = __webpack_require__(114);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};







var MultiselectorPage = /** @class */ (function () {
    function MultiselectorPage(navCtrl, config, storage, sidemenu, push_notification) {
        this.navCtrl = navCtrl;
        this.config = config;
        this.storage = storage;
        this.sidemenu = sidemenu;
        this.push_notification = push_notification;
        this.site_index = 0;
        this.tabsPage = __WEBPACK_IMPORTED_MODULE_4__tabs_tabs__["a" /* TabsPage */];
    }
    MultiselectorPage.prototype.ionViewDidLoad = function () {
        this.SelectOptionsSite = {
            title: this.config.get_translation('select_site'),
            okText: this.config.get_translation('okay'),
            cancelText: this.config.get_translation('dismiss'),
        };
        this.SelectOptionsLanguage = {
            title: this.config.get_translation('select_language'),
            okText: this.config.get_translation('okay'),
            cancelText: this.config.get_translation('dismiss'),
        };
    };
    MultiselectorPage.prototype.ngOnInit = function () {
        console.log('multiselector page');
    };
    MultiselectorPage.prototype.onSite_select = function ($event) {
        console.log($event);
        this.site_index = $event;
    };
    MultiselectorPage.prototype.goToHome = function (i) {
        // clear storage first then do any thing ..
        this.config.set_multisite(i);
        this.config.set_multi_setting(i);
        this.sidemenu.set_Pages();
        this.config.initialize();
        this.navCtrl.setRoot(this.tabsPage);
        //set push notification for multisite
        setTimeout(function () {
            this.push_notification.push_notifcation_firebase();
        }, 8000);
    };
    MultiselectorPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-multiselector',template:/*ion-inline-start:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\pages\multiselector\multiselector.html"*/'<ion-content>\n	 <ion-row>\n        <ion-col *ngIf="config.multisite.enable_multisite && config.multisite.sites.length">\n            <div class="select_site">\n                <ion-card  *ngFor="let site of config.multisite.sites; let i = index" [attr.data-index]="i" (click)="goToHome(i)">\n                    <ion-grid>\n                        <ion-row>\n                            <ion-col col-12 *ngIf="site.logo">\n                                <div class="featured_image" [ngStyle]="{ \'background-image\':\'url(\'+site.logo+\')\'}">\n                                    <lazy-img [inputSrc]="site.logo" [imgStyle]="style"></lazy-img>\n                                    <strong>{{site.site_name}}</strong>\n                                </div>\n                            </ion-col>\n                        </ion-row>\n                    </ion-grid>\n                </ion-card> \n            </div>\n        </ion-col>\n    </ion-row>\n</ion-content>'/*ion-inline-end:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\pages\multiselector\multiselector.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_2__services_config__["a" /* ConfigService */],
            __WEBPACK_IMPORTED_MODULE_3__ionic_storage__["b" /* Storage */],
            __WEBPACK_IMPORTED_MODULE_5__services_sidemenu__["a" /* SideMenuService */],
            __WEBPACK_IMPORTED_MODULE_6__services_push_notification__["a" /* PushNotificationService */]])
    ], MultiselectorPage);
    return MultiselectorPage;
}());

//# sourceMappingURL=multiselector.js.map

/***/ }),

/***/ 470:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return OfflinePage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ionic_native_media__ = __webpack_require__(190);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__ionic_native_file__ = __webpack_require__(88);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__profile_profile__ = __webpack_require__(22);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






/**
 * Generated class for the OfflinePage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var OfflinePage = /** @class */ (function () {
    function OfflinePage(navCtrl, navParams, media, platform, file, toastCtrl, modalCtrl) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.media = media;
        this.platform = platform;
        this.file = file;
        this.toastCtrl = toastCtrl;
        this.modalCtrl = modalCtrl;
        this.loadFiles = [];
        this.profilePage = __WEBPACK_IMPORTED_MODULE_4__profile_profile__["a" /* ProfilePage */];
        this.filename = '';
        this.duration = -1;
        this.position = 0;
    }
    OfflinePage.prototype.ngOnInit = function () {
        var _this = this;
        this.is_playing = false;
        this.is_detail = false;
        this.platform.ready().then(function () {
            if (_this.platform.is('ios')) {
                _this.storageDirectory = _this.file.dataDirectory;
            }
            else if (_this.platform.is('android')) {
                _this.storageDirectory = _this.file.externalDataDirectory;
            }
            else {
                _this.storageDirectory = _this.file.cacheDirectory;
            }
            _this.file.listDir(_this.storageDirectory, '').then(function (listing) {
                listing.forEach(function (element) {
                    if (element.name.substr(element.name.length - 3) == 'mp3' || element.name.substr(element.name.length - 3) == 'mp4') {
                        _this.loadFiles.push(element);
                    }
                });
            });
        });
    };
    OfflinePage.prototype.createAudioFile = function (pathToDirectory, filename) {
        if (this.platform.is('ios')) {
            //ios
            return this.media.create(pathToDirectory.replace(/^file:\/\//, '') + '/' + filename);
        }
        else {
            // android
            try {
                return this.media.create(pathToDirectory + filename);
            }
            catch (error) {
                return error;
            }
        }
    };
    OfflinePage.prototype.getMediaDuration = function (audio) {
        return new Promise(function (resolve, reject) {
            audio.seekTo(1);
            audio.onStatusUpdate.subscribe(function (status) {
                setTimeout(function () {
                    resolve(audio.getDuration());
                    audio.release();
                }, 500);
            });
        });
    };
    OfflinePage.prototype.playRecording = function () {
        //let mediaobject :MediaObject = this.createAudioFile(this.storageDirectory,f.name)
        var _this = this;
        this.is_playing = true;
        this.mediafile.play();
        this.getMediaDuration(this.mediafile).then(function (rslt) { return _this.duration = rslt; });
        this.position = 0;
        setInterval(function () {
            //this.duration = this.mediafile.getDuration
            this.position = this.position + 1;
            //this.mediafile.seekTo(this.position*1000)
        }.bind(this), 1000);
    };
    OfflinePage.prototype.changepostion = function () {
        //this.mediafile.seekTo(this.position*1000)
        var toast = this.toastCtrl.create({
            message: 'res.message',
            duration: 1000,
            position: 'bottom'
        });
        toast.present();
    };
    OfflinePage.prototype.updateSongPosition = function (event) {
        this.mediafile.seekTo(this.position * 1000);
    };
    OfflinePage.prototype.pausePlayRecording = function () {
        this.is_playing = false;
        //let mediaobject :MediaObject = this.createAudioFile(this.storageDirectory,f.name)
        this.mediafile.pause();
    };
    OfflinePage.prototype.opendetail = function (f) {
        this.filename = f.name;
        this.is_detail = true;
        this.mediafile = this.createAudioFile(this.storageDirectory, f.name);
        this.duration = this.mediafile.getDuration() * 1000;
        var toast = this.toastCtrl.create({
            message: this.duration,
            duration: 1000,
            position: 'bottom'
        });
        toast.present();
    };
    OfflinePage.prototype.closedetail = function (f) {
        this.filename = '';
        this.mediafile.stop();
        this.mediafile = null;
        this.is_detail = false;
    };
    OfflinePage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad OfflinePage');
    };
    OfflinePage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-offline',template:/*ion-inline-start:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\pages\offline\offline.html"*/'\n\n<!--\n  Generated template for the OfflinePage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar color="transparent">\n      <ion-buttons start>\n          <button ion-button menuToggle>\n              <ion-icon name="md-menu"></ion-icon>\n          </button>\n      </ion-buttons>\n      <ion-title>Offline</ion-title>\n      <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n  <ion-list *ngIf="!is_detail">\n    <ion-item *ngFor="let f of loadFiles">\n      <ion-label  (click)="opendetail(f)">{{f.fullPath}} - <i class="fa fa-play"></i></ion-label>\n    </ion-item>\n  </ion-list>\n  <div *ngIf="is_detail">\n    <ion-item><ion-label *ngIf="!is_playing" (click)="playRecording()"> <i class="fa fa-play"></i> {{filename}}<i class="fa fa-play"></i></ion-label></ion-item>\n    <ion-item><ion-label *ngIf="is_playing" (click)="pausePlayRecording()"> {{filename}}- {{position}} <i class="fa fa-pause"></i></ion-label></ion-item>\n    <ion-range  (ionBlur)="updateSongPosition($event)"  min="0" max="duration" [(ngModel)]="position">\n    </ion-range>\n    <button (click)="closedetail(f)"><i class="fa fa-stop"></i></button>\n  </div>\n  <!--(ionChange)="changepostion()"-->\n</ion-content>\n'/*ion-inline-end:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\pages\offline\offline.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__ionic_native_media__["a" /* Media */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["o" /* Platform */], __WEBPACK_IMPORTED_MODULE_3__ionic_native_file__["a" /* File */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* ToastController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* ModalController */]])
    ], OfflinePage);
    return OfflinePage;
}());

//# sourceMappingURL=offline.js.map

/***/ }),

/***/ 48:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ForumService; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ionic_storage__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__config__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var ForumService = /** @class */ (function () {
    function ForumService(http, config, storage) {
        this.http = http;
        this.config = config;
        this.storage = storage;
        this.all_forums = [];
        this.all_topics = [];
        this.all_replies = [];
        this.my_batches = [];
        this.my_topics = [];
        this.my_replies = [];
    }
    ForumService.prototype.get_all_forums = function (action, args) {
        var $this = this;
        var data = args;
        return new Promise(function (resolve) {
            switch (action) {
                case 'refresh':
                    $this.all_forums = [];
                    $this.storage.remove('allforums').then(function (x) {
                        $this.get_forums(data, action).then(function (res) {
                            resolve(res);
                        });
                    });
                    break;
                case 'ngoninit':
                    $this.all_forums = [];
                    $this.storage.get('allforums').then(function (allforums) {
                        if (allforums && Array.isArray(allforums) && allforums.length) {
                            $this.all_forums = allforums;
                            resolve(allforums);
                        }
                        else {
                            $this.get_forums(data, action).then(function (res) {
                                resolve(res);
                            });
                        }
                    });
                    break;
                case 'infinite':
                    if ($this.all_forums && Array.isArray($this.all_forums) && $this.all_forums.length) {
                        data.paged = ($this.all_forums.length / $this.config.forum.limit) + 1;
                        console.log('paged=== ' + data.paged);
                        $this.get_forums(data, action).then(function (res) {
                            resolve(res);
                        });
                    }
                    break;
                case 'sort':
                    $this.all_forums = [];
                    $this.get_forums(data, action).then(function (res) {
                        resolve(res);
                    });
                    break;
                case 'search':
                    $this.all_forums = [];
                    $this.get_forums(data, action).then(function (res) {
                        resolve(res);
                    });
                    break;
                case 'filterby':
                    $this.all_forums = [];
                    data = {
                        'limit': $this.config.forum.limit,
                        'offset': 0,
                        'args': args
                    };
                    $this.get_forums(data, action).then(function (res) {
                        resolve(res);
                    });
                    break;
                default:
            }
        });
    };
    ForumService.prototype.get_forums = function (data, action) {
        var $this = this;
        return new Promise(function (resolve) {
            if ($this.config.isLoggedIn) {
                var opt = $this.getUserAuthorizationHeaders();
                $this.http.post($this.config.baseUrl + "user/forums", data, opt)
                    .map(function (res) { return res.json(); })
                    .subscribe(function (res) {
                    if (res.status) {
                        if (Array.isArray(res.data) && res.data.length) {
                            res.data.map(function (x, i) {
                                if (Array.isArray($this.all_forums)) {
                                    if ($this.all_forums.length) {
                                        $this.all_forums.push(x);
                                    }
                                    else {
                                        $this.all_forums = [];
                                        $this.all_forums.push(x);
                                    }
                                }
                            });
                        }
                    }
                    else {
                        //$this.all_forums = [];
                    }
                    if (action == 'refresh' || action == 'ngoninit') {
                        if (Array.isArray($this.all_forums) && $this.all_forums.length) {
                            $this.storage.set('allforums', $this.all_forums);
                            // $this.config.addToTracker('allforums', parseInt($this.all_forums.length));
                        }
                    }
                    console.log('this.allforums');
                    console.log($this.all_forums);
                    resolve(res.data);
                });
            }
            else {
                $this.http.post($this.config.baseUrl + "user/forums", data)
                    .map(function (res) { return res.json(); })
                    .subscribe(function (res) {
                    if (res.status) {
                        if (Array.isArray(res.data) && res.data.length) {
                            res.data.map(function (x, i) {
                                if (Array.isArray($this.all_forums)) {
                                    if ($this.all_forums.length) {
                                        $this.all_forums.push(x);
                                    }
                                    else {
                                        $this.all_forums = [];
                                        $this.all_forums.push(x);
                                    }
                                }
                            });
                        }
                    }
                    else {
                        // $this.all_forums = [];
                    }
                    if (action == 'refresh' || action == 'ngoninit') {
                        if (Array.isArray($this.all_forums) && $this.all_forums.length) {
                            $this.storage.set('allforums', $this.all_forums);
                            // $this.config.addToTracker('allforums', parseInt($this.all_forums.length));
                        }
                    }
                    console.log('this.allforums');
                    console.log($this.all_forums);
                    resolve(res.data);
                });
            }
        });
    };
    ForumService.prototype.get_all_topics = function (action, args) {
        var $this = this;
        var data = args;
        var forum_id = args.post_parent;
        return new Promise(function (resolve) {
            switch (action) {
                case 'refresh':
                    $this.all_topics = [];
                    $this.storage.remove('alltopics_' + forum_id).then(function (x) {
                        $this.get_topics(data, action).then(function (res) {
                            resolve(res);
                        });
                    });
                    break;
                case 'ngoninit':
                    $this.all_topics = [];
                    $this.storage.get('alltopics_' + forum_id).then(function (alltopics) {
                        if (alltopics && Array.isArray(alltopics) && alltopics.length) {
                            $this.all_topics = alltopics;
                            resolve(alltopics);
                        }
                        else {
                            $this.get_topics(data, action).then(function (res) {
                                resolve(res);
                            });
                        }
                    });
                    break;
                case 'infinite':
                    if ($this.all_topics && Array.isArray($this.all_topics) && $this.all_topics.length) {
                        data.paged = ($this.all_topics.length / $this.config.forum.limit) + 1;
                        console.log('paged=== ' + data.paged);
                        $this.get_topics(data, action).then(function (res) {
                            resolve(res);
                        });
                    }
                    break;
                case 'sort':
                    $this.all_topics = [];
                    $this.get_topics(data, action).then(function (res) {
                        resolve(res);
                    });
                    break;
                case 'search':
                    $this.all_topics = [];
                    $this.get_topics(data, action).then(function (res) {
                        resolve(res);
                    });
                    break;
                case 'filterby':
                    $this.all_topics = [];
                    data = {
                        'limit': $this.config.forum.limit,
                        'offset': 0,
                        'args': args
                    };
                    $this.get_topics(data, action).then(function (res) {
                        resolve(res);
                    });
                    break;
                default:
            }
        });
    };
    ForumService.prototype.get_topics = function (data, action) {
        var $this = this;
        var forum_id = data.post_parent;
        return new Promise(function (resolve) {
            if ($this.config.isLoggedIn) {
                var opt = $this.getUserAuthorizationHeaders();
                $this.http.post($this.config.baseUrl + "user/topics", data, opt)
                    .map(function (res) { return res.json(); })
                    .subscribe(function (res) {
                    if (res.status) {
                        if (Array.isArray(res.data) && res.data.length) {
                            res.data.map(function (x, i) {
                                if (Array.isArray($this.all_topics)) {
                                    if ($this.all_topics.length) {
                                        $this.all_topics.push(x);
                                    }
                                    else {
                                        $this.all_topics = [];
                                        $this.all_topics.push(x);
                                    }
                                }
                            });
                        }
                    }
                    else {
                        // do nothing
                        //$this.all_topics = [];
                    }
                    if (action == 'refresh' || action == 'ngoninit') {
                        if (Array.isArray($this.all_topics) && $this.all_topics.length) {
                            $this.storage.set('alltopics_' + forum_id, $this.all_topics);
                            // $this.config.addToTracker('alltopics_'+forum_id, parseInt($this.all_topics.length));
                        }
                    }
                    console.log('this.alltopics');
                    console.log($this.all_topics);
                    resolve(res.data);
                });
            }
            else {
                $this.http.post($this.config.baseUrl + "user/topics", data)
                    .map(function (res) { return res.json(); })
                    .subscribe(function (res) {
                    if (res.status) {
                        if (Array.isArray(res.data) && res.data.length) {
                            res.data.map(function (x, i) {
                                if (Array.isArray($this.all_topics)) {
                                    if ($this.all_topics.length) {
                                        $this.all_topics.push(x);
                                    }
                                    else {
                                        $this.all_topics = [];
                                        $this.all_topics.push(x);
                                    }
                                }
                            });
                        }
                    }
                    else {
                        // do nothing
                        //$this.all_topics = [];
                    }
                    if (action == 'refresh' || action == 'ngoninit') {
                        if (Array.isArray($this.all_topics) && $this.all_topics.length) {
                            $this.storage.set('alltopics_' + forum_id, $this.all_topics);
                            // $this.config.addToTracker('alltopics_'+forum_id, parseInt($this.all_topics.length));
                        }
                    }
                    console.log('this.alltopics');
                    console.log($this.all_topics);
                    resolve(res.data);
                });
            }
        });
    };
    ForumService.prototype.get_all_replies = function (action, args) {
        var $this = this;
        var data = args;
        var topic_id = args.post_parent;
        return new Promise(function (resolve) {
            switch (action) {
                case 'refresh':
                    $this.all_replies = [];
                    $this.storage.remove('allreplies_' + topic_id).then(function (x) {
                        $this.get_replies(data, action).then(function (res) {
                            resolve(res);
                        });
                    });
                    break;
                case 'ngoninit':
                    $this.all_replies = [];
                    $this.storage.get('allreplies_' + topic_id).then(function (allreplies) {
                        if (allreplies && Array.isArray(allreplies) && allreplies.length) {
                            $this.all_replies = allreplies;
                            resolve(allreplies);
                        }
                        else {
                            $this.get_replies(data, action).then(function (res) {
                                resolve(res);
                            });
                        }
                    });
                    break;
                case 'infinite':
                    if ($this.all_replies && Array.isArray($this.all_replies) && $this.all_replies.length) {
                        data.paged = ($this.all_replies.length / $this.config.forum.limit) + 1;
                        console.log('paged=== ' + data.paged);
                        $this.get_replies(data, action).then(function (res) {
                            resolve(res);
                        });
                    }
                    break;
                case 'sort':
                    $this.all_replies = [];
                    $this.get_replies(data, action).then(function (res) {
                        resolve(res);
                    });
                    break;
                case 'search':
                    $this.all_replies = [];
                    $this.get_replies(data, action).then(function (res) {
                        resolve(res);
                    });
                    break;
                case 'filterby':
                    $this.all_replies = [];
                    data = {
                        'limit': $this.config.forum.limit,
                        'offset': 0,
                        'args': args
                    };
                    $this.get_replies(data, action).then(function (res) {
                        resolve(res);
                    });
                    break;
                default:
            }
        });
    };
    ForumService.prototype.get_replies = function (data, action) {
        var $this = this;
        var topic_id = data.post_parent;
        return new Promise(function (resolve) {
            if ($this.config.isLoggedIn) {
                var opt = $this.getUserAuthorizationHeaders();
                $this.http.post($this.config.baseUrl + "user/replies", data, opt)
                    .map(function (res) { return res.json(); })
                    .subscribe(function (res) {
                    if (res.status) {
                        if (Array.isArray(res.data) && res.data.length) {
                            res.data.map(function (x, i) {
                                if (Array.isArray($this.all_replies)) {
                                    if ($this.all_replies.length) {
                                        // just to not added element which is firest reply of topic 
                                        if (x.ID != topic_id) {
                                            $this.all_replies.unshift(x);
                                        }
                                    }
                                    else {
                                        $this.all_replies = [];
                                        if (x.ID != topic_id) {
                                            $this.all_replies.unshift(x);
                                        }
                                    }
                                }
                            });
                        }
                    }
                    else {
                        // $this.all_replies = [];
                    }
                    if (action == 'refresh' || action == 'ngoninit') {
                        if (Array.isArray($this.all_replies) && $this.all_replies.length) {
                            $this.storage.set('allreplies_' + topic_id, $this.all_replies);
                            // $this.config.addToTracker('allreplies_'+topic_id, parseInt($this.all_replies.length));
                        }
                    }
                    console.log('this.allreplies');
                    console.log($this.all_replies);
                    resolve(res.data);
                });
            }
            else {
                $this.http.post($this.config.baseUrl + "user/replies", data)
                    .map(function (res) { return res.json(); })
                    .subscribe(function (res) {
                    if (res.status) {
                        if (Array.isArray(res.data) && res.data.length) {
                            res.data.map(function (x, i) {
                                if (Array.isArray($this.all_replies)) {
                                    if ($this.all_replies.length) {
                                        if (x.ID != topic_id) {
                                            $this.all_replies.unshift(x);
                                        }
                                    }
                                    else {
                                        $this.all_replies = [];
                                        if (x.ID != topic_id) {
                                            $this.all_replies.unshift(x);
                                        }
                                    }
                                }
                            });
                        }
                    }
                    else {
                        // $this.all_replies = [];
                    }
                    if (action == 'refresh' || action == 'ngoninit') {
                        if (Array.isArray($this.all_replies) && $this.all_replies.length) {
                            $this.storage.set('allreplies_' + topic_id, $this.all_replies);
                            // $this.config.addToTracker('allreplies_'+topic_id, parseInt($this.all_replies.length));
                        }
                    }
                    console.log('this.allreplies');
                    console.log($this.all_replies);
                    resolve(res.data);
                });
            }
        });
    };
    /*
    create topic format response
        res = {
            "status": 1,
            "data": 7238,
            "message": "Topic Created"
        }
    */
    ForumService.prototype.create_topic = function (data) {
        var $this = this;
        console.log(data);
        return new Promise(function (resolve) {
            if ($this.config.isLoggedIn) {
                var opt = $this.getUserAuthorizationHeaders();
                $this.http.post($this.config.baseUrl + "user/topics/create", data, opt)
                    .map(function (res) { return res.json(); })
                    .subscribe(function (res) {
                    console.log(res);
                    resolve(res);
                });
            }
        });
    };
    /*
    create reply format response
        {
            "status": 1,
            "data": 7358,
            "message": "Reply Created"
        }
    */
    ForumService.prototype.create_reply = function (data) {
        var $this = this;
        console.log(data);
        return new Promise(function (resolve) {
            if ($this.config.isLoggedIn) {
                var opt = $this.getUserAuthorizationHeaders();
                $this.http.post($this.config.baseUrl + "user/replies/create", data, opt)
                    .map(function (res) { return res.json(); })
                    .subscribe(function (res) {
                    console.log(res);
                    if (res.status) {
                        if (res.data) {
                            $this.all_replies.push(res.data);
                        }
                    }
                    resolve(res);
                });
            }
        });
    };
    ForumService.prototype.deletereply = function (reply) {
        var $this = this;
        return new Promise((function (resolve) {
            if ($this.config.isLoggedIn) {
                var reply_id_1 = reply.ID;
                var topic_id_1 = reply.post_parent;
                var data = {
                    'reply_id': reply_id_1,
                    'sub_action': 'trash'
                };
                var opt = $this.getUserAuthorizationHeaders();
                $this.http.post($this.config.baseUrl + "user/replies/delete", data, opt)
                    .map(function (res) { return res.json(); })
                    .subscribe(function (res) {
                    if (res.status) {
                        if (Array.isArray($this.all_replies) && $this.all_replies.length) {
                            var index = $this.all_replies.findIndex(function (el) {
                                return el.ID == reply_id_1;
                            });
                            if (index > -1) {
                                $this.all_replies.splice(index, 1);
                                $this.storage.set('allreplies_' + topic_id_1, $this.all_replies);
                            }
                        }
                    }
                    console.log(res);
                    resolve(res);
                });
            }
        }));
    };
    ForumService.prototype.editreply = function (data) {
        var $this = this;
        var reply_id = data.reply_id;
        var topic_id = data.topic_id;
        return new Promise((function (resolve) {
            if ($this.config.isLoggedIn) {
                var opt = $this.getUserAuthorizationHeaders();
                $this.http.post($this.config.baseUrl + "user/replies/update", data, opt)
                    .map(function (res) { return res.json(); })
                    .subscribe(function (res) {
                    if (res.status) {
                        if (Array.isArray($this.all_replies) && $this.all_replies.length) {
                            var index = $this.all_replies.findIndex(function (el) {
                                return el.ID == reply_id;
                            });
                            if (index > -1) {
                                $this.all_replies[index] = res.data;
                                $this.storage.set('allreplies_' + topic_id, $this.all_replies);
                            }
                        }
                    }
                    console.log(res);
                    resolve(res);
                });
            }
        }));
    };
    ForumService.prototype.get_my_topics = function (res, paged) {
        console.log(res);
        var $this = this;
        if (paged == 1) {
            $this.my_topics = [];
        }
        res = res.data;
        if (res.status) {
            if (Array.isArray(res.data) && res.data.length) {
                res.data.map(function (x, i) {
                    if (Array.isArray($this.my_topics)) {
                        if ($this.my_topics.length) {
                            $this.my_topics.push(x);
                        }
                        else {
                            $this.my_topics = [];
                            $this.my_topics.push(x);
                        }
                    }
                    else {
                        console.log('not array');
                    }
                });
            }
        }
        else {
        }
        console.log('this.my_topics');
        console.log($this.my_topics);
    };
    ForumService.prototype.get_my_replies = function (res, paged) {
        console.log(res);
        var $this = this;
        if (paged == 1) {
            $this.my_replies = [];
        }
        res = res.data;
        if (res.status) {
            if (Array.isArray(res.data) && res.data.length) {
                res.data.map(function (x, i) {
                    if (Array.isArray($this.my_replies)) {
                        if ($this.my_replies.length) {
                            $this.my_replies.push(x);
                        }
                        else {
                            $this.my_replies = [];
                            $this.my_replies.push(x);
                        }
                    }
                    else {
                        console.log('not array');
                    }
                });
            }
        }
        else {
        }
        console.log('this.my_replies');
        console.log($this.my_replies);
    };
    ForumService.prototype.getUserAuthorizationHeaders = function () {
        var userheaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        userheaders.append('Authorization', this.config.settings.access_token);
        return new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: userheaders });
    };
    ForumService = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Http */],
            __WEBPACK_IMPORTED_MODULE_3__config__["a" /* ConfigService */],
            __WEBPACK_IMPORTED_MODULE_2__ionic_storage__["b" /* Storage */]])
    ], ForumService);
    return ForumService;
}());

//# sourceMappingURL=forum.js.map

/***/ }),

/***/ 49:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CourseService; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_map__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_Observable__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_rxjs_Observable__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_observable_of__ = __webpack_require__(40);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_observable_of___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_add_observable_of__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_observable_fromPromise__ = __webpack_require__(60);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_observable_fromPromise___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_add_observable_fromPromise__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__ionic_storage__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__authentication__ = __webpack_require__(33);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__config__ = __webpack_require__(3);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};









var CourseService = /** @class */ (function () {
    function CourseService(http, storage, auth, config) {
        this.http = http;
        this.storage = storage;
        this.auth = auth;
        this.config = config;
        this.cacheGroup = 'course';
        this.featured = [];
        this.popular = [];
        this.courses = [];
        this.fullCourses = [];
        this.courseCategories = [];
        this.courseLocations = [];
        this.courseLevels = [];
        this.baseUrl = this.config.baseUrl; // not in use
    }
    CourseService.prototype.ngOnInit = function () {
    };
    CourseService.prototype.extractData = function (response) {
        var body = response.json();
        if (body) {
            var res = [];
            for (var i = 0; i < body.length; i++) {
                res.push(body[i].data);
            }
            return res;
        }
        return {};
    };
    CourseService.prototype.handleError = function (error) {
        console.log(error);
        return __WEBPACK_IMPORTED_MODULE_3_rxjs_Observable__["Observable"].throw(error.json().error || "500 internal server error");
    };
    CourseService.prototype.getAllCourses = function (paged) {
        var _this = this;
        if (paged === void 0) { paged = 1; }
        if (this.config.trackComponents('allcourses') >= paged * this.config.settings.per_view) {
            if (this.courses.length >= paged * this.config.settings.per_view) {
                return __WEBPACK_IMPORTED_MODULE_3_rxjs_Observable__["Observable"].of(this.courses);
            }
            else {
                this.allcoursesobservable = __WEBPACK_IMPORTED_MODULE_3_rxjs_Observable__["Observable"].fromPromise(this.storage.get('allcourses').then(function (courses) {
                    if (courses) {
                        _this.courses = courses;
                    }
                }));
            }
        }
        else {
            var count = 0;
            count = paged * this.config.settings.per_view - this.courses.length;
            if (this.allcoursesobservable) {
                return this.allcoursesobservable;
            }
            else {
                var courses = [];
                if (this.courses.length) {
                    for (var i = 0; i < this.courses.length; i++) {
                        courses.push(this.courses[i].id);
                    }
                }
                var ec = courses.join(',');
                var params = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["e" /* URLSearchParams */]();
                params.set('paged', paged.toString());
                params.set('existing', ec);
                this.allcoursesobservable = this.http.get(this.config.baseUrl + "courses/paged/" + paged, { search: params })
                    .map(function (response) {
                    _this.allcoursesobservable = null;
                    if (response.status == 400) {
                        return "FAILURE";
                    }
                    else if (response.status == 200) {
                        var rcourses = response.json();
                        if (rcourses) {
                            _this.courses.push(rcourses);
                            _this.config.updateComponents('allcourses', _this.courses.length);
                            _this.storage.set('allcourses', _this.courses);
                            return _this.courses;
                        }
                    }
                });
            }
        }
        return this.allcoursesobservable;
    };
    /*
    ALL Categories call
     */
    CourseService.prototype.getAllCourseCategory = function () {
        var _this = this;
        var taxonomy = 'course-cat';
        if (this.config.trackComponents('allcoursecategories') && this.config.trackComponents('allcoursecategories') == this.courseCategories.length) {
            if (this.courseCategories.length) {
                return __WEBPACK_IMPORTED_MODULE_3_rxjs_Observable__["Observable"].of(this.courseCategories);
            }
            else {
                this.catobservable = __WEBPACK_IMPORTED_MODULE_3_rxjs_Observable__["Observable"].fromPromise(this.storage.get('allcoursecategories').then(function (cats) {
                    if (cats) {
                        _this.courseCategories = cats;
                        return _this.courseCategories;
                    }
                }));
            }
        }
        else {
            this.catobservable = this.http.get(this.config.baseUrl + "course/taxonomy/?taxonomy=" + taxonomy)
                .map(function (response) {
                var body = response.json();
                var res = [];
                _this.catobservable = null;
                if (body) {
                    _this.mergeCategories(_this.courseCategories, body);
                    _this.storage.set('allcoursecategories', _this.courseCategories);
                    return _this.courseCategories;
                }
            });
        }
        return this.catobservable;
    };
    /*
    All Course Locations
     */
    CourseService.prototype.getAllCourseLocations = function () {
        var _this = this;
        var taxonomy = 'location';
        if (this.config.trackComponents('allcourselocations') && this.config.trackComponents('allcourselocations') == this.courseLocations.length) {
            if (this.courseLocations.length) {
                return __WEBPACK_IMPORTED_MODULE_3_rxjs_Observable__["Observable"].of(this.courseLocations);
            }
            else {
                this.locobservable = __WEBPACK_IMPORTED_MODULE_3_rxjs_Observable__["Observable"].fromPromise(this.storage.get('allcourselocations').then(function (cats) {
                    if (cats) {
                        _this.courseLocations = cats;
                        return _this.courseLocations;
                    }
                }));
            }
        }
        else {
            this.locobservable = this.http.get(this.config.baseUrl + "course/taxonomy/?taxonomy=" + taxonomy)
                .map(function (response) {
                var body = response.json();
                var res = [];
                _this.locobservable = null;
                if (body) {
                    _this.mergeCategories(_this.courseLocations, body);
                    _this.storage.set('allcourselocations', _this.courseLocations);
                    return _this.courseLocations;
                }
            });
        }
        return this.locobservable;
    };
    /*
    All Course Levels
     */
    CourseService.prototype.getAllCourseLevels = function (forceRefresh) {
        var _this = this;
        var taxonomy = 'level';
        if (this.config.trackComponents('allcourselevels') && this.config.trackComponents('allcourselevels') == this.courseLevels.length) {
            if (this.courseLevels.length) {
                return __WEBPACK_IMPORTED_MODULE_3_rxjs_Observable__["Observable"].of(this.courseLevels);
            }
            else {
                this.levobservable = __WEBPACK_IMPORTED_MODULE_3_rxjs_Observable__["Observable"].fromPromise(this.storage.get('allcourselevels').then(function (cats) {
                    if (cats) {
                        _this.courseLevels = cats;
                        return _this.courseLevels;
                    }
                }));
            }
        }
        else {
            this.levobservable = this.http.get(this.config.baseUrl + "course/taxonomy/?taxonomy=" + taxonomy)
                .map(function (response) {
                console.log(response);
                var body = response.json();
                var res = [];
                _this.levobservable = null;
                if (body) {
                    _this.mergeCategories(_this.courseLevels, body);
                    _this.storage.set('allcourselevels', _this.courseLevels);
                    "                    return this.courseLevels;\n";
                }
            });
        }
        return this.levobservable;
    };
    CourseService.prototype.getLastCourse = function () {
        console.log("GET");
        return this.lastCourse;
    };
    /*
    Full course call
     */
    CourseService.prototype.getFullCourse = function (course, force) {
        var _this = this;
        if (force === void 0) { force = false; }
        var allc = this.config.trackComponents('courses');
        if (Array.isArray(allc) && allc.indexOf(course.id) != -1 && !force) {
            var flag = 1;
            if (Array.isArray(this.fullCourses)) {
                if (this.fullCourses.length) {
                    for (var i = 0; i < this.fullCourses.length; i++) {
                        if (this.fullCourses[i].course.id == course.id) {
                            flag = 0;
                            return __WEBPACK_IMPORTED_MODULE_3_rxjs_Observable__["Observable"].of(this.fullCourses[i]); //return if already cached
                        }
                    }
                }
            }
            if (flag) {
                this.fullcourseobservable = __WEBPACK_IMPORTED_MODULE_3_rxjs_Observable__["Observable"].fromPromise(this.storage.get('fullcourse_' + course.id).then(function (fullcourse) {
                    if (fullcourse) {
                        _this.fullCourses.push(fullcourse);
                        return fullcourse;
                    }
                }));
            }
        }
        else {
            var k = 0;
            if (this.fullCourses) {
                var k_1 = this.fullCourses.length;
            }
            var fullCourse_1 = {};
            if (this.config.isLoggedIn) {
                var opt = this.auth.getUserAuthorizationHeaders();
                this.fullcourseobservable = this.http.get(this.config.baseUrl + "course/" + course.id, opt).map(function (response) {
                    _this.fullcourseobservable = null;
                    if (response.status == 400) {
                        return "FAILURE";
                    }
                    else if (response.status == 200) {
                        var body = response.json();
                        if (body) {
                            var res = [];
                            for (var i = 0; i < body.length; i++) {
                                res.push(body[i].data);
                            }
                            if (res) {
                                fullCourse_1 = res[0];
                                _this.storage.set('fullcourse_' + course.id, fullCourse_1);
                                _this.config.addToTracker('courses', course.id);
                                _this.fullCourses.push(fullCourse_1);
                                return fullCourse_1;
                            }
                        }
                    }
                });
            }
            else {
                this.fullcourseobservable = this.http.get(this.config.baseUrl + "course/" + course.id)
                    .map(function (response) {
                    _this.fullcourseobservable = null;
                    if (response.status == 400) {
                        return "FAILURE";
                    }
                    else if (response.status == 200) {
                        var body = response.json();
                        if (body) {
                            var res = [];
                            for (var i = 0; i < body.length; i++) {
                                res.push(body[i].data);
                            }
                            if (res) {
                                console.log(res[0]);
                                fullCourse_1 = res[0];
                                console.log('setting full course in storage');
                                _this.storage.set('fullcourse_' + course.id, fullCourse_1);
                                _this.config.addToTracker('courses', course.id);
                                _this.fullCourses.push(fullCourse_1);
                                return fullCourse_1;
                            }
                        }
                    }
                });
            }
        }
        return this.fullcourseobservable;
    };
    /*
    POPULAR COURSES
     */
    CourseService.prototype.getPopularCourses = function () {
        var _this = this;
        if (this.config.trackComponents('popular')) {
            if (this.popular.length) {
                return __WEBPACK_IMPORTED_MODULE_3_rxjs_Observable__["Observable"].of(this.popular);
            }
            else {
                this.popularobservable = __WEBPACK_IMPORTED_MODULE_3_rxjs_Observable__["Observable"].fromPromise(this.storage.get('popular').then(function (popular) {
                    if (popular) {
                        _this.popular = popular;
                        return _this.popular;
                    }
                }));
            }
        }
        else {
            this.popularobservable = this.http.get(this.baseUrl + "course/popular" + '?per_view=' + this.config.settings.per_view)
                .map(function (response) {
                var body = response.json();
                _this.popularobservable = null;
                if (body) {
                    var courses = [];
                    for (var i = 0; i < body.length; i++) {
                        courses.push(body[i].data);
                    }
                    _this.courses = _this.mergeCourses(_this.courses, courses);
                    _this.popular = _this.mergeCourses(_this.popular, courses);
                    _this.storage.set('popular', _this.popular);
                    _this.config.updateComponents('popular', 1);
                    return _this.popular;
                }
            });
        }
        return this.popularobservable;
    };
    /*
    FEATURED COURSES
    */
    CourseService.prototype.getFeaturedCourses = function () {
        var _this = this;
        console.log('emchi featcher');
        console.log(this.config.settings.per_view);
        console.log('emchi featcher');
        console.log('Shall track featured = ' + this.config.trackComponents('featured'));
        if (this.config.trackComponents('featured')) {
            if (this.featured.length) {
                return __WEBPACK_IMPORTED_MODULE_3_rxjs_Observable__["Observable"].of(this.featured);
            }
            else {
                this.featuredobservable = __WEBPACK_IMPORTED_MODULE_3_rxjs_Observable__["Observable"].fromPromise(this.storage.get('featured').then(function (featured) {
                    if (featured) {
                        _this.featured = featured;
                        return _this.featured;
                    }
                }));
            }
        }
        else {
            this.featuredobservable = this.http.get(this.baseUrl + "course/featured?per_view=" + this.config.settings.per_view)
                .map(function (response) {
                var body = response.json();
                console.log('3ibbbb');
                //let body = response.json();
                if (body) {
                    var courses = [];
                    for (var i = 0; i < body.length; i++) {
                        courses.push(body[i].data);
                    }
                    console.log('#7');
                    _this.courses = _this.mergeCourses(_this.courses, courses);
                    _this.featured = _this.mergeCourses(_this.featured, courses);
                    _this.storage.set('featured', _this.featured);
                    _this.config.updateComponents('featured', 1);
                    return _this.featured;
                }
            });
        }
        return this.featuredobservable;
    };
    CourseService.prototype.filterItems = function (selectFilters) {
        var _this = this;
        var url = this.config.baseUrl + "course/filters?filter=" + encodeURI(JSON.stringify(selectFilters) + '&per_view=' + this.config.settings.per_view);
        var cacheKey = url;
        console.log(url);
        var items = [];
        if (this.config.trackComponents('allcourses') == this.courses.length && this.courses.length > 0 && this.config.trackComponents('allcourses') > this.config.per_view) {
            if (selectFilters.search.length && this.courses.length) {
                items = this.courses.filter(function (course) {
                    var Items = course.name.toLowerCase().indexOf(selectFilters.search.toLowerCase()) > -1;
                    return Items;
                });
            }
            else {
                this.filterobservable = __WEBPACK_IMPORTED_MODULE_3_rxjs_Observable__["Observable"].fromPromise(this.storage.get(cacheKey).then(function (items) {
                    if (items) {
                        return items;
                    }
                }));
            }
        }
        else {
            if (items.length < this.config.settings.per_view) {
                if (this.filterobservable) {
                    return this.filterobservable;
                }
                else {
                    this.filterobservable = this.http.get(url)
                        .map(function (response) {
                        _this.filterobservable = null;
                        console.log(response);
                        if (response.status == 400) {
                            return "FAILURE";
                        }
                        else if (response.status == 200) {
                            var body = response.json();
                            if (body) {
                                for (var k = 0; k < body.length; k++) {
                                    items.push(body[k].data);
                                }
                                _this.storage.set(cacheKey, items);
                                return items;
                            }
                        }
                    });
                }
            }
        }
        return this.filterobservable;
    };
    CourseService.prototype.mergeCourses = function (coursesA, coursesB) {
        for (var i = 0; i < coursesB.length; i++) {
            var flag = 1;
            for (var j = 0; j < coursesA.length; j++) {
                if (coursesB[i].id == coursesA[j].id) {
                    flag = 0;
                }
            }
            if (flag) {
                coursesA.push(coursesB[i]);
            }
        }
        return coursesA;
    };
    CourseService.prototype.getIndexByKeyValue = function (arraytosearch, key, valuetosearch) {
        for (var i = 0; i < arraytosearch.length; i++) {
            if (arraytosearch[i][key] == valuetosearch) {
                return i;
            }
        }
        return null;
    };
    CourseService.prototype.copyobject = function (srcObj, destObj) {
        for (var key in destObj) {
            console.log(' - ' + key);
            if (destObj.hasOwnProperty(key) && srcObj.hasOwnProperty(key)) {
                destObj[key] = srcObj[key];
            }
        }
        return destObj;
    };
    CourseService.prototype.mergeCategories = function (catsA, catsB) {
        for (var i = 0; i < catsB.length; i++) {
            var flag = 1;
            for (var j = 0; j < catsA.length; j++) {
                if (catsB[i].term_id == catsA[j].term_id) {
                    flag = 0;
                }
            }
            if (flag) {
                catsA.push(catsB[i]);
            }
        }
        return catsA;
    };
    //for pmpro call"
    CourseService.prototype.checkAndAssignPmproLevel = function (pricing, fullcourse) {
        var _this = this;
        var opt = this.auth.getUserAuthorizationHeaders();
        return this.pmprochecklevelobservable = this.http.get(this.config.baseUrl + "user/course/pmprochecklevel/" + fullcourse.course.id + "/level/" + pricing.id, opt).map(function (response) {
            _this.pmprochecklevelobservable = null;
            if (response.status == 400) {
                return "FAILURE";
            }
            else if (response.status == 200) {
                var body = response.json();
                if (body) {
                    return body;
                }
            }
        });
    };
    CourseService = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Http */],
            __WEBPACK_IMPORTED_MODULE_6__ionic_storage__["b" /* Storage */],
            __WEBPACK_IMPORTED_MODULE_7__authentication__["a" /* AuthenticationService */],
            __WEBPACK_IMPORTED_MODULE_8__config__["a" /* ConfigService */]])
    ], CourseService);
    return CourseService;
}());

/*
sudo apt-get install lamp-server^
sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 7F0CEB10
echo 'deb http://downloads-distro.mongodb.org/repo/ubuntu-upstart dist 10gen' | sudo tee /etc/apt/sources.list.d/mongodb.list
sudo apt-get update
sudo apt-get install mongodb-org
sudo apt-get install php-pear php5-dev
sudo apt-get install libsasl2-dev
sudo pecl install mongo
sudo apt-get install php5-curl
apt-get install php5-mcrypt
php –ini (to find the ini file)
sudo nano /etc/php5/apache2/php.ini (add extension=mongo.so & extension=mcrypt.so)
sudo service apache2 restart
 */
//# sourceMappingURL=course.js.map

/***/ }),

/***/ 555:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return GroupPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_map__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__services_config__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__services_course__ = __webpack_require__(49);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__services_group__ = __webpack_require__(70);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__profile_profile__ = __webpack_require__(22);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};







var GroupPage = /** @class */ (function () {
    function GroupPage(navCtrl, config, groupService, navParams, nav, courseService, toastCtrl, loadingCtrl) {
        this.navCtrl = navCtrl;
        this.config = config;
        this.groupService = groupService;
        this.navParams = navParams;
        this.nav = nav;
        this.courseService = courseService;
        this.toastCtrl = toastCtrl;
        this.loadingCtrl = loadingCtrl;
        this.profilePage = __WEBPACK_IMPORTED_MODULE_6__profile_profile__["a" /* ProfilePage */];
        this.batch_tab_value = [];
    }
    GroupPage.prototype.ngOnInit = function () {
        this.initialize_load_more();
        this.navData = this.navParams.data; // here is our {id:"",name:""}
        this.getBatchById(this.navData.id);
        this.current_batch_id = this.navData.id;
        this.current_active_tab_key = 'description';
    };
    GroupPage.prototype.initialize_load_more = function () {
        this.load_more_ob = {
            'members': 1,
            'activity': 1,
            'news': 1
        };
        this.refresh_tab_ob = {
            'members': 1,
            'activity': 1,
            'news': 1
        };
    };
    GroupPage.prototype.getBatchById = function (id) {
        var loading = this.loadingCtrl.create({
            content: '<img src="assets/images/bubbles.svg">',
            duration: 3000,
            spinner: 'hide',
            showBackdrop: true,
        });
        loading.present();
        var $this = this;
        $this.groupService.getBatchById(id).then(function (res) {
            if (res) {
                $this.batchData = res;
            }
            loading.dismiss();
        });
    };
    GroupPage.prototype.onTabChanged = function () {
        var index = this.groupTabs.getActiveIndex();
        this.groupSlides.slideTo(index, 500);
    };
    /*
        On slide changed make api hit to get tab values
        making offset 0 to first hit
    */
    GroupPage.prototype.onSlideChanged = function () {
        this.get_tab_value().then(function (res) {
        });
    };
    GroupPage.prototype.doRefresh = function (refresher) {
        this.get_tab_value().then(function (res) {
            refresher.complete();
        });
    };
    GroupPage.prototype.get_tab_value = function () {
        var $this = this;
        var loading = this.loadingCtrl.create({
            content: '<img src="assets/images/bubbles.svg">',
            duration: 5000,
            spinner: 'hide',
            showBackdrop: true,
        });
        loading.present();
        $this.batch_tab_value = {};
        return new Promise(function (resolve_val) {
            var index = $this.groupSlides.getActiveIndex();
            $this.groupTabs.slideTo(index, 500);
            var current_tab_key = $this.batchData.tabs[index].key;
            $this.current_active_tab_key = current_tab_key; // settting current tab key
            var per_page = $this.config.batch.limit;
            var offset = 0;
            $this.load_more_ob[$this.current_active_tab_key] = 1;
            if (current_tab_key == 'activity') {
                offset = 1;
            }
            if (index != 0) {
                console.log('make a hit');
                $this.groupService.get_batch_tab_value($this.current_batch_id, current_tab_key, per_page, offset).then(function (resolve) {
                    loading.dismiss();
                    resolve_val();
                    if (resolve.status) {
                        var data = resolve.data;
                        if (current_tab_key == 'members') {
                            $this.batch_tab_value.members = [];
                            data.map(function (item, i) {
                                $this.batch_tab_value.members.push(item);
                            });
                        }
                        else if (current_tab_key == 'activity') {
                            $this.batch_tab_value.activity = [];
                            data.map(function (item, i) {
                                $this.batch_tab_value.activity.push(item);
                            });
                        }
                        else if (current_tab_key == 'news') {
                            $this.batch_tab_value.news = [];
                            data.map(function (item, i) {
                                $this.batch_tab_value.news.push(item);
                            });
                        }
                    }
                    else {
                        // do nothing
                    }
                    console.log('Batch TAB vALUE####');
                    console.log($this.batch_tab_value);
                });
            }
            else {
                loading.dismiss();
                resolve_val();
            }
        });
    };
    GroupPage.prototype.selectedTab = function (index, tab) {
        this.groupSlides.slideTo(index, 500);
        console.log('selectedTab');
        console.log(index);
        console.log(tab);
    };
    GroupPage.prototype.loadMore = function (event) {
        var loading = this.loadingCtrl.create({
            content: '<img src="assets/images/bubbles.svg">',
            duration: 3000,
            spinner: 'hide',
            showBackdrop: true,
        });
        loading.present();
        var $this = this;
        var index = $this.groupSlides.getActiveIndex();
        var current_tab_key = $this.batchData.tabs[index].key;
        $this.current_active_tab_key = current_tab_key; // settting current tab key
        var per_page = $this.config.batch.limit;
        var offset = $this.batch_tab_value[current_tab_key].length;
        /* Hiding load more */
        $this.load_more_ob[$this.current_active_tab_key] = 0;
        /* making offset for activity to get only page no.*/
        if (current_tab_key == 'activity' && ($this.batch_tab_value && $this.batch_tab_value.hasOwnProperty('activity'))) {
            offset = Math.round(($this.batch_tab_value[current_tab_key].length / per_page) + 1);
        }
        $this.groupService.get_batch_tab_value($this.current_batch_id, current_tab_key, per_page, offset).then(function (resolve) {
            event.complete();
            loading.dismiss();
            if (resolve.status) {
                var data = resolve.data;
                if (data.length < per_page) {
                    $this.load_more_ob[$this.current_active_tab_key] = 0;
                }
                else {
                    $this.load_more_ob[$this.current_active_tab_key] = 1;
                }
                if (current_tab_key == 'members') {
                    data.map(function (item, i) {
                        if ($this.batch_tab_value && $this.batch_tab_value.hasOwnProperty('members')) {
                            $this.batch_tab_value.members.push(item);
                        }
                        else {
                            $this.batch_tab_value.members = [];
                            $this.batch_tab_value.members.push(item);
                        }
                    });
                }
                else if (current_tab_key == 'activity') {
                    data.map(function (item, i) {
                        if ($this.batch_tab_value && $this.batch_tab_value.hasOwnProperty('activity')) {
                            $this.batch_tab_value.activity.push(item);
                        }
                        else {
                            $this.batch_tab_value.activity = [];
                            $this.batch_tab_value.activity.push(item);
                        }
                    });
                }
                else if (current_tab_key == 'news') {
                    data.map(function (item, i) {
                        if ($this.batch_tab_value && $this.batch_tab_value.hasOwnProperty('news')) {
                            $this.batch_tab_value.news.push(item);
                        }
                        else {
                            $this.batch_tab_value.news = [];
                            $this.batch_tab_value.news.push(item);
                        }
                    });
                }
            }
            else {
                // do nothing
            }
            console.log('Batch TAB vALUE####');
            console.log($this.batch_tab_value);
        });
    };
    GroupPage.prototype.get_time_diff = function (timestamp) {
        var current_time = Math.floor(new Date().getTime() / 1000);
        var time = Math.floor(current_time - parseInt(timestamp));
        return time;
    };
    GroupPage.prototype.get_start_end_date = function (start_date, end_date) {
        if (start_date === void 0) { start_date = ''; }
        if (end_date === void 0) { end_date = ''; }
        var months = this.config.batch.months;
        if (start_date) {
            var res_start_date = start_date.split("-");
            var new_start_date_month = months[Number(res_start_date[1] - 1)];
        }
        if (end_date) {
            var res_end_date = end_date.split("-");
            var new_end_date_month = months[Number(res_end_date[1] - 1)];
        }
        if (start_date && end_date) {
            return (res_start_date[2] + ' ' + new_start_date_month + ' ' + res_start_date[0] + ' - ' + res_end_date[2] + ' ' + new_end_date_month + ' ' + res_end_date[0]);
        }
        else if (start_date) {
            return (res_start_date[2] + ' ' + new_start_date_month + ' ' + res_start_date[0] + ' - ' + this.config.get_translation('continue'));
        }
        else if (end_date) {
            return (this.config.get_translation('now_to') + ' - ' + res_end_date[2] + ' ' + new_end_date_month + ' ' + res_end_date[0]);
        }
        else {
            return (this.config.get_translation('not_set'));
        }
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('GroupTabs'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["p" /* Slides */])
    ], GroupPage.prototype, "groupTabs", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('GroupSlides'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["p" /* Slides */])
    ], GroupPage.prototype, "groupSlides", void 0);
    GroupPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-group',template:/*ion-inline-start:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\pages\group\group.html"*/'<ion-header>\n    <ion-navbar  color="transparent" >\n        <ion-buttons start>\n            <button ion-button menuToggle>\n                <ion-icon name="md-menu"></ion-icon>\n            </button>\n        </ion-buttons>\n        <ion-title *ngIf="batchData">{{batchData.name}}</ion-title>\n            <ion-buttons end>\n                <button ion-button [navPush]="profilePage" [navParams]="userdata">\n                    <ion-icon name="md-contact" *ngIf="!config.isLoggedIn"></ion-icon>\n                    <img *ngIf="config.isLoggedIn" [src]="config.user?.avatar">\n                </button>\n            </ion-buttons>\n    </ion-navbar>\n</ion-header>\n<ion-content>\n    <div >\n        <div *ngIf="batchData">\n            <div>    \n                <lazy-img [inputSrc]="batchData.image"></lazy-img>\n            </div>\n        </div>\n        <ion-slides  *ngIf="batchData && batchData.tabs" dir="{{config.settings.rtl ? \'rtl\' : undefined }}" #GroupTabs id="grouptabs" spaceBetween="0" slidesPerView="3" (ionSlideDidChange)="onTabChanged()">\n            <ion-slide *ngFor="let tab of batchData.tabs; let i=index;" class="batch_tab_slide">\n                <button ion-button (click)="selectedTab(i,tab)" *ngIf="tab && tab.placeholder && tab.key">\n                   {{tab.placeholder}}\n                </button>\n            </ion-slide>\n        </ion-slides>\n\n        <div class="groupslides"*ngIf="batchData && batchData.tabs">  \n            <ion-refresher *ngIf="refresh_tab_ob[this.current_active_tab_key]" (ionRefresh)="doRefresh($event)">\n                <ion-refresher-content pullingText="{{config.get_translation(\'pull_to_refresh\')}}"\n              pullingIcon="arrow-dropdown"\n              refreshingSpinner="circles"\n              refreshingText="{{config.get_translation(\'refreshing\')}}"></ion-refresher-content>\n            </ion-refresher>\n            <ion-slides dir="{{config.settings.rtl ? \'rtl\' : undefined }}" id="groupslides" #GroupSlides (ionSlideDidChange)="onSlideChanged()">\n                <ion-slide *ngFor="let tab of batchData.tabs; let i=index;" class="batch_tab_value">\n                    <div class="batchslide" *ngIf="tab && tab.placeholder && tab.key">\n                            <div *ngIf="tab.key==\'description\'" class="{{tab.key}}">\n                                <div class="group_defaults">\n                                    <div class="members" *ngIf="batchData.settings">\n                                        <ion-icon name="people"></ion-icon>\n                                        <span *ngIf="batchData.settings.total_member_count">{{batchData.settings.total_member_count}}</span>\n                                        <span *ngIf="batchData.settings.batch_seats && batchData.settings.enable_seats ">/{{batchData.settings.batch_seats}}</span>\n                                    </div>\n                                   <div>\n                                        <span  [ngClass]="batchData.status">{{config.get_translation(batchData.status)}}</span>\n                                    </div> \n                                </div>\n                                <div class="batch_admin_mods">\n                                    <div class="admins" *ngIf="batchData.admins && batchData.admins.length">\n                                        <div class="admin_mod_title">{{config.get_translation(\'admins\')}}:</div>\n                                        <div class="group_members">\n                                            <div  *ngFor="let member of  batchData.admins; let j=index;">\n                                                <lazy-img [inputSrc]="member.image"></lazy-img>\n                                                <div><p [innerHtml]="member.nickname"></p></div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class="mods" *ngIf="batchData.mods && batchData.mods.length">\n                                        <div class="admin_mod_title">{{config.get_translation(\'mods\')}}:</div>\n                                        <div class="group_members">\n                                            <div  *ngFor="let member of  batchData.mods; let j=index;">\n                                                <lazy-img [inputSrc]="member.image"></lazy-img>\n                                                <div><p [innerHtml]="member.nickname"></p></div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class="batch_creds">\n                                    <div *ngIf="batchData.settings && batchData.settings.enable_batch_date" class="calendar_start_end">\n                                        <span>{{config.get_translation(\'start_end_dates\')}}:</span>\n                                        <ion-icon name="calendar"></ion-icon>\n                                        <strong>{{get_start_end_date(batchData.settings.start_batch_date,batchData.settings.end_batch_date)}}</strong>\n                                    </div>\n                                    \n                                    <div *ngIf="batchData.settings && batchData.settings.enable_off_schedule" class="enable_off_schedule">\n                                        <span>{{config.get_translation(\'weekly_schedule_off\')}}:</span>\n                                        <ul class="weekly_off_schedule" *ngIf="batchData.settings.weekly_off_schedule">\n                                            <li *ngFor="let sch of batchData.settings.weekly_off_schedule; let i=index">\n                                                {{config.batch.days[sch-1]}}\n                                            </li>\n                                        </ul>\n                                    </div>\n                                </div>\n                                <div class="batch_courses" *ngIf="batchData.courses">\n                                    <ion-grid>\n                                      <ion-row>\n                                        <ion-col col-12 col-sm-6 col-md-6 col-lg-4 col-xl-3 *ngFor="let lcourse of batchData.courses">\n                                            <ion-card>\n                                                <courseblock [course]="lcourse.data"></courseblock>\n                                            </ion-card>\n                                        </ion-col>\n                                      </ion-row>\n                                    </ion-grid>\n                                </div>\n                                <div class="group_desccription" [innerHtml]="batchData.description"></div>\n                            </div>\n                            <div *ngIf="tab.key==\'members\'">\n                                <div *ngIf="batch_tab_value && batch_tab_value.members">\n                                    <div class="group_members" *ngIf="batch_tab_value.members.length">\n                                        <div  *ngFor="let member of  batch_tab_value.members; let j=index;" class="{{tab.key}}">\n                                            <lazy-img [inputSrc]="member.image"></lazy-img>\n                                            <div><p [innerHtml]="member.nickname"></p></div>\n                                        </div>\n                                    </div>\n                                    <div *ngIf="!batch_tab_value.members.length">\n                                        <div class="message" [innerHtml]="this.config.get_translation(\'no_member_found\')"></div>\n                                    </div>\n                                </div>                              \n                            </div>\n                            <div *ngIf="tab.key==\'activity\'">\n                                <div *ngIf="batch_tab_value && batch_tab_value.activity" >\n                                    <ion-list id="activity" *ngIf="batch_tab_value.activity.length">\n                                        <ion-item *ngFor="let activity of  batch_tab_value.activity; let j=index;">\n                                            <span><friendlytime [time]="get_time_diff(activity.date)"></friendlytime></span>\n                                            <div [innerHtml]="activity.content"></div>\n                                        </ion-item>\n                                    </ion-list>\n                                    <div *ngIf="!batch_tab_value.activity.length">=\n                                        <div class="message" [innerHtml]="this.config.get_translation(\'no_activity_found\')"></div>\n                                    </div>   \n                                </div>\n\n                            </div>\n                            <div *ngIf="(tab.key==\'news\' && navData.is_batch)" >\n                                <div *ngIf="batch_tab_value && batch_tab_value.news" >\n                                    <div *ngIf="batch_tab_value.news.length">\n                                        <div  *ngFor="let news of  batch_tab_value.news; let k=index;" class="{{tab.key}}">\n                                            <div class="news_header">\n                                                <div class="news_author">\n                                                    <lazy-img [inputSrc]="news.user.image"></lazy-img>\n                                                    <span [innerHtml]="news.user.nickname"></span>\n                                                </div>\n                                                <div class="news_date">\n                                                   <friendlytime [time]="get_time_diff(news.date_recorded)"></friendlytime>\n                                                </div>\n                                            </div>\n                                            <div class="news_content">\n                                              <p [innerHtml]="news.content" class="content"></p>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div *ngIf="!batch_tab_value.news.length">\n                                        <div class="message" [innerHtml]="this.config.get_translation(\'no_news_found\')"></div>\n                                    </div>\n                                </div>\n                            </div>  \n                    </div>\n                </ion-slide>\n            </ion-slides>\n            <ion-infinite-scroll *ngIf="load_more_ob[this.current_active_tab_key]" (ionInfinite)="loadMore($event)">\n               <ion-infinite-scroll-content></ion-infinite-scroll-content>\n            </ion-infinite-scroll>\n        </div>\n    </div>\n</ion-content>'/*ion-inline-end:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\pages\group\group.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_3__services_config__["a" /* ConfigService */],
            __WEBPACK_IMPORTED_MODULE_5__services_group__["a" /* GroupService */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_4__services_course__["a" /* CourseService */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* ToastController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* LoadingController */]])
    ], GroupPage);
    return GroupPage;
}());

//# sourceMappingURL=group.js.map

/***/ }),

/***/ 556:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MemberPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_map__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__services_config__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__services_members__ = __webpack_require__(205);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__profile_profile__ = __webpack_require__(22);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__ionic_native_in_app_browser__ = __webpack_require__(58);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};







var MemberPage = /** @class */ (function () {
    function MemberPage(navCtrl, config, platform, membersService, navParams, nav, toastCtrl, loadingCtrl, iab) {
        this.navCtrl = navCtrl;
        this.config = config;
        this.platform = platform;
        this.membersService = membersService;
        this.navParams = navParams;
        this.nav = nav;
        this.toastCtrl = toastCtrl;
        this.loadingCtrl = loadingCtrl;
        this.iab = iab;
        this.profilePage = __WEBPACK_IMPORTED_MODULE_5__profile_profile__["a" /* ProfilePage */];
    }
    MemberPage.prototype.ngOnInit = function () {
        var $this = this;
        console.log(this.navParams.data);
        this.navData = this.navParams.data; // it containes member object
        this.current_member_id = this.navData.ID; // this is current member id for this page
        var loading = this.loadingCtrl.create({
            content: '<img src="assets/images/bubbles.svg">',
            duration: 5000,
            spinner: 'hide',
            showBackdrop: true,
        });
        this.get_member_profile_details(this.current_member_id, false).then(function (res) {
            $this.current_member_details = res;
            loading.dismiss();
            console.log('res on init');
            console.log(res);
        });
    };
    MemberPage.prototype.get_member_profile_details = function (current_member_id, refresh) {
        if (refresh === void 0) { refresh = false; }
        var $this = this;
        return new Promise(function (resolve) {
            $this.membersService.get_member_profile_details(current_member_id, refresh).then(function (response) {
                resolve(response);
            });
        });
    };
    MemberPage.prototype.triggerCertificateInBrowser = function (url) {
        var _this = this;
        this.platform.ready().then(function () {
            _this.iab.create(url, "_blank");
        });
    };
    MemberPage.prototype.checkImage = function (d) {
        return d.match(/.+\.(jpeg|jpg)$/);
    };
    MemberPage.prototype.triggerImage = function (url, title) {
        //this.photoViewer.show(url,title);
    };
    MemberPage.prototype.doRefresh = function ($event) {
        var $this = this;
        this.get_member_profile_details(this.current_member_id, true).then(function (res) {
            console.log('doRefresh');
            console.log(res);
            $this.current_member_details = res;
            $event.complete();
        });
    };
    MemberPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-member',template:/*ion-inline-start:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\pages\member\member.html"*/'<ion-header>\n    <ion-navbar color="transparent">\n        <ion-buttons start>\n            <button ion-button menuToggle>\n                <ion-icon name="md-menu"></ion-icon>\n            </button>\n        </ion-buttons>\n        <ion-title *ngIf="current_member_details && current_member_details.user">{{current_member_details.user.user_nicename}}</ion-title>\n    </ion-navbar>\n</ion-header>\n<ion-content>\n    <ion-refresher (ionRefresh)="doRefresh($event)">\n        <ion-refresher-content pullingText="{{config.get_translation(\'pull_to_refresh\')}}"\n          pullingIcon="arrow-dropdown"\n          refreshingSpinner="circles"\n          refreshingText="{{config.get_translation(\'refreshing\')}}"></ion-refresher-content>\n    </ion-refresher>\n    <div *ngIf="current_member_details" class="current_member_details">\n        <div *ngIf="current_member_details.image" class="avatar">\n            <lazy-img [inputSrc]="current_member_details.image"></lazy-img>\n        </div>\n        <div *ngIf="current_member_details.module && current_member_details.module.length">\n            <div *ngFor="let module of current_member_details.module">\n                <div *ngIf="module.key==\'courses\'" class="courses">\n                	<p class="label" [innerHtml]= "module.label"></p>\n                	<p class="value" [innerHtml]= "module.value"></p>\n                </div>\n                <div *ngIf="module.key==\'quizzes\'" class="quizzes">\n                    <p class="label" [innerHtml]= "module.label"></p>\n                	<p class="value" [innerHtml]= "module.value"></p>\n                </div>\n                <div *ngIf="module.key==\'certificates\'" class="certificates">\n                     <div>Certificates</div>\n                	<ion-slides dir="{{config.settings.rtl ? \'rtl\' : undefined }}" *ngIf="module.value.length"  slidesPerView="3" spaceBetween="10">\n           				<ion-slide *ngFor="let obj of module.value" class="certificates_image">\n           				 	<img [src]="obj.value" *ngIf="checkImage(obj.value)" (click)="triggerImage(obj.value)">\n						    <ion-icon name="md-easel"  *ngIf="!checkImage(obj.value)" (click)="triggerCertificateInBrowser(obj.value)"></ion-icon>\n           				</ion-slide>\n           			</ion-slides>\n                </div>\n                <div *ngIf="module.key==\'badges\'" class="badges">\n                    <div>Badges</div>\n                    <ion-slides dir="{{config.settings.rtl ? \'rtl\' : undefined }}" *ngIf="module.value.length"  slidesPerView="3" spaceBetween="10">\n                        <ion-slide *ngFor="let obj of module.value" class="badges_image">\n                            <img [src]="obj.value" *ngIf="checkImage(obj.value)" (click)="triggerImage(obj.value)">\n                            <ion-icon name="md-easel"  *ngIf="!checkImage(obj.value)" (click)="triggerCertificateInBrowser(obj.value)"></ion-icon>\n                        </ion-slide>\n                    </ion-slides>\n                </div>\n            </div>\n        </div>\n        <div id="user_details" >\n        	<ion-list *ngIf="current_member_details.user">\n        		<div *ngFor="let group of current_member_details.user">\n					<ion-list-header>\n					    {{group.name}}\n				  	</ion-list-header>\n				    <ion-item *ngFor="let field of group.fields">\n				        <ion-label>{{field.name}}</ion-label>\n			  			<div [innerHtml]="field.value" item-content \n			  			></div>	\n				    </ion-item>\n		  		</div>\n			</ion-list>\n        </div>\n\n    </div>\n\n\n</ion-content>'/*ion-inline-end:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\pages\member\member.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_3__services_config__["a" /* ConfigService */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["o" /* Platform */],
            __WEBPACK_IMPORTED_MODULE_4__services_members__["a" /* MembersService */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* ToastController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* LoadingController */],
            __WEBPACK_IMPORTED_MODULE_6__ionic_native_in_app_browser__["a" /* InAppBrowser */]])
    ], MemberPage);
    return MemberPage;
}());

//# sourceMappingURL=member.js.map

/***/ }),

/***/ 557:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ReplydirectoryPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_map__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__services_config__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__services_forum__ = __webpack_require__(48);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__profile_profile__ = __webpack_require__(22);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__angular_forms__ = __webpack_require__(17);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};







var ReplydirectoryPage = /** @class */ (function () {
    function ReplydirectoryPage(navCtrl, config, forumService, navParams, nav, toastCtrl, loadingCtrl, alertCtrl, formBuilder) {
        this.navCtrl = navCtrl;
        this.config = config;
        this.forumService = forumService;
        this.navParams = navParams;
        this.nav = nav;
        this.toastCtrl = toastCtrl;
        this.loadingCtrl = loadingCtrl;
        this.alertCtrl = alertCtrl;
        this.formBuilder = formBuilder;
        this.profilePage = __WEBPACK_IMPORTED_MODULE_5__profile_profile__["a" /* ProfilePage */];
        this.loadmore = 1;
        /* filter options */
        this.sortby = '';
        this.filterby = '';
        /* search options */
        this.searchTerm = '';
        /* new reply form */
        this.new_reply_form_visible = false;
        /* Edit reply form */
        this.editreply_form_visible = false;
        this.new_reply = formBuilder.group({
            post_content: new __WEBPACK_IMPORTED_MODULE_6__angular_forms__["b" /* FormControl */]('', __WEBPACK_IMPORTED_MODULE_6__angular_forms__["i" /* Validators */].compose([
                __WEBPACK_IMPORTED_MODULE_6__angular_forms__["i" /* Validators */].required
            ]))
        });
        this.edit_reply = formBuilder.group({
            post_content: new __WEBPACK_IMPORTED_MODULE_6__angular_forms__["b" /* FormControl */]('', __WEBPACK_IMPORTED_MODULE_6__angular_forms__["i" /* Validators */].compose([
                __WEBPACK_IMPORTED_MODULE_6__angular_forms__["i" /* Validators */].required
            ]))
        });
    }
    ReplydirectoryPage.prototype.ngOnInit = function () {
        var $this = this;
        this.navData = this.navParams.data;
        this.topic = this.navData;
        this.args = this.set_start();
        this.loadmore = 0;
        this.get_replies('ngoninit', this.args).then(function (resolve) {
            if (Array.isArray(resolve) && (resolve.length == $this.config.forum.limit)) {
                $this.loadmore = 1;
            }
        });
    };
    ReplydirectoryPage.prototype.doRefresh = function ($event) {
        var $this = this;
        console.log('refresh');
        this.args = this.set_start();
        this.loadmore = 0;
        this.get_replies('refresh', this.args).then(function (resolve) {
            if (Array.isArray(resolve) && (resolve.length == $this.config.forum.limit)) {
                $this.loadmore = 1;
            }
            $event.complete();
        });
        this.reset();
    };
    ReplydirectoryPage.prototype.doInfinite = function ($event) {
        var $this = this;
        $this.loadmore = 0;
        this.get_replies('infinite', this.args).then(function (resolve) {
            if (Array.isArray(resolve) && (resolve.length == $this.config.forum.limit)) {
                $this.loadmore = 1;
            }
            $event.complete();
        });
    };
    /* Search by keyword */
    ReplydirectoryPage.prototype.onSearchInput = function () {
        var $this = this;
        if (this.searchTerm) {
            if (this.searchTerm.length >= 3) {
                // make api hit
                this.args = this.set_start();
                this.args.title = this.searchTerm;
                this.loadmore = 0;
                this.get_replies('search', this.args).then(function (resolve) {
                    if (Array.isArray(resolve) && (resolve.length == $this.config.batch.limit)) {
                        $this.loadmore = 1;
                    }
                });
            }
            else {
                // do nothing
            }
        }
    };
    ReplydirectoryPage.prototype.get_replies = function (activity, args) {
        var $this = this;
        // let loading = this.loadingCtrl.create({
        //     content: '<img src="assets/images/bubbles.svg">',
        //     duration: 3000,//this.config.get_translation('loadingresults'),
        //     spinner: 'hide',
        //     showBackdrop: true,
        // });
        // loading.present();
        return new Promise(function (resolve) {
            $this.forumService.get_all_replies(activity, args).then(function (res) {
                //loading.dismiss();
                resolve(res);
            });
        });
    };
    ReplydirectoryPage.prototype.set_start = function () {
        return {
            'post_parent': this.navData.ID,
            'posts_per_page': this.config.forum.limit,
            'paged': this.config.forum.paged,
            'order': 'DESC'
        };
    };
    ReplydirectoryPage.prototype.reset = function () {
        this.sortby = '';
        this.filterby = '';
        this.searchTerm = '';
    };
    /* sort by groups and batches */
    ReplydirectoryPage.prototype.onSortOptions = function ($event) {
        var $this = this;
        this.args = this.set_start();
        this.args.order = $event;
        $this.loadmore = 0;
        this.get_replies('sort', this.args).then(function (resolve) {
            if (Array.isArray(resolve) && (resolve.length == $this.config.batch.limit)) {
                $this.loadmore = 1;
            }
        });
    };
    /* filter by alphabet , lastActive , newlyCreated  and mostMembers */
    ReplydirectoryPage.prototype.onFilterOptions = function ($event) {
        var $this = this;
        this.filterby = $event;
        var args = { 'filterby': this.filterby };
        this.args = args;
        $this.loadmore = 0;
        this.get_replies('type', args).then(function (resolve) {
            if (Array.isArray(resolve) && (resolve.length == $this.config.batch.limit)) {
                $this.loadmore = 1;
            }
        });
    };
    ReplydirectoryPage.prototype.ionViewDidLoad = function () {
        this.sortSelectOptions = {
            title: this.config.get_translation('sort_options'),
            okText: this.config.get_translation('okay'),
            cancelText: this.config.get_translation('dismiss'),
        };
        this.filterSelectOptions = {
            title: this.config.get_translation('filter_options'),
            okText: this.config.get_translation('okay'),
            cancelText: this.config.get_translation('dismiss'),
        };
    };
    ReplydirectoryPage.prototype.toggle_form = function () {
        this.new_reply_form_visible = !this.new_reply_form_visible;
    };
    ReplydirectoryPage.prototype.logForm = function () {
        var _this = this;
        var $this = this;
        var toast = this.toastCtrl.create({
            message: this.config.get_translation('creating'),
            duration: 1000,
            position: 'bottom'
        });
        toast.present();
        this.toggle_form(); //toggle form hide and view
        // create _data format to send to api body
        var data = {};
        data.post_content = this.new_reply.value.post_content;
        data.topic_id = $this.navData.ID;
        data.forum_id = $this.navData.post_parent;
        $this.forumService.create_reply(data).then(function (res) {
            if (res.status) {
                var toast_1 = _this.toastCtrl.create({
                    message: res.message,
                    duration: 1000,
                    position: 'bottom'
                });
                toast_1.present();
            }
            else {
                var toast_2 = _this.toastCtrl.create({
                    message: res.message,
                    duration: 1000,
                    position: 'bottom'
                });
                toast_2.present();
            }
        });
    };
    ReplydirectoryPage.prototype.toggle_edit_form = function () {
        this.editreply_form_visible = !this.editreply_form_visible;
    };
    ReplydirectoryPage.prototype.editreply = function (ev) {
        this.editreply_form_visible = !this.editreply_form_visible;
        this.edit_reply.value.post_content = ev.post_content;
        this.current_editable_reply = ev;
    };
    ReplydirectoryPage.prototype.edit_replyForm = function () {
        var _this = this;
        var $this = this;
        var toast = this.toastCtrl.create({
            message: this.config.get_translation('updating'),
            duration: 1000,
            position: 'bottom'
        });
        toast.present();
        this.toggle_edit_form(); // toggle form view
        var reply = $this.current_editable_reply; // this is current reply obj
        var $topic = $this.navData;
        var new_content = this.edit_reply.value.post_content; // new content of reply
        // create _data format to send to api body
        var data = {};
        data.new_content = new_content;
        data.reply_id = reply.ID;
        data.topic_id = $this.navData.ID;
        data.forum_id = $this.navData.post_parent;
        // make api hit to edit
        $this.forumService.editreply(data).then(function (res) {
            if (res.status) {
                var toast_3 = _this.toastCtrl.create({
                    message: res.message,
                    duration: 1000,
                    position: 'bottom'
                });
                toast_3.present();
            }
            else {
                var toast_4 = _this.toastCtrl.create({
                    message: res.message,
                    duration: 1000,
                    position: 'bottom'
                });
                toast_4.present();
            }
        });
    };
    ReplydirectoryPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-replydirectory',template:/*ion-inline-start:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\pages\replydirectory\replydirectory.html"*/'<ion-header>\n    <ion-navbar color="transparent">\n        <ion-buttons start>\n            <button ion-button menuToggle>\n                <ion-icon name="md-menu"></ion-icon>\n            </button>\n        </ion-buttons>\n        <ion-title *ngIf="!navData.post_title">{{config.get_translation(\'reply_directory\')}}</ion-title>\n        <ion-title *ngIf="navData.post_title">{{navData.post_title}}</ion-title>\n        <ion-buttons end>\n            <button ion-button [navPush]="profilePage" [navParams]="userdata">\n                <ion-icon name="md-contact" *ngIf="!config.isLoggedIn"></ion-icon>\n                <img *ngIf="config.isLoggedIn" [src]="config.user?.avatar">\n            </button>\n        </ion-buttons>\n    </ion-navbar>\n    <div class="fixed-header">\n        <div *ngIf="topic" class="first_content">\n            <ReplyBlock [reply]="topic" [edit]="false" [delete]="false" [is_topic]="true"></ReplyBlock>\n        </div>\n    </div>\n</ion-header>\n\n<ion-content padding>\n    <div>\n        <ion-refresher (ionRefresh)="doRefresh($event)">\n            <ion-refresher-content pullingText="{{config.get_translation(\'pull_to_refresh\')}}" pullingIcon="arrow-dropdown"\n                refreshingSpinner="circles" refreshingText="{{config.get_translation(\'refreshing\')}}">\n            </ion-refresher-content>\n        </ion-refresher>\n    </div>    \n    <div>\n        <div *ngIf="forumService.all_replies && forumService.all_replies.length" class="all_replies">\n            <div *ngFor="let reply of forumService.all_replies">\n                <ReplyBlock [reply]="reply" (edit_form)="editreply($event)" [edit]="true" [delete]="true"></ReplyBlock>\n            </div>\n        </div>\n        <div *ngIf="!(forumService.all_replies && forumService.all_replies.length)" class="all_replies">\n            <div class="message" [innerHtml]="this.config.get_translation(\'reply_not_found\')"></div>\n        </div>\n    </div>\n    <ion-infinite-scroll *ngIf="loadmore" (ionInfinite)="doInfinite($event)" position="top">\n        <ion-infinite-scroll-content></ion-infinite-scroll-content>\n    </ion-infinite-scroll>\n</ion-content>\n\n<ion-footer>\n    <div class="create_form" *ngIf="new_reply_form_visible">\n        <form [formGroup]="new_reply" (ngSubmit)="logForm()">\n            <ion-item>\n                <ion-label floating>{{config.get_translation(\'reply_content\')}}</ion-label>\n                <ion-textarea formControlName="post_content"></ion-textarea>\n            </ion-item>\n            <ion-item>\n                <button ion-button type="submit" block\n                    [disabled]="!new_reply.valid">{{config.get_translation(\'create\')}}</button>\n            </ion-item>\n        </form>\n    </div>\n    <div class="create_form" *ngIf="editreply_form_visible">\n        <form [formGroup]="edit_reply" (ngSubmit)="edit_replyForm()">\n            <ion-item>\n                <ion-label floating>{{config.get_translation(\'edit_content\')}}</ion-label>\n                <ion-textarea formControlName="post_content" [value]="current_editable_reply.post_content">\n                </ion-textarea>\n            </ion-item>\n            <ion-item>\n                <button ion-button type="submit" block\n                    [disabled]="!edit_reply.valid">{{config.get_translation(\'update\')}}</button>\n            </ion-item>\n        </form>\n    </div>\n    <ion-row>\n        <ion-col>\n            <div class="filter_sort_select">\n                <ion-item>\n                    <ion-select placeholder="{{this.config.get_translation(\'sort_options\')}}"\n                        (ionChange)="onSortOptions($event)" [selectOptions]="sortSelectOptions" [(ngModel)]="sortby"\n                        okText="{{config.get_translation(\'ok\')}}" cancelText="{{config.get_translation(\'cancel\')}}">\n                        <ion-option value="ASC">{{this.config.get_translation(\'oldest_post_first\')}}</ion-option>\n                        <ion-option value="DESC">{{this.config.get_translation(\'latest_post_first\')}}</ion-option>\n                    </ion-select>\n                </ion-item>\n            </div>\n        </ion-col>\n        <ion-col *ngIf="config.isLoggedIn">\n            <div>\n                <button ion-button full icon-left\n                    (click)="toggle_form()">{{config.get_translation(\'create_reply\')}}</button>\n            </div>\n        </ion-col>\n        <ion-col *ngIf="config.isLoggedIn && editreply_form_visible">\n            <div>\n                <button ion-button full icon-left\n                    (click)="toggle_edit_form()">{{config.get_translation(\'edit_reply\')}}</button>\n            </div>\n        </ion-col>\n    </ion-row>\n</ion-footer>'/*ion-inline-end:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\pages\replydirectory\replydirectory.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_3__services_config__["a" /* ConfigService */],
            __WEBPACK_IMPORTED_MODULE_4__services_forum__["a" /* ForumService */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* ToastController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* LoadingController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */],
            __WEBPACK_IMPORTED_MODULE_6__angular_forms__["a" /* FormBuilder */]])
    ], ReplydirectoryPage);
    return ReplydirectoryPage;
}());

//# sourceMappingURL=replydirectory.js.map

/***/ }),

/***/ 57:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TabsPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__home_home__ = __webpack_require__(316);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__contact_contact__ = __webpack_require__(188);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__course_status_course_status__ = __webpack_require__(116);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__profile_profile__ = __webpack_require__(22);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__directory_directory__ = __webpack_require__(72);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__wallet_wallet__ = __webpack_require__(464);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__chat_chat__ = __webpack_require__(465);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__message_message__ = __webpack_require__(121);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__wishlist_wishlist__ = __webpack_require__(466);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__updates_updates__ = __webpack_require__(467);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__services_config__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__ionic_storage__ = __webpack_require__(11);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};














var TabsPage = /** @class */ (function () {
    function TabsPage(nav, navParams, config, app, storage) {
        this.nav = nav;
        this.navParams = navParams;
        this.config = config;
        this.app = app;
        this.storage = storage;
        this.home = __WEBPACK_IMPORTED_MODULE_2__home_home__["a" /* HomePage */];
        this.profileTab = __WEBPACK_IMPORTED_MODULE_5__profile_profile__["a" /* ProfilePage */];
        this.courseStatus = __WEBPACK_IMPORTED_MODULE_4__course_status_course_status__["a" /* CourseStatusPage */];
        this.stats = __WEBPACK_IMPORTED_MODULE_3__contact_contact__["a" /* ContactPage */];
        this.wishlist = __WEBPACK_IMPORTED_MODULE_10__wishlist_wishlist__["a" /* WishlistPage */];
        this.directoryPage = __WEBPACK_IMPORTED_MODULE_6__directory_directory__["a" /* DirectoryPage */];
        this.updates = __WEBPACK_IMPORTED_MODULE_11__updates_updates__["a" /* UpdatesPage */];
        this.wallet = __WEBPACK_IMPORTED_MODULE_7__wallet_wallet__["a" /* WalletPage */];
        this.chat = __WEBPACK_IMPORTED_MODULE_8__chat_chat__["a" /* ChatPage */];
        this.message = __WEBPACK_IMPORTED_MODULE_9__message_message__["a" /* MessagePage */];
        this.myIndex = 0;
        if (navParams.data.index) {
            this.myIndex = navParams.data.index;
        }
    }
    TabsPage.prototype.ionViewDidEnter = function () {
        this.config.updateUser();
        this.config.getLastCourse();
    };
    TabsPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({template:/*ion-inline-start:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\pages\tabs\tabs.html"*/'<ion-tabs color="white" *ngIf="config.isLoggedIn" [selectedIndex]="myIndex">\n    <ion-tab [root]="home" tabIcon="md-home"></ion-tab>\n    <ion-tab [root]="directoryPage" tabIcon="md-list"></ion-tab> \n    <ion-tab [root]="profileTab" tabIcon="md-contact" [rootParams]="userdata">  </ion-tab>\n    <ion-tab [root]="courseStatus" [rootParams]="config.lastCourse"  *ngIf="config.lastCourse && config.settings.access_token" tabIcon="md-play"></ion-tab>\n    <ion-tab [root]="updates" tabIcon="md-notifications-outline" [tabBadge]="config.unread_notifications_count>0?config.unread_notifications_count:null"></ion-tab>\n    <ion-tab [root]="wishlist" tabIcon="md-heart-outline"></ion-tab>\n     <ion-tab *ngIf="config.chat.enable_chat" [root]="chat" tabIcon="ios-chatboxes-outline"></ion-tab>\n    <ion-tab [root]="wallet" tabIcon="ios-card" *ngIf="config.settings.wallet">\n   \n  </ion-tab>\n  \n</ion-tabs>\n<ion-tabs color="white" *ngIf="!config.isLoggedIn" [selectedIndex]="myIndex">\n  \n    <ion-tab [root]="home" tabIcon="md-home"></ion-tab>\n    <ion-tab [root]="directoryPage" tabIcon="md-list"></ion-tab>\n    <ion-tab [root]="profileTab" tabIcon="md-contact"></ion-tab>\n    <ion-tab [root]="updates" tabIcon="md-notifications-outline" [tabBadge]="config.unread_notifications_count>0?config.unread_notifications_count:null"></ion-tab>\n  <ion-tab [root]="wishlist" tabIcon="md-heart-outline"></ion-tab>\n  <ion-tab *ngIf="config.chat.enable_chat" [root]="chat" tabIcon="ios-chatboxes-outline"></ion-tab>\n</ion-tabs>'/*ion-inline-end:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\pages\tabs\tabs.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_12__services_config__["a" /* ConfigService */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["c" /* App */],
            __WEBPACK_IMPORTED_MODULE_13__ionic_storage__["b" /* Storage */]])
    ], TabsPage);
    return TabsPage;
}());

//# sourceMappingURL=tabs.js.map

/***/ }),

/***/ 577:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TopicdirectoryPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_map__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__services_config__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__services_forum__ = __webpack_require__(48);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__profile_profile__ = __webpack_require__(22);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__angular_forms__ = __webpack_require__(17);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};







var TopicdirectoryPage = /** @class */ (function () {
    function TopicdirectoryPage(navCtrl, config, forumService, navParams, nav, toastCtrl, loadingCtrl, alertCtrl, formBuilder) {
        this.navCtrl = navCtrl;
        this.config = config;
        this.forumService = forumService;
        this.navParams = navParams;
        this.nav = nav;
        this.toastCtrl = toastCtrl;
        this.loadingCtrl = loadingCtrl;
        this.alertCtrl = alertCtrl;
        this.formBuilder = formBuilder;
        this.profilePage = __WEBPACK_IMPORTED_MODULE_5__profile_profile__["a" /* ProfilePage */];
        this.loadmore = 1;
        /* filter options */
        this.sortby = '';
        this.filterby = '';
        /* search options */
        this.searchTerm = '';
        /* form */
        this.form_visible = false;
        this.new_topic = formBuilder.group({
            post_title: new __WEBPACK_IMPORTED_MODULE_6__angular_forms__["b" /* FormControl */]('', __WEBPACK_IMPORTED_MODULE_6__angular_forms__["i" /* Validators */].compose([
                __WEBPACK_IMPORTED_MODULE_6__angular_forms__["i" /* Validators */].required
            ])),
            post_content: new __WEBPACK_IMPORTED_MODULE_6__angular_forms__["b" /* FormControl */]('', __WEBPACK_IMPORTED_MODULE_6__angular_forms__["i" /* Validators */].compose([
                __WEBPACK_IMPORTED_MODULE_6__angular_forms__["i" /* Validators */].required
            ]))
        });
    }
    TopicdirectoryPage.prototype.ngOnInit = function () {
        var $this = this;
        this.navData = this.navParams.data;
        this.args = this.set_start();
        this.loadmore = 0;
        var loading = this.loadingCtrl.create({
            content: '<img src="assets/images/bubbles.svg">',
            duration: 3000,
            spinner: 'hide',
            showBackdrop: true,
        });
        loading.present();
        this.get_topics('ngoninit', this.args).then(function (resolve) {
            loading.dismiss();
            if (Array.isArray(resolve) && (resolve.length == $this.config.forum.limit)) {
                $this.loadmore = 1;
            }
        });
    };
    TopicdirectoryPage.prototype.doRefresh = function ($event) {
        var $this = this;
        console.log('refresh');
        this.args = this.set_start();
        this.loadmore = 0;
        this.get_topics('refresh', this.args).then(function (resolve) {
            if (Array.isArray(resolve) && (resolve.length == $this.config.forum.limit)) {
                $this.loadmore = 1;
            }
            $event.complete();
        });
        this.reset();
    };
    TopicdirectoryPage.prototype.doInfinite = function ($event) {
        var $this = this;
        $this.loadmore = 0;
        this.get_topics('infinite', this.args).then(function (resolve) {
            if (Array.isArray(resolve) && (resolve.length == $this.config.forum.limit)) {
                $this.loadmore = 1;
            }
            $event.complete();
        });
    };
    /* Search by keyword */
    TopicdirectoryPage.prototype.onSearchInput = function () {
        var $this = this;
        if (this.searchTerm) {
            if (this.searchTerm.length >= 3) {
                // make api hit
                this.args = this.set_start();
                this.args.title = this.searchTerm;
                this.loadmore = 0;
                this.get_topics('search', this.args).then(function (resolve) {
                    if (Array.isArray(resolve) && (resolve.length == $this.config.batch.limit)) {
                        $this.loadmore = 1;
                    }
                });
            }
            else {
                // do nothing
            }
        }
    };
    TopicdirectoryPage.prototype.get_topics = function (activity, args) {
        var $this = this;
        var loading = this.loadingCtrl.create({
            content: '<img src="assets/images/bubbles.svg">',
            duration: 3000,
            spinner: 'hide',
            showBackdrop: true,
        });
        loading.present();
        return new Promise(function (resolve) {
            $this.forumService.get_all_topics(activity, args).then(function (res) {
                loading.dismiss();
                resolve(res);
            });
        });
    };
    TopicdirectoryPage.prototype.set_start = function () {
        return {
            'post_parent': this.navData.ID,
            'posts_per_page': this.config.forum.limit,
            'paged': this.config.forum.paged
        };
    };
    TopicdirectoryPage.prototype.reset = function () {
        this.sortby = '';
        this.filterby = '';
        this.searchTerm = '';
    };
    /* sort by groups and batches */
    TopicdirectoryPage.prototype.onSortOptions = function ($event) {
        var $this = this;
        this.args = this.set_start();
        this.args.order = $event;
        $this.loadmore = 0;
        this.get_topics('sort', this.args).then(function (resolve) {
            if (Array.isArray(resolve) && (resolve.length == $this.config.batch.limit)) {
                $this.loadmore = 1;
            }
        });
    };
    /* filter by alphabet , lastActive , newlyCreated  and mostMembers */
    TopicdirectoryPage.prototype.onFilterOptions = function ($event) {
        var $this = this;
        this.filterby = $event;
        var args = { 'filterby': this.filterby };
        this.args = args;
        $this.loadmore = 0;
        this.get_topics('type', args).then(function (resolve) {
            if (Array.isArray(resolve) && (resolve.length == $this.config.batch.limit)) {
                $this.loadmore = 1;
            }
        });
    };
    TopicdirectoryPage.prototype.ionViewDidLoad = function () {
        this.sortSelectOptions = {
            title: this.config.get_translation('sort_options'),
            okText: this.config.get_translation('okay'),
            cancelText: this.config.get_translation('dismiss'),
        };
        this.filterSelectOptions = {
            title: this.config.get_translation('filter_options'),
            okText: this.config.get_translation('okay'),
            cancelText: this.config.get_translation('dismiss'),
        };
    };
    TopicdirectoryPage.prototype.toggle_form = function () {
        this.form_visible = !this.form_visible;
    };
    TopicdirectoryPage.prototype.logForm = function () {
        var _this = this;
        var $this = this;
        var toast = this.toastCtrl.create({
            message: this.config.get_translation('creating'),
            duration: 1000,
            position: 'bottom'
        });
        toast.present();
        $this.toggle_form();
        // create _data format to send to api body
        var data = {};
        data.post_title = this.new_topic.value.post_title;
        data.post_content = this.new_topic.value.post_content;
        data.forum_id = $this.navData.ID;
        $this.forumService.create_topic(data).then(function (res) {
            if (res.status) {
                var toast_1 = _this.toastCtrl.create({
                    message: res.message,
                    duration: 1000,
                    position: 'bottom'
                });
                toast_1.present();
            }
            else {
                var toast_2 = _this.toastCtrl.create({
                    message: res.message,
                    duration: 1000,
                    position: 'bottom'
                });
                toast_2.present();
            }
        });
    };
    TopicdirectoryPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-topicirectory',template:/*ion-inline-start:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\pages\topicdirectory\topicdirectory.html"*/'<ion-header>\n    <ion-navbar color="transparent">\n        <ion-buttons start>\n            <button ion-button menuToggle>\n                <ion-icon name="md-menu"></ion-icon>\n            </button>\n        </ion-buttons>\n        <ion-title *ngIf="!navData.post_title">{{config.get_translation(\'topic_directory\')}}</ion-title>\n        <ion-title *ngIf="navData.post_title">{{navData.post_title}}</ion-title>\n        <ion-buttons end>\n            <button ion-button [navPush]="profilePage" [navParams]="userdata">\n                <ion-icon name="md-contact" *ngIf="!config.isLoggedIn"></ion-icon>\n                <img *ngIf="config.isLoggedIn" [src]="config.user?.avatar">\n            </button>\n        </ion-buttons>\n    </ion-navbar>\n</ion-header>\n<ion-content padding>\n    <ion-refresher (ionRefresh)="doRefresh($event)">\n        <ion-refresher-content pullingText="{{config.get_translation(\'pull_to_refresh\')}}" pullingIcon="arrow-dropdown"\n            refreshingSpinner="circles" refreshingText="{{config.get_translation(\'refreshing\')}}">\n        </ion-refresher-content>\n    </ion-refresher>\n    <ion-row>\n        <ion-col>\n            <div class="filter_sort_select">\n                <ion-item>\n                    <ion-select placeholder="{{this.config.get_translation(\'sort_options\')}}"\n                        (ionChange)="onSortOptions($event)" [selectOptions]="sortSelectOptions" [(ngModel)]="sortby"\n                        okText="{{config.get_translation(\'ok\')}}" cancelText="{{config.get_translation(\'cancel\')}}">\n                        <ion-option value="ASC">{{this.config.get_translation(\'oldest_post_first\')}}</ion-option>\n                        <ion-option value="DESC">{{this.config.get_translation(\'latest_post_first\')}}</ion-option>\n                    </ion-select>\n                </ion-item>\n            </div>\n        </ion-col>\n        <ion-col *ngIf="config.isLoggedIn">\n            <button ion-button full icon-left\n                (click)="toggle_form()">{{config.get_translation(\'create_topic\')}}</button>\n        </ion-col>\n    </ion-row>\n    <ion-row class="search_groups">\n        <ion-searchbar [(ngModel)]="searchTerm" debounced-input\n            placeholder="{{config.get_translation(\'directory_search_placeholder\')}}" (ionInput)="onSearchInput()">\n        </ion-searchbar>\n    </ion-row>\n\n    <div class="create_form" *ngIf="form_visible">\n        <form [formGroup]="new_topic" (ngSubmit)="logForm()">\n            <ion-item>\n                <ion-label floating>{{config.get_translation(\'topic_title\')}}</ion-label>\n                <ion-textarea formControlName="post_title"></ion-textarea>\n            </ion-item>\n            <ion-item>\n                <ion-label floating>{{config.get_translation(\'topic_content\')}}</ion-label>\n                <ion-textarea formControlName="post_content"></ion-textarea>\n            </ion-item>\n            <ion-item>\n                <button ion-button type="submit" block\n                    [disabled]="!new_topic.valid">{{config.get_translation(\'send_message\')}}</button>\n            </ion-item>\n        </form>\n    </div>\n    <div>\n        <div *ngIf="forumService.all_topics && forumService.all_topics.length" class="all_topics">\n            <div *ngFor="let topic of forumService.all_topics">\n                <TopicBlock [topic]="topic"></TopicBlock>\n            </div>\n        </div>\n        <div *ngIf="!(forumService.all_topics && forumService.all_topics.length)" class="all_topics">\n            <div class="message" [innerHtml]="this.config.get_translation(\'topic_not_found\')"></div>\n        </div>\n    </div>\n    <ion-infinite-scroll *ngIf="loadmore" (ionInfinite)="doInfinite($event)">\n        <ion-infinite-scroll-content></ion-infinite-scroll-content>\n    </ion-infinite-scroll>\n</ion-content>'/*ion-inline-end:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\pages\topicdirectory\topicdirectory.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_3__services_config__["a" /* ConfigService */],
            __WEBPACK_IMPORTED_MODULE_4__services_forum__["a" /* ForumService */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* ToastController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* LoadingController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */],
            __WEBPACK_IMPORTED_MODULE_6__angular_forms__["a" /* FormBuilder */]])
    ], TopicdirectoryPage);
    return TopicdirectoryPage;
}());

//# sourceMappingURL=topicdirectory.js.map

/***/ }),

/***/ 578:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AttendancePage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(6);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


/**
 * Generated class for the AttendancePage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var AttendancePage = /** @class */ (function () {
    function AttendancePage(navCtrl, navParams) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
    }
    AttendancePage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad AttendancePage');
    };
    AttendancePage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-attendance',template:/*ion-inline-start:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\pages\attendance\attendance.html"*/'<!--\n  Generated template for the AttendancePage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n\n  <ion-navbar>\n    <ion-title>attendance</ion-title>\n  </ion-navbar>\n\n</ion-header>\n\n\n<ion-content padding>\n\n</ion-content>\n'/*ion-inline-end:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\pages\attendance\attendance.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */]])
    ], AttendancePage);
    return AttendancePage;
}());

//# sourceMappingURL=attendance.js.map

/***/ }),

/***/ 579:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_platform_browser_dynamic__ = __webpack_require__(580);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__app_module__ = __webpack_require__(584);


Object(__WEBPACK_IMPORTED_MODULE_0__angular_platform_browser_dynamic__["a" /* platformBrowserDynamic */])().bootstrapModule(__WEBPACK_IMPORTED_MODULE_1__app_module__["a" /* AppModule */]);
//# sourceMappingURL=main.js.map

/***/ }),

/***/ 584:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AppModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__app_component__ = __webpack_require__(620);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__ionic_native_splash_screen__ = __webpack_require__(309);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__ionic_native_status_bar__ = __webpack_require__(654);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__angular_http__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__angular_platform_browser__ = __webpack_require__(44);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__ionic_storage__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__components_swipedtab_swipedtab__ = __webpack_require__(655);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__components_FormValidator__ = __webpack_require__(656);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__components_lazy_img_lazy_img__ = __webpack_require__(657);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__directives_lazy_load_directive__ = __webpack_require__(658);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__directives_longPress_directive__ = __webpack_require__(659);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__directives_pinch_zoom_directive__ = __webpack_require__(660);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__directives_elastic_directive__ = __webpack_require__(661);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__services_imageCache__ = __webpack_require__(191);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__ionic_native_in_app_browser__ = __webpack_require__(58);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__ionic_native_in_app_purchase__ = __webpack_require__(325);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__ionic_native_camera__ = __webpack_require__(71);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19__ionic_native_device__ = __webpack_require__(317);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_20__ionic_native_file__ = __webpack_require__(88);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_21__ionic_native_file_transfer__ = __webpack_require__(182);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_22__ionic_native_facebook__ = __webpack_require__(318);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_23__ionic_native_google_plus__ = __webpack_require__(319);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_24__pages_intro_intro__ = __webpack_require__(313);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_25__pages_multiselector_multiselector__ = __webpack_require__(469);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_26__pages_about_about__ = __webpack_require__(662);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_27__pages_contact_contact__ = __webpack_require__(188);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_28__pages_blog_blog__ = __webpack_require__(183);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_29__pages_post_post__ = __webpack_require__(324);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_30__services_blog__ = __webpack_require__(117);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_31__pages_updates_updates__ = __webpack_require__(467);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_32__pages_wishlist_wishlist__ = __webpack_require__(466);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_33__pages_wallet_wallet__ = __webpack_require__(464);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_34__pages_chat_chat__ = __webpack_require__(465);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_35__pages_message_message__ = __webpack_require__(121);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_36__pages_course_course__ = __webpack_require__(62);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_37__pages_course_status_course_status__ = __webpack_require__(116);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_38__pages_reviewcourse_reviewcourse__ = __webpack_require__(327);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_39__pages_tabs_tabs__ = __webpack_require__(57);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_40__pages_profile_profile__ = __webpack_require__(22);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_41__pages_register_register__ = __webpack_require__(323);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_42__pages_login_login__ = __webpack_require__(322);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_43__pages_search_search__ = __webpack_require__(61);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_44__pages_directory_directory__ = __webpack_require__(72);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_45__pages_instructors_instructors__ = __webpack_require__(663);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_46__pages_instructor_instructor__ = __webpack_require__(118);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_47__pages_result_result__ = __webpack_require__(330);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_48__pages_unitcomment_unitcomment__ = __webpack_require__(328);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_49__pages_uploadassignment_uploadassignment__ = __webpack_require__(329);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_50__pages_groupdirectory_groupdirectory__ = __webpack_require__(664);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_51__pages_group_group__ = __webpack_require__(555);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_52__pages_forumdirectory_forumdirectory__ = __webpack_require__(665);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_53__pages_member_member__ = __webpack_require__(556);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_54__pages_replydirectory_replydirectory__ = __webpack_require__(557);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_55__pages_attendance_attendance__ = __webpack_require__(578);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_56__components_elastic_header_elastic_header__ = __webpack_require__(666);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_57__components_fixed_scroll_header_fixed_scroll_header__ = __webpack_require__(667);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_58__components_star_rating_star_rating__ = __webpack_require__(668);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_59__components_avatarscrollzoomout_avatarscrollzoomout__ = __webpack_require__(669);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_60__components_pipefilters__ = __webpack_require__(670);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_61__pipes_orderby__ = __webpack_require__(206);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_62__components_coursecard_coursecard__ = __webpack_require__(671);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_63__components_courseblock_courseblock__ = __webpack_require__(672);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_64__components_instructorblock_instructorblock__ = __webpack_require__(673);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_65__components_commentblock_commentblock__ = __webpack_require__(674);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_66__components_chatblock_chatblock__ = __webpack_require__(675);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_67__components_groupblock_groupblock__ = __webpack_require__(676);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_68__components_memberblock_memberblock__ = __webpack_require__(677);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_69__components_topicblock_topicblock__ = __webpack_require__(678);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_70__components_replyblock_replyblock__ = __webpack_require__(679);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_71__components_messageblock_messageblock__ = __webpack_require__(680);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_72__components_video_gular_video_gular__ = __webpack_require__(681);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_73__pages_home_home__ = __webpack_require__(316);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_74__pages_offline_offline__ = __webpack_require__(470);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_75__pages_nodata_nodata__ = __webpack_require__(682);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_76__components_progress_bar_progress_bar__ = __webpack_require__(683);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_77__components_friendlytime_friendlytime__ = __webpack_require__(684);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_78__components_question_question__ = __webpack_require__(685);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_79__components_timer_timer__ = __webpack_require__(697);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_80__components_match_match__ = __webpack_require__(953);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_81__components_fillblank_fillblank__ = __webpack_require__(954);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_82__components_select_select__ = __webpack_require__(955);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_83__components_absolute_drag_absolute_drag__ = __webpack_require__(956);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_84__services_course__ = __webpack_require__(49);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_85__services_authentication__ = __webpack_require__(33);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_86__services_notes_discussions__ = __webpack_require__(120);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_87__services_upload_assignment__ = __webpack_require__(187);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_88__services_users__ = __webpack_require__(29);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_89__services_config__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_90__services_status__ = __webpack_require__(184);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_91__services_quiz__ = __webpack_require__(185);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_92__services_activity__ = __webpack_require__(115);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_93__services_updates__ = __webpack_require__(468);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_94__services_wishlist__ = __webpack_require__(73);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_95__services_wallet__ = __webpack_require__(89);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_96__services_group__ = __webpack_require__(70);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_97__services_members__ = __webpack_require__(205);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_98_ng2_dragula__ = __webpack_require__(558);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_98_ng2_dragula___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_98_ng2_dragula__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_99_videogular2_core__ = __webpack_require__(957);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_99_videogular2_core___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_99_videogular2_core__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_100_videogular2_controls__ = __webpack_require__(960);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_100_videogular2_controls___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_100_videogular2_controls__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_101_videogular2_overlay_play__ = __webpack_require__(975);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_101_videogular2_overlay_play___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_101_videogular2_overlay_play__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_102__pages_add_edit_unit_comment_add_edit_unit_comment__ = __webpack_require__(186);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_103__pages_membersdirectory_membersdirectory__ = __webpack_require__(978);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_104__services_chat__ = __webpack_require__(87);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_105_ionic_emoji_picker__ = __webpack_require__(979);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_106__pages_topicdirectory_topicdirectory__ = __webpack_require__(577);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_107__components_forumblock_forumblock__ = __webpack_require__(1015);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_108__services_forum__ = __webpack_require__(48);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_109__services_attendance__ = __webpack_require__(181);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_110__ionic_native_barcode_scanner__ = __webpack_require__(463);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_111__services_push_notification__ = __webpack_require__(114);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_112__ionic_native_push__ = __webpack_require__(320);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_113__ionic_native_media__ = __webpack_require__(190);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_114__services_sidemenu__ = __webpack_require__(189);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};





















 // for upload assignment file


//End Social Logins





















































































// import { AdMob } from "ionic-admob";
// import { AdmobService } from '../services/admob';





// import { OneSignal } from '@ionic-native/onesignal';




Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["enableProdMode"])();
var AppModule = /** @class */ (function () {
    function AppModule() {
    }
    AppModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_2__app_component__["a" /* MyApp */],
                __WEBPACK_IMPORTED_MODULE_24__pages_intro_intro__["a" /* Intro */],
                __WEBPACK_IMPORTED_MODULE_25__pages_multiselector_multiselector__["a" /* MultiselectorPage */],
                __WEBPACK_IMPORTED_MODULE_26__pages_about_about__["a" /* AboutPage */],
                __WEBPACK_IMPORTED_MODULE_28__pages_blog_blog__["a" /* BlogPage */],
                __WEBPACK_IMPORTED_MODULE_29__pages_post_post__["a" /* PostPage */],
                __WEBPACK_IMPORTED_MODULE_27__pages_contact_contact__["a" /* ContactPage */],
                __WEBPACK_IMPORTED_MODULE_73__pages_home_home__["a" /* HomePage */],
                __WEBPACK_IMPORTED_MODULE_74__pages_offline_offline__["a" /* OfflinePage */],
                __WEBPACK_IMPORTED_MODULE_75__pages_nodata_nodata__["a" /* NodataPage */],
                __WEBPACK_IMPORTED_MODULE_39__pages_tabs_tabs__["a" /* TabsPage */],
                __WEBPACK_IMPORTED_MODULE_40__pages_profile_profile__["a" /* ProfilePage */],
                __WEBPACK_IMPORTED_MODULE_42__pages_login_login__["a" /* LoginPage */],
                __WEBPACK_IMPORTED_MODULE_41__pages_register_register__["a" /* RegisterPage */],
                __WEBPACK_IMPORTED_MODULE_43__pages_search_search__["a" /* SearchPage */],
                __WEBPACK_IMPORTED_MODULE_44__pages_directory_directory__["a" /* DirectoryPage */],
                __WEBPACK_IMPORTED_MODULE_45__pages_instructors_instructors__["a" /* InstructorsPage */],
                __WEBPACK_IMPORTED_MODULE_46__pages_instructor_instructor__["a" /* InstructorPage */],
                __WEBPACK_IMPORTED_MODULE_47__pages_result_result__["a" /* ResultPage */],
                __WEBPACK_IMPORTED_MODULE_36__pages_course_course__["a" /* CoursePage */],
                __WEBPACK_IMPORTED_MODULE_37__pages_course_status_course_status__["a" /* CourseStatusPage */],
                __WEBPACK_IMPORTED_MODULE_38__pages_reviewcourse_reviewcourse__["a" /* ReviewCoursePage */],
                __WEBPACK_IMPORTED_MODULE_55__pages_attendance_attendance__["a" /* AttendancePage */],
                __WEBPACK_IMPORTED_MODULE_58__components_star_rating_star_rating__["a" /* StarRatingComponent */],
                __WEBPACK_IMPORTED_MODULE_56__components_elastic_header_elastic_header__["a" /* ElasticHeader */],
                __WEBPACK_IMPORTED_MODULE_57__components_fixed_scroll_header_fixed_scroll_header__["a" /* FixedScrollHeader */],
                __WEBPACK_IMPORTED_MODULE_59__components_avatarscrollzoomout_avatarscrollzoomout__["a" /* AvatarScrollZoomout */],
                __WEBPACK_IMPORTED_MODULE_60__components_pipefilters__["a" /* CallbackPipe */],
                __WEBPACK_IMPORTED_MODULE_9__components_FormValidator__["a" /* EmailValidatorDirective */],
                __WEBPACK_IMPORTED_MODULE_61__pipes_orderby__["a" /* OrderPipe */],
                __WEBPACK_IMPORTED_MODULE_61__pipes_orderby__["b" /* SafeHtmlPipe */],
                __WEBPACK_IMPORTED_MODULE_61__pipes_orderby__["c" /* SafePipe */],
                __WEBPACK_IMPORTED_MODULE_76__components_progress_bar_progress_bar__["a" /* ProgressBarComponent */],
                __WEBPACK_IMPORTED_MODULE_77__components_friendlytime_friendlytime__["a" /* FriendlytimeComponent */],
                __WEBPACK_IMPORTED_MODULE_78__components_question_question__["a" /* QuestionComponent */],
                __WEBPACK_IMPORTED_MODULE_79__components_timer_timer__["a" /* TimerComponent */],
                __WEBPACK_IMPORTED_MODULE_80__components_match_match__["a" /* MatchAnswers */],
                __WEBPACK_IMPORTED_MODULE_81__components_fillblank_fillblank__["a" /* Fillblank */],
                __WEBPACK_IMPORTED_MODULE_82__components_select_select__["a" /* Select */],
                __WEBPACK_IMPORTED_MODULE_31__pages_updates_updates__["a" /* UpdatesPage */],
                __WEBPACK_IMPORTED_MODULE_32__pages_wishlist_wishlist__["a" /* WishlistPage */],
                __WEBPACK_IMPORTED_MODULE_33__pages_wallet_wallet__["a" /* WalletPage */],
                __WEBPACK_IMPORTED_MODULE_62__components_coursecard_coursecard__["a" /* Coursecard */],
                __WEBPACK_IMPORTED_MODULE_63__components_courseblock_courseblock__["a" /* Courseblock */],
                __WEBPACK_IMPORTED_MODULE_64__components_instructorblock_instructorblock__["a" /* InstructorBlock */],
                __WEBPACK_IMPORTED_MODULE_10__components_lazy_img_lazy_img__["a" /* LazyImgComponent */],
                __WEBPACK_IMPORTED_MODULE_11__directives_lazy_load_directive__["a" /* LazyLoadDirective */],
                __WEBPACK_IMPORTED_MODULE_12__directives_longPress_directive__["a" /* PressDirective */],
                __WEBPACK_IMPORTED_MODULE_83__components_absolute_drag_absolute_drag__["a" /* AbsoluteDrag */],
                __WEBPACK_IMPORTED_MODULE_13__directives_pinch_zoom_directive__["a" /* PinchZoomDirective */],
                __WEBPACK_IMPORTED_MODULE_14__directives_elastic_directive__["a" /* ElasticDirective */],
                __WEBPACK_IMPORTED_MODULE_8__components_swipedtab_swipedtab__["a" /* ionSlideTabs */],
                __WEBPACK_IMPORTED_MODULE_48__pages_unitcomment_unitcomment__["a" /* UnitCommentPage */],
                __WEBPACK_IMPORTED_MODULE_65__components_commentblock_commentblock__["a" /* CommentBlock */],
                __WEBPACK_IMPORTED_MODULE_66__components_chatblock_chatblock__["a" /* ChatBlock */],
                __WEBPACK_IMPORTED_MODULE_67__components_groupblock_groupblock__["a" /* GroupBlock */],
                __WEBPACK_IMPORTED_MODULE_107__components_forumblock_forumblock__["a" /* ForumBlock */],
                __WEBPACK_IMPORTED_MODULE_68__components_memberblock_memberblock__["a" /* MemberBlock */],
                __WEBPACK_IMPORTED_MODULE_69__components_topicblock_topicblock__["a" /* TopicBlock */],
                __WEBPACK_IMPORTED_MODULE_70__components_replyblock_replyblock__["a" /* ReplyBlock */],
                __WEBPACK_IMPORTED_MODULE_71__components_messageblock_messageblock__["a" /* MessageBlock */],
                __WEBPACK_IMPORTED_MODULE_102__pages_add_edit_unit_comment_add_edit_unit_comment__["a" /* AddEditUnitCommentPage */],
                __WEBPACK_IMPORTED_MODULE_103__pages_membersdirectory_membersdirectory__["a" /* MembersDirectoryPage */],
                __WEBPACK_IMPORTED_MODULE_49__pages_uploadassignment_uploadassignment__["a" /* UploadAssignmentPage */],
                __WEBPACK_IMPORTED_MODULE_50__pages_groupdirectory_groupdirectory__["a" /* GroupdirectoryPage */],
                __WEBPACK_IMPORTED_MODULE_51__pages_group_group__["a" /* GroupPage */],
                __WEBPACK_IMPORTED_MODULE_53__pages_member_member__["a" /* MemberPage */],
                __WEBPACK_IMPORTED_MODULE_52__pages_forumdirectory_forumdirectory__["a" /* ForumdirectoryPage */],
                __WEBPACK_IMPORTED_MODULE_106__pages_topicdirectory_topicdirectory__["a" /* TopicdirectoryPage */],
                __WEBPACK_IMPORTED_MODULE_54__pages_replydirectory_replydirectory__["a" /* ReplydirectoryPage */],
                __WEBPACK_IMPORTED_MODULE_34__pages_chat_chat__["a" /* ChatPage */],
                __WEBPACK_IMPORTED_MODULE_35__pages_message_message__["a" /* MessagePage */],
                __WEBPACK_IMPORTED_MODULE_72__components_video_gular_video_gular__["a" /* VideoGularBlock */]
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_98_ng2_dragula__["DragulaModule"],
                __WEBPACK_IMPORTED_MODULE_6__angular_platform_browser__["a" /* BrowserModule */],
                __WEBPACK_IMPORTED_MODULE_5__angular_http__["c" /* HttpModule */],
                __WEBPACK_IMPORTED_MODULE_7__ionic_storage__["a" /* IonicStorageModule */].forRoot(),
                __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* IonicModule */].forRoot(__WEBPACK_IMPORTED_MODULE_2__app_component__["a" /* MyApp */], {}, {
                    links: [
                        { loadChildren: '../pages/attendance/attendance.module#AttendancePageModule', name: 'AttendancePage', segment: 'attendance', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/offlinedetail/offlinedetail.module#OfflinedetailPageModule', name: 'OfflinedetailPage', segment: 'offlinedetail', priority: 'low', defaultHistory: [] }
                    ]
                }),
                __WEBPACK_IMPORTED_MODULE_99_videogular2_core__["VgCoreModule"],
                __WEBPACK_IMPORTED_MODULE_100_videogular2_controls__["VgControlsModule"],
                __WEBPACK_IMPORTED_MODULE_101_videogular2_overlay_play__["VgOverlayPlayModule"],
                __WEBPACK_IMPORTED_MODULE_105_ionic_emoji_picker__["a" /* EmojiPickerModule */]
            ],
            bootstrap: [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["f" /* IonicApp */]],
            entryComponents: [
                __WEBPACK_IMPORTED_MODULE_2__app_component__["a" /* MyApp */],
                __WEBPACK_IMPORTED_MODULE_24__pages_intro_intro__["a" /* Intro */],
                __WEBPACK_IMPORTED_MODULE_25__pages_multiselector_multiselector__["a" /* MultiselectorPage */],
                __WEBPACK_IMPORTED_MODULE_26__pages_about_about__["a" /* AboutPage */],
                __WEBPACK_IMPORTED_MODULE_28__pages_blog_blog__["a" /* BlogPage */],
                __WEBPACK_IMPORTED_MODULE_29__pages_post_post__["a" /* PostPage */],
                __WEBPACK_IMPORTED_MODULE_27__pages_contact_contact__["a" /* ContactPage */],
                __WEBPACK_IMPORTED_MODULE_73__pages_home_home__["a" /* HomePage */],
                __WEBPACK_IMPORTED_MODULE_74__pages_offline_offline__["a" /* OfflinePage */],
                __WEBPACK_IMPORTED_MODULE_75__pages_nodata_nodata__["a" /* NodataPage */],
                __WEBPACK_IMPORTED_MODULE_39__pages_tabs_tabs__["a" /* TabsPage */],
                __WEBPACK_IMPORTED_MODULE_40__pages_profile_profile__["a" /* ProfilePage */],
                __WEBPACK_IMPORTED_MODULE_42__pages_login_login__["a" /* LoginPage */],
                __WEBPACK_IMPORTED_MODULE_41__pages_register_register__["a" /* RegisterPage */],
                __WEBPACK_IMPORTED_MODULE_44__pages_directory_directory__["a" /* DirectoryPage */],
                __WEBPACK_IMPORTED_MODULE_45__pages_instructors_instructors__["a" /* InstructorsPage */],
                __WEBPACK_IMPORTED_MODULE_46__pages_instructor_instructor__["a" /* InstructorPage */],
                __WEBPACK_IMPORTED_MODULE_43__pages_search_search__["a" /* SearchPage */],
                __WEBPACK_IMPORTED_MODULE_55__pages_attendance_attendance__["a" /* AttendancePage */],
                __WEBPACK_IMPORTED_MODULE_36__pages_course_course__["a" /* CoursePage */],
                __WEBPACK_IMPORTED_MODULE_37__pages_course_status_course_status__["a" /* CourseStatusPage */],
                __WEBPACK_IMPORTED_MODULE_47__pages_result_result__["a" /* ResultPage */],
                __WEBPACK_IMPORTED_MODULE_34__pages_chat_chat__["a" /* ChatPage */],
                __WEBPACK_IMPORTED_MODULE_35__pages_message_message__["a" /* MessagePage */],
                __WEBPACK_IMPORTED_MODULE_38__pages_reviewcourse_reviewcourse__["a" /* ReviewCoursePage */],
                __WEBPACK_IMPORTED_MODULE_31__pages_updates_updates__["a" /* UpdatesPage */],
                __WEBPACK_IMPORTED_MODULE_32__pages_wishlist_wishlist__["a" /* WishlistPage */],
                __WEBPACK_IMPORTED_MODULE_33__pages_wallet_wallet__["a" /* WalletPage */],
                __WEBPACK_IMPORTED_MODULE_10__components_lazy_img_lazy_img__["a" /* LazyImgComponent */],
                __WEBPACK_IMPORTED_MODULE_65__components_commentblock_commentblock__["a" /* CommentBlock */],
                __WEBPACK_IMPORTED_MODULE_66__components_chatblock_chatblock__["a" /* ChatBlock */],
                __WEBPACK_IMPORTED_MODULE_67__components_groupblock_groupblock__["a" /* GroupBlock */],
                __WEBPACK_IMPORTED_MODULE_107__components_forumblock_forumblock__["a" /* ForumBlock */],
                __WEBPACK_IMPORTED_MODULE_68__components_memberblock_memberblock__["a" /* MemberBlock */],
                __WEBPACK_IMPORTED_MODULE_69__components_topicblock_topicblock__["a" /* TopicBlock */],
                __WEBPACK_IMPORTED_MODULE_70__components_replyblock_replyblock__["a" /* ReplyBlock */],
                __WEBPACK_IMPORTED_MODULE_71__components_messageblock_messageblock__["a" /* MessageBlock */],
                __WEBPACK_IMPORTED_MODULE_48__pages_unitcomment_unitcomment__["a" /* UnitCommentPage */],
                __WEBPACK_IMPORTED_MODULE_102__pages_add_edit_unit_comment_add_edit_unit_comment__["a" /* AddEditUnitCommentPage */],
                __WEBPACK_IMPORTED_MODULE_103__pages_membersdirectory_membersdirectory__["a" /* MembersDirectoryPage */],
                __WEBPACK_IMPORTED_MODULE_49__pages_uploadassignment_uploadassignment__["a" /* UploadAssignmentPage */],
                __WEBPACK_IMPORTED_MODULE_50__pages_groupdirectory_groupdirectory__["a" /* GroupdirectoryPage */],
                __WEBPACK_IMPORTED_MODULE_51__pages_group_group__["a" /* GroupPage */],
                __WEBPACK_IMPORTED_MODULE_53__pages_member_member__["a" /* MemberPage */],
                __WEBPACK_IMPORTED_MODULE_52__pages_forumdirectory_forumdirectory__["a" /* ForumdirectoryPage */],
                __WEBPACK_IMPORTED_MODULE_106__pages_topicdirectory_topicdirectory__["a" /* TopicdirectoryPage */],
                __WEBPACK_IMPORTED_MODULE_54__pages_replydirectory_replydirectory__["a" /* ReplydirectoryPage */],
                __WEBPACK_IMPORTED_MODULE_72__components_video_gular_video_gular__["a" /* VideoGularBlock */]
            ],
            providers: [
                __WEBPACK_IMPORTED_MODULE_4__ionic_native_status_bar__["a" /* StatusBar */],
                __WEBPACK_IMPORTED_MODULE_113__ionic_native_media__["a" /* Media */],
                __WEBPACK_IMPORTED_MODULE_3__ionic_native_splash_screen__["a" /* SplashScreen */],
                __WEBPACK_IMPORTED_MODULE_110__ionic_native_barcode_scanner__["a" /* BarcodeScanner */],
                { provide: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ErrorHandler"], useClass: __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["g" /* IonicErrorHandler */] },
                __WEBPACK_IMPORTED_MODULE_98_ng2_dragula__["DragulaService"],
                __WEBPACK_IMPORTED_MODULE_16__ionic_native_in_app_browser__["a" /* InAppBrowser */],
                __WEBPACK_IMPORTED_MODULE_17__ionic_native_in_app_purchase__["a" /* InAppPurchase */],
                __WEBPACK_IMPORTED_MODULE_18__ionic_native_camera__["a" /* Camera */],
                // OneSignal,
                __WEBPACK_IMPORTED_MODULE_112__ionic_native_push__["a" /* Push */],
                __WEBPACK_IMPORTED_MODULE_19__ionic_native_device__["a" /* Device */],
                __WEBPACK_IMPORTED_MODULE_20__ionic_native_file__["a" /* File */],
                __WEBPACK_IMPORTED_MODULE_22__ionic_native_facebook__["a" /* Facebook */],
                __WEBPACK_IMPORTED_MODULE_23__ionic_native_google_plus__["a" /* GooglePlus */],
                __WEBPACK_IMPORTED_MODULE_7__ionic_storage__["a" /* IonicStorageModule */],
                __WEBPACK_IMPORTED_MODULE_89__services_config__["a" /* ConfigService */],
                __WEBPACK_IMPORTED_MODULE_114__services_sidemenu__["a" /* SideMenuService */],
                __WEBPACK_IMPORTED_MODULE_96__services_group__["a" /* GroupService */],
                __WEBPACK_IMPORTED_MODULE_108__services_forum__["a" /* ForumService */],
                __WEBPACK_IMPORTED_MODULE_109__services_attendance__["a" /* AttendanceService */],
                __WEBPACK_IMPORTED_MODULE_97__services_members__["a" /* MembersService */],
                __WEBPACK_IMPORTED_MODULE_111__services_push_notification__["a" /* PushNotificationService */],
                __WEBPACK_IMPORTED_MODULE_85__services_authentication__["a" /* AuthenticationService */],
                __WEBPACK_IMPORTED_MODULE_88__services_users__["a" /* UserService */],
                __WEBPACK_IMPORTED_MODULE_84__services_course__["a" /* CourseService */],
                __WEBPACK_IMPORTED_MODULE_90__services_status__["a" /* CourseStatusService */],
                __WEBPACK_IMPORTED_MODULE_91__services_quiz__["a" /* QuizService */],
                __WEBPACK_IMPORTED_MODULE_92__services_activity__["a" /* ActivityService */],
                __WEBPACK_IMPORTED_MODULE_93__services_updates__["a" /* UpdatesService */],
                __WEBPACK_IMPORTED_MODULE_94__services_wishlist__["a" /* WishlistService */],
                __WEBPACK_IMPORTED_MODULE_95__services_wallet__["a" /* WalletService */],
                __WEBPACK_IMPORTED_MODULE_104__services_chat__["a" /* ChatService */],
                __WEBPACK_IMPORTED_MODULE_15__services_imageCache__["a" /* ImgcacheService */],
                __WEBPACK_IMPORTED_MODULE_30__services_blog__["a" /* BlogService */],
                __WEBPACK_IMPORTED_MODULE_86__services_notes_discussions__["a" /* NotesDiscussionService */], ,
                __WEBPACK_IMPORTED_MODULE_87__services_upload_assignment__["a" /* UploadAssignmentService */],
                // AdMob,
                // AdmobService,
                __WEBPACK_IMPORTED_MODULE_21__ionic_native_file_transfer__["a" /* FileTransfer */],
                __WEBPACK_IMPORTED_MODULE_21__ionic_native_file_transfer__["b" /* FileTransferObject */]
            ]
        })
    ], AppModule);
    return AppModule;
}());

//# sourceMappingURL=app.module.js.map

/***/ }),

/***/ 61:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SearchPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_forms__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_ionic_angular__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__services_course__ = __webpack_require__(49);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__services_config__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__services_blog__ = __webpack_require__(117);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__services_users__ = __webpack_require__(29);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__blog_blog__ = __webpack_require__(183);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__directory_directory__ = __webpack_require__(72);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__instructor_instructor__ = __webpack_require__(118);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__course_course__ = __webpack_require__(62);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_rxjs_add_operator_debounceTime__ = __webpack_require__(119);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_rxjs_add_operator_debounceTime___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_11_rxjs_add_operator_debounceTime__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};












var SearchPage = /** @class */ (function () {
    function SearchPage(viewCtrl, navCtrl, courseService, blog, userService, config) {
        this.viewCtrl = viewCtrl;
        this.navCtrl = navCtrl;
        this.courseService = courseService;
        this.blog = blog;
        this.userService = userService;
        this.config = config;
        this.searchTerm = '';
        this.courseitems = [];
        this.items = [];
        this.users = [];
        this.searching = false;
        this.directoryPage = __WEBPACK_IMPORTED_MODULE_8__directory_directory__["a" /* DirectoryPage */];
        this.coursePage = __WEBPACK_IMPORTED_MODULE_10__course_course__["a" /* CoursePage */];
        this.blogPage = __WEBPACK_IMPORTED_MODULE_7__blog_blog__["a" /* BlogPage */];
        this.instructorPage = __WEBPACK_IMPORTED_MODULE_9__instructor_instructor__["a" /* InstructorPage */];
        this.searchControl = new __WEBPACK_IMPORTED_MODULE_1__angular_forms__["b" /* FormControl */]();
    }
    SearchPage.prototype.ionViewDidLoad = function () {
        var _this = this;
        this.setFilteredItems();
        this.searchControl.valueChanges.debounceTime(700).subscribe(function (search) {
            _this.searching = false;
            console.log("Searching");
            _this.setFilteredItems();
        });
    };
    SearchPage.prototype.onClose = function () {
        console.log("close");
        this.viewCtrl.dismiss();
    };
    SearchPage.prototype.onSearchInput = function () {
        this.searching = true;
    };
    SearchPage.prototype.setFilteredItems = function () {
        var _this = this;
        console.log(this.searchTerm);
        this.courseitems = this.getSearchCourses();
        if (!this.courseitems) {
            this.courseService.filterItems(this.searchTerm).subscribe(function (res) {
                if (res) {
                    _this.courseitems = res;
                }
            });
        }
        this.items = this.getSearchItems();
        this.users = this.getSearchUsers();
    };
    SearchPage.prototype.getSearchCourses = function () {
        var _this = this;
        return this.courseService.courses.filter(function (item) {
            return item.name.toLowerCase().indexOf(_this.searchTerm.toLowerCase()) > -1;
        });
    };
    SearchPage.prototype.getSearchItems = function () {
        var _this = this;
        return this.blog.posts.filter(function (item) {
            return item.name.toLowerCase().indexOf(_this.searchTerm.toLowerCase()) > -1;
        });
    };
    SearchPage.prototype.getSearchUsers = function () {
        var _this = this;
        return this.userService.instructors.filter(function (item) {
            console.log(item);
            return item.name.toLowerCase().indexOf(_this.searchTerm.toLowerCase()) > -1;
        });
    };
    SearchPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-search',template:/*ion-inline-start:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\pages\search\search.html"*/'<ion-header center>\n     <ion-navbar  color="transparent" >\n        <ion-buttons start>\n            <button ion-button icon-only color="white" (click)="onClose()">\n                <ion-icon name="md-arrow-back"></ion-icon>\n            </button>\n        </ion-buttons>\n        <ion-title>{{config.get_translation(\'search_title\')}}<span>&nbsp;</span></ion-title>\n    </ion-navbar>\n</ion-header>\n<ion-content padding>\n    \n	<ion-searchbar [(ngModel)]="searchTerm" [formControl]="searchControl" (ionInput)="onSearchInput()"></ion-searchbar>\n    <div *ngIf="searching" class="spinner-container">\n        <ion-spinner></ion-spinner>\n    </div>\n    <div *ngIf="!courseitems?.length && !items?.length && !users?.length">\n        <div class="message" [innerHtml]="config.get_translation(\'no_results\')"></div>\n    </div>\n    <ion-list *ngIf="courseitems?.length">\n        <ion-item *ngFor="let item of courseitems">\n            <ion-thumbnail item-start *ngIf="item.featured_image">\n                <lazy-img [inputSrc]="item.featured_image"></lazy-img>\n            </ion-thumbnail>\n            <h2>{{item.name}}</h2>\n            <div *ngIf="item.total_students">\n                <p>{{item.instructor.name}}</p>\n                <button ion-button clear item-end [navPush]="coursePage" [navParams]="item">View</button>\n            </div>\n        </ion-item>\n    </ion-list>\n    <ion-list *ngIf="items?.length">\n        <ion-item *ngFor="let item of items">\n            <ion-thumbnail item-start *ngIf="item.featured_image">\n                <lazy-img [inputSrc]="item.featured_image"></lazy-img>\n            </ion-thumbnail>\n            <h2>{{item.name}}</h2>\n            <div *ngIf="item.name">\n                \n                <button ion-button clear item-end [navPush]="blogPage" [navParams]="item">View</button>\n            </div>\n        </ion-item>\n    </ion-list>\n    <ion-list *ngIf="users?.length">\n        <ion-item *ngFor="let item of users">\n            <ion-thumbnail item-start *ngIf="item.avatar">\n                <lazy-img [inputSrc]="item.avatar"></lazy-img>\n            </ion-thumbnail>\n            <h2>{{item.name}}</h2>\n            <div *ngIf="item.name">\n                \n                <button ion-button clear item-end [navPush]="instructorPage" [navParams]="item">View</button>\n            </div>\n        </ion-item>\n    </ion-list>\n</ion-content>\n'/*ion-inline-end:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\pages\search\search.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2_ionic_angular__["r" /* ViewController */],
            __WEBPACK_IMPORTED_MODULE_2_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_3__services_course__["a" /* CourseService */],
            __WEBPACK_IMPORTED_MODULE_5__services_blog__["a" /* BlogService */],
            __WEBPACK_IMPORTED_MODULE_6__services_users__["a" /* UserService */],
            __WEBPACK_IMPORTED_MODULE_4__services_config__["a" /* ConfigService */]])
    ], SearchPage);
    return SearchPage;
}());

//# sourceMappingURL=search.js.map

/***/ }),

/***/ 62:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CoursePage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__search_search__ = __webpack_require__(61);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__services_course__ = __webpack_require__(49);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__ionic_native_in_app_browser__ = __webpack_require__(58);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__ionic_storage__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__services_config__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__services_users__ = __webpack_require__(29);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__course_status_course_status__ = __webpack_require__(116);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__services_wallet__ = __webpack_require__(89);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__profile_profile__ = __webpack_require__(22);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};











var CoursePage = /** @class */ (function () {
    function CoursePage(navCtrl, navParams, modalCtrl, courseService, platform, config, userService, storage, toastCtrl, loadingCtrl, iab, walletService, alertCtrl) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.modalCtrl = modalCtrl;
        this.courseService = courseService;
        this.platform = platform;
        this.config = config;
        this.userService = userService;
        this.storage = storage;
        this.toastCtrl = toastCtrl;
        this.loadingCtrl = loadingCtrl;
        this.iab = iab;
        this.walletService = walletService;
        this.alertCtrl = alertCtrl;
        this.activateBuyPopup = false;
        this.expired = false;
        this.myCourse = false;
        this.myCoursestatus = 0;
        this.coursetabs = [];
        this.courseStatusPage = __WEBPACK_IMPORTED_MODULE_8__course_status_course_status__["a" /* CourseStatusPage */];
        this.profilePage = __WEBPACK_IMPORTED_MODULE_10__profile_profile__["a" /* ProfilePage */];
        this.coursePriceSelected = [];
        this.indicator = null;
    }
    CoursePage.prototype.ngOnInit = function () {
        this.course = this.navParams.data;
        if ('message' in this.navParams.data) {
            this.message = this.navParams.get('message');
        }
        this.getCourse(this.course);
    };
    CoursePage.prototype.getCourse = function (course, force) {
        var _this = this;
        if (force === void 0) { force = false; }
        var currenttimestamp = Math.floor(new Date().getTime() / 1000);
        var user_expiry = 0;
        var loading = this.loadingCtrl.create({
            content: '<img src="assets/images/bubbles.svg">',
            duration: 15000,
            spinner: 'hide',
            showBackdrop: true,
        });
        //Get Wallet -> 
        if (this.config.isLoggedIn) {
            this.walletService.getWallet(true).subscribe(function (res) {
                console.log(res);
            });
        }
        loading.present();
        /*this.courseService.getFullCourse(course,force).subscribe(res=>{
           console.log('inside full course ');
            //this.fullCourse = res;
            //this.fullCourse = course;
            res.course.name = course.name
            var a =res.description.substring
              (5,res.description.indexOf('[:en]'))
              res.description= a
              res.post_content.rest_content= a
              this.fullCourse = res;
              console.log(this.fullCourse)
              let toast = this.toastCtrl.create({
                message: this.fullCourse.description,
                duration: 1000,
                position: 'bottom'
              });
              toast.present();
            console.log(("walido divanoooo"))
            
            if(this.fullCourse.course.user_expiry ){
              if(this.fullCourse.course.user_status && this.fullCourse.course.user_expiry > currenttimestamp){
                this.myCourse=true;
                this.myCoursestatus=this.fullCourse.course.user_status;
              }else{
                this.expired = true;
              }
            }else{
              if(this.fullCourse.course.user_status){
                this.myCourse=true;
                this.myCoursestatus=this.fullCourse.course.user_status;
              }
            }
            
            if(this.config.isLoggedIn){
              
              this.storage.get('courses_'+this.config.user.id).then(courses=>{
                console.log(courses);
                
                if(courses){
                  if(Array.isArray(courses)){
                    for(let i=0;i<courses.length;i++){
                        if(courses[i].id == course.id){
                            if(this.fullCourse.course.user_expiry){
                              if(this.fullCourse.course.user_expiry > currenttimestamp){
                                this.myCourse=true;
                                this.myCoursestatus=courses[i].user_status;
                              }else{
                                this.expired = true;
                              }
                            }else{
                              this.myCourse=true;
                              this.myCoursestatus=courses[i].user_status;
                            }
                            
                        }
                    }
                  }
                }
              });
            }

            
            loading.dismiss();
            for(var k in this.fullCourse){
                if(k != 'course' && k != 'purchase_link'){this.coursetabs.push(k);}
            }
            console.log('waliddevlopper')
            console.log(this.fullCourse)
            console.log('waliddevlopper')
        });*/
        this.courseService.getFullCourse(course, force).subscribe(function (res) {
            console.log('inside full course ');
            _this.fullCourse = res;
            if (_this.fullCourse.course.user_expiry) {
                if (_this.fullCourse.course.user_status && _this.fullCourse.course.user_expiry > currenttimestamp) {
                    _this.myCourse = true;
                    _this.myCoursestatus = _this.fullCourse.course.user_status;
                }
                else {
                    _this.expired = true;
                }
            }
            else {
                if (_this.fullCourse.course.user_status) {
                    _this.myCourse = true;
                    _this.myCoursestatus = _this.fullCourse.course.user_status;
                }
            }
            if (_this.config.isLoggedIn) {
                _this.storage.get('courses_' + _this.config.user.id).then(function (courses) {
                    console.log(courses);
                    if (courses) {
                        if (Array.isArray(courses)) {
                            for (var i = 0; i < courses.length; i++) {
                                if (courses[i].id == course.id) {
                                    if (_this.fullCourse.course.user_expiry) {
                                        if (_this.fullCourse.course.user_expiry > currenttimestamp) {
                                            _this.myCourse = true;
                                            _this.myCoursestatus = courses[i].user_status;
                                        }
                                        else {
                                            _this.expired = true;
                                        }
                                    }
                                    else {
                                        _this.myCourse = true;
                                        _this.myCoursestatus = courses[i].user_status;
                                    }
                                }
                            }
                        }
                    }
                });
            }
            loading.dismiss();
            for (var k in _this.fullCourse) {
                if (k != 'course' && k != 'purchase_link') {
                    _this.coursetabs.push(k);
                }
            }
        });
    };
    CoursePage.prototype.showPricing = function (fullCourse) {
        console.log(fullCourse.course.price_html);
        if (fullCourse) {
            this.activateBuyPopup = true;
        }
    };
    CoursePage.prototype.closePp = function () {
        this.activateBuyPopup = false;
    };
    CoursePage.prototype.showExtras = function (pricing) {
        if (pricing.extras) {
            pricing.extras.open = !pricing.extras.open;
        }
        return pricing;
    };
    CoursePage.prototype.purchaseCourse = function () {
        var _this = this;
        console.log('Clocked');
        if (this.config.isLoggedIn) {
            console.log('YAY ! =' + this.fullCourse.course.price);
            if (this.fullCourse.course.price == 0) {
                console.log('YAY !');
                this.storage.remove('courses_' + this.config.user.id);
                this.storage.remove('fullcourse_' + this.course.id);
                this.config.removeFromTracker('courses', this.course.id);
                this.config.removeFromTracker('profiletabs', 'courses');
                this.userService.addCourse(this.course).subscribe(function (res) {
                    var toast = _this.toastCtrl.create({
                        message: res.message,
                        duration: 1000,
                        position: 'bottom'
                    });
                    if (res.status) {
                        toast.onDidDismiss(function () {
                            _this.getCourse(_this.course, true);
                            _this.config.updateComponents('profile', 0);
                        });
                    }
                    toast.present();
                });
            }
        }
        if (this.fullCourse.course.price != 0) {
            console.log(this.fullCourse.course.price.length);
            if (this.fullCourse.course.price && this.fullCourse.course.price.length) {
            }
            this.platform.ready().then(function () {
                console.log(_this.fullCourse);
                if (_this.fullCourse.purchase_link) {
                    _this.browser = _this.iab.create(_this.fullCourse.purchase_link, "_blank", "location=no"); //, "
                    _this.browser.show();
                    _this.browser.insertCSS({ code: "header,footer{display:none;}" });
                    if (_this.config.isLoggedIn) {
                        _this.browser.executeScript({ code: "jQuery(document).ready(function(){ jQuery('#billing_email').val(" + _this.config.user.email + ");jQuery('#billing_first_name').val(" + _this.config.user.name + "); });" });
                    }
                    _this.browser.on('loadstart').subscribe(function (event) {
                        if (event.url.indexOf('?key=wc_order_') !== -1) {
                            var matches = event.url.match('.+/([0-9]+)/.+');
                            _this.browser.close();
                            _this.getCourse(_this.course, true);
                            _this.config.updateComponents('profile', 0);
                            //get order id
                            //let order_id = matches[1];
                        }
                    });
                    _this.browser.on('exit').subscribe(function (event) {
                        _this.browser.close();
                    });
                }
            });
        }
        console.log(this.fullCourse.course['price'] + ' res = ' + (this.fullCourse['price'] == 0) + ' && ' + this.config.isLoggedIn);
        if (this.fullCourse.course.price == 0 && !this.config.isLoggedIn) {
            var toast = this.toastCtrl.create({
                message: this.config.get_translation('register_account'),
                duration: 1000,
                position: 'bottom'
            });
            toast.present();
        }
    };
    CoursePage.prototype.selectedTab = function (index) {
        this.courseSlides.slideTo(index, 500);
    };
    CoursePage.prototype.onTabChanged = function () {
        var index = this.courseTabs.getActiveIndex();
        this.courseSlides.slideTo(index, 500);
    };
    CoursePage.prototype.onSlideChanged = function () {
        var index = this.courseSlides.getActiveIndex();
        this.courseTabs.slideTo(index, 500);
    };
    CoursePage.prototype.openProfile = function () {
        var modal = this.modalCtrl.create(__WEBPACK_IMPORTED_MODULE_10__profile_profile__["a" /* ProfilePage */], { 'isLoggedIn': this.isLoggedIn, 'User': this.user });
        modal.present();
    };
    CoursePage.prototype.openSearch = function () {
        var modal = this.modalCtrl.create(__WEBPACK_IMPORTED_MODULE_2__search_search__["a" /* SearchPage */]);
        modal.present();
    };
    CoursePage.prototype.show_course_status = function () {
        if (this.myCoursestatus == 1) {
            return this.config.get_translation('start_course');
        }
        if (this.myCoursestatus == 2) {
            return this.config.get_translation('continue_course');
        }
        if (this.myCoursestatus == 3) {
            return this.config.get_translation('evaluation_course');
        }
        if (this.myCoursestatus == 4) {
            return this.config.get_translation('completed_course');
        }
    };
    CoursePage.prototype.buyCourse = function (pricing, FullCourse) {
        var _this = this;
        if (pricing.type && pricing.type == 'na')
            return;
        console.log('Swiped');
        this.coursePriceSelected.push(pricing);
        //FREE COURSE
        if (this.config.isLoggedIn && this.fullCourse.course.price === 0) {
            console.log('YAY !');
            this.storage.remove('courses_' + this.config.user.id);
            this.storage.remove('fullcourse_' + this.course.id);
            this.config.removeFromTracker('courses', this.course.id);
            this.config.removeFromTracker('profiletabs', 'courses');
            this.userService.addCourse(this.course).subscribe(function (res) {
                var toast = _this.toastCtrl.create({
                    message: res.message,
                    duration: 1000,
                    position: 'bottom'
                });
                if (res.status) {
                    toast.onDidDismiss(function () {
                        _this.getCourse(_this.course, true);
                        _this.config.updateComponents('profile', 0);
                    });
                }
                toast.present();
            });
        }
        else if (this.fullCourse.course.price == 0 && !this.config.isLoggedIn) {
            var toast = this.toastCtrl.create({
                message: this.config.get_translation('register_account'),
                duration: 1000,
                position: 'bottom'
            });
            toast.present();
        }
        else {
            console.log(pricing);
            console.log(this.config.settings);
            var title = '';
            var subTitle = '';
            // NON FREE COURSES
            var buttons = [];
            if (this.config.settings.inappbrowser_purchases && this.config.settings.wallet) {
                buttons = [
                    {
                        text: this.config.get_translation('cancel'),
                        role: 'cancel',
                        handler: function () {
                            console.log('Cancel clicked');
                        }
                    },
                    {
                        text: this.config.get_translation('buy_from_site'),
                        handler: function () {
                            _this.buyFromSite(pricing);
                        }
                    },
                    {
                        text: this.config.get_translation('pay') + ' ' + pricing.value,
                        handler: function () {
                            _this.handleWalletPayment(pricing);
                        }
                    }
                ];
                title = this.config.get_translation('buy');
                subTitle = this.config.get_translation('use_wallet');
            }
            else if (this.config.settings.wallet && !this.config.settings.inappbrowser_purchases) {
                buttons = [
                    {
                        text: this.config.get_translation('cancel'),
                        role: 'cancel',
                        handler: function () {
                            console.log('Cancel clicked');
                        }
                    },
                    {
                        text: this.config.get_translation('pay') + ' ' + pricing.value,
                        handler: function () {
                            _this.handleWalletPayment(pricing);
                        }
                    }
                ];
                title = this.config.get_translation('pay_from_wallet');
                subTitle = this.config.get_translation('use_wallet');
            }
            else if (!this.config.settings.wallet && this.config.settings.inappbrowser_purchases) {
                buttons = [
                    {
                        text: this.config.get_translation('cancel'),
                        role: 'cancel',
                        handler: function () {
                            console.log('Cancel clicked');
                        }
                    },
                    {
                        text: this.config.get_translation('buy_from_site'),
                        handler: function () {
                            _this.buyFromSite(pricing);
                        }
                    },
                ];
                title = this.config.get_translation('buy');
            }
            else {
                buttons = [
                    {
                        text: this.config.get_translation('cancel'),
                        role: 'cancel',
                        handler: function () {
                            console.log('Cancel clicked');
                        }
                    }
                ];
                title = this.config.get_translation('buy');
            }
            var alert_1 = this.alertCtrl.create({
                title: title,
                subTitle: subTitle,
                buttons: buttons
            });
            alert_1.present();
        }
    };
    CoursePage.prototype.buyFromSite = function (pricing) {
        var _this = this;
        this.platform.ready().then(function () {
            console.log(_this.fullCourse);
            if (pricing.source == 'pmpro_membership') {
                if (!_this.config.isLoggedIn) {
                    var toast = _this.toastCtrl.create({
                        message: _this.config.get_translation('register_account'),
                        duration: 1000,
                        position: 'bottom'
                    });
                    toast.present();
                    return;
                }
                var loading_1 = _this.loadingCtrl.create({
                    content: '<img src="assets/images/bubbles.svg">',
                    duration: 20000,
                    spinner: 'hide',
                    showBackdrop: true,
                });
                loading_1.present();
                _this.courseService.checkAndAssignPmproLevel(pricing, _this.fullCourse).subscribe(function (res) {
                    if (res.status) {
                        _this.activateBuyPopup = false;
                        _this.storage.remove('courses_' + _this.config.user.id);
                        _this.storage.remove('fullcourse_' + _this.course.id);
                        _this.config.removeFromTracker('courses', _this.course.id);
                        _this.config.removeFromTracker('profiletabs', 'courses');
                        _this.userService.addCourse(_this.course).subscribe(function (res) {
                            var toast = _this.toastCtrl.create({
                                message: res.message,
                                duration: 3500,
                                position: 'bottom'
                            });
                            loading_1.dismiss();
                            if (res.status) {
                                toast.onDidDismiss(function () {
                                    _this.getCourse(_this.course, true);
                                    _this.config.updateComponents('profile', 0);
                                });
                            }
                            toast.present();
                        });
                    }
                    else {
                        loading_1.dismiss();
                        var toast = _this.toastCtrl.create({
                            message: res.message,
                            duration: 3500,
                            position: 'bottom',
                        });
                        toast.present();
                    }
                });
                return;
            }
            if (pricing.link) {
                _this.browser = _this.iab.create(pricing.link, "_blank", "location=no"); //, "
                _this.browser.show();
                _this.browser.insertCSS({ code: "header,footer{display:none;}" });
                if (_this.config.isLoggedIn) {
                    _this.browser.executeScript({ code: "jQuery(document).ready(function(){ jQuery('#billing_email').val(" + _this.config.user.email + ");jQuery('#billing_first_name').val(" + _this.config.user.name + "); });" });
                }
                _this.browser.on('loadstart').subscribe(function (event) {
                    if (pricing.source == 'woocommerce' && event.url.indexOf('?key=wc_order_') !== -1) {
                        var matches = event.url.match('.+/([0-9]+)/.+');
                        _this.browser.close();
                        _this.getCourse(_this.course, true);
                        _this.config.updateComponents('profile', 0);
                        //get order id
                        //let order_id = matches[1];
                    }
                });
                _this.browser.on('exit').subscribe(function (event) {
                    _this.browser.close();
                });
            }
        });
    };
    CoursePage.prototype.handleWalletPayment = function (pricing) {
        var _this = this;
        if (this.config.isLoggedIn) {
            console.log(this.walletService.wallet);
            pricing.value = parseInt(pricing.value);
            if (this.walletService.wallet.amount >= pricing.value) {
                this.walletService.walletPayment({ 'amount': pricing.value, 'type': 'debit', 'extras': { 'pricing': pricing, 'course': this.fullCourse } })
                    .subscribe(function (res) {
                    if (res) {
                        var toast = _this.toastCtrl.create({
                            message: res.message,
                            duration: 1000,
                            position: 'bottom',
                        });
                        toast.present();
                        if (res.status) {
                            toast.onDidDismiss(function () {
                                _this.getCourse(_this.course, true);
                                _this.config.updateComponents('profile', 0);
                            });
                        }
                    }
                });
            }
            else {
                var toast = this.toastCtrl.create({
                    message: this.config.get_translation('insufficient_funds'),
                    duration: 1000,
                    position: 'bottom',
                });
                toast.present();
            }
        }
        else {
            var toast = this.toastCtrl.create({
                message: this.config.get_translation('login_to_buy'),
                duration: 1000,
                position: 'bottom',
            });
            toast.present();
            toast.onDidDismiss(function () {
                _this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_10__profile_profile__["a" /* ProfilePage */], {});
            });
        }
    };
    CoursePage.prototype.isSwipedPrice = function (pricing) {
        if (this.coursePriceSelected.indexOf(pricing) !== -1) {
            return true;
        }
        return false;
    };
    CoursePage.prototype.goToCourseStatusPage = function (data) {
        var $this = this;
        if (this.fullCourse['batch'] && this.fullCourse['batch'].status) {
            if (this.fullCourse['batch'].batches_course_access) {
                if (this.fullCourse['batch'].batches_course_access.return) {
                    console.log(' batch access to course');
                    var toast = this.toastCtrl.create({
                        message: $this.stripHtml($this.fullCourse['batch'].batches_course_access.message),
                        duration: 1000,
                        position: 'bottom',
                    });
                    toast.present();
                    this.navCtrl.push(this.courseStatusPage, data);
                }
                else {
                    console.log('batch access to course denied');
                    // you have no access from batch
                    var toast = this.toastCtrl.create({
                        message: $this.stripHtml($this.fullCourse['batch'].batches_course_access.message),
                        duration: 1000,
                        position: 'bottom',
                    });
                    toast.present();
                }
            }
        }
        else {
            console.log('course access without batch');
            this.navCtrl.push(this.courseStatusPage, data);
        }
    };
    CoursePage.prototype.stripHtml = function (html) {
        // Create a new div element
        var temporalDivElement = document.createElement("div");
        // Set the HTML content with the providen
        temporalDivElement.innerHTML = html;
        // Retrieve the text property of the element (cross-browser support)
        return temporalDivElement.textContent || temporalDivElement.innerText || "";
    };
    CoursePage.prototype.onPlayerReady = function (api) {
        var _this = this;
        this.api = api;
        this.api.getDefaultMedia().subscriptions.ended.subscribe(function () {
            // Set the video to the beginning
            _this.api.getDefaultMedia().currentTime = 0;
            console.log('ended');
        });
    };
    CoursePage.prototype.isObject = function (obj) {
        return typeof obj === 'object';
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('CourseTabs'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["p" /* Slides */])
    ], CoursePage.prototype, "courseTabs", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('CourseSlides'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["p" /* Slides */])
    ], CoursePage.prototype, "courseSlides", void 0);
    CoursePage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-course',template:/*ion-inline-start:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\pages\course\course.html"*/'<ion-header>\n    <ion-navbar color="transparent">\n        <ion-buttons start>\n            <button ion-button menuToggle>\n                <ion-icon name="md-menu"></ion-icon>\n            </button>\n        </ion-buttons>\n        <ion-title>{{fullCourse?.course.name}}</ion-title>\n        <ion-buttons end>\n            <button ion-button (click)="openSearch()">\n                <ion-icon name="md-search"></ion-icon>\n            </button>\n        </ion-buttons>\n        <ion-buttons end>\n            <button ion-button [navPush]="profilePage" [navParams]="userdata">\n                <ion-icon name="md-contact" *ngIf="!config.isLoggedIn"></ion-icon>\n                <img *ngIf="config.isLoggedIn" [src]="config.user?.avatar">\n            </button>\n        </ion-buttons>\n    </ion-navbar>\n</ion-header>\n<ion-content elastic-header fixedscrollheader>\n\n    <div id="featured">\n\n        <img [src]="fullCourse?.course.featured_image" />\n        <div class="on_featured_image">\n            <ion-row>\n                <ion-col *ngIf="fullCourse?.course.average_rating">\n                    <star-rating [rating]="fullCourse?.course.average_rating"></star-rating>\n                </ion-col>\n                <!--<ion-col>\n                    <ion-icon name="md-contacts"></ion-icon><span\n                        *ngIf="fullCourse?.course.seats">{{fullCourse?.course.total_students}}/{{course.seats}}</span><span\n                        *ngIf="!fullCourse?.course.seats">{{fullCourse?.course.total_students}}</span>\n                </ion-col>-->\n                <ion-col>\n                    <div class="course_instructor">\n                        <ion-avatar item-left>\n                            <img [src]=fullCourse?.course.instructor?.avatar>\n                        </ion-avatar>\n                        <strong>{{fullCourse?.course.instructor?.name}}</strong>\n                    </div>\n                </ion-col>\n            </ion-row>\n            <ion-slides dir="{{config.settings.rtl ? \'rtl\' : undefined }}" #CourseTabs id="coursetabs" spaceBetween="0"\n                slidesPerView="3" (ionSlideDidChange)="onTabChanged()">\n                <ion-slide *ngFor="let tab of coursetabs; let i=index;">\n                    <button ion-button (click)="selectedTab(i)">\n                        {{this.config.get_translation(tab)}}\n                    </button>\n                </ion-slide>\n            </ion-slides>\n        </div>\n    </div>\n    <button id="course_button" ion-button icon-left *ngIf="myCourse" [innerHtml]="show_course_status()"\n        (click)="goToCourseStatusPage({\'course\':course,\'user\':config.user})"></button>\n\n    <button id="course_button" class="single_price" ion-button icon-left\n        *ngIf="!myCourse && fullCourse && !config.isArray(fullCourse.course.price_html)"\n        (click)="buyCourse(fullCourse.course.price_html,fullCourse)"\n        [innerHtml]="fullCourse.course.price_html+(expired?\' (\'+config.get_translation(\'expired_course\')+\')\':\'\')"></button>\n\n    <button id="course_button" class="single_price" ion-button icon-left\n        *ngIf="!myCourse && fullCourse && fullCourse.course.price_html.length == 1 && config.isArray(fullCourse.course.price_html)"\n        (click)="buyCourse(fullCourse.course.price_html[0],fullCourse)"\n        [innerHtml]="fullCourse?.course.price_html[0].html+(expired?\' (\'+config.get_translation(\'expired_course\')+\')\':\'\')"></button>\n\n    <button id="course_button" class="multiple_price" ion-button icon-left\n        *ngIf="!myCourse && fullCourse &&  fullCourse.course.price_html.length > 1 && config.isArray(fullCourse.course.price_html)"\n        (click)="showPricing(fullCourse)"\n        [innerHtml]="config.get_translation(\'pricing_options\')+(expired?\' (\'+config.get_translation(\'expired_course\')+\')\':\'\')"></button>\n\n\n    <div id="buy_popup"\n        *ngIf="fullCourse && fullCourse.course.price_html && !config.isString(fullCourse.course.price_html)"\n        [ngClass]="{\'active\': activateBuyPopup}">\n\n        <div class="pricing_options">\n            <ion-list class="pricing_option">\n                <ion-item>\n                    <h4>{{config.get_translation(\'pricing_options_title\')}}</h4>\n                    <ion-icon name="close" (click)="closePp()" class="close_pp"></ion-icon>\n                </ion-item>\n                <ion-item *ngFor="let pricing of fullCourse.course.price_html" (swipe)="buyCourse(pricing,fullCourse)"\n                    [ngClass]="{\'highlighted\': isSwipedPrice(pricing)}">\n                    <div (click)="showExtras(pricing)">\n                        <label [innerHtml]="pricing.html" class="item_html"></label>\n                        <ion-icon class="right updown" *ngIf="pricing.extras && !pricing.extras.open"\n                            name="arrow-dropdown"></ion-icon>\n                        <ion-icon class="right updown" *ngIf="pricing.extras && pricing.extras.open"\n                            name="arrow-dropup"></ion-icon>\n                        <div class="extras" *ngIf="pricing.extras && pricing.extras.open">\n                            <ul class="extras">\n                                <span *ngFor="let extra of pricing.extras">\n                                    <li *ngIf="extra.value && extra.value.length">\n                                        <label>{{extra.label}} : </label>\n                                        <span>\n                                            <ion-icon name="md-close" *ngIf="extra.value == \'H\'"></ion-icon>\n                                            <ion-icon name="md-add" *ngIf="extra.value == \'S\'"></ion-icon>\n                                        </span>\n                                    </li>\n                                </span>\n\n                            </ul>\n                        </div>\n                    </div>\n\n                </ion-item>\n            </ion-list>\n        </div>\n    </div>\n\n\n    <div id="coursecontent" padding>\n        <ion-slides dir="{{config.settings.rtl ? \'rtl\' : undefined }}" id="courseslides" #CourseSlides\n            (ionSlideDidChange)="onSlideChanged()">\n\n            <ion-slide *ngFor="let tab of coursetabs; let i=index;">\n                <!-- older version for description handle if post_content key is set -->\n                <div class="{{tab}}" *ngIf="(tab == \'description\') && !fullCourse.post_content " [innerHTML]="fullCourse[tab]"></div>   \n\n                <div class="{{tab}}" *ngIf="(tab == \'description\')">\n                    <div *ngIf="fullCourse.post_content ">\n                        <div *ngIf="fullCourse.post_content.meta">\n                            <VideoGularBlock [meta]="fullCourse.post_content.meta"></VideoGularBlock>\n                        </div>\n                        <!-- content -->\n                        <div *ngIf="fullCourse.post_content.rest_content"\n                            [innerHTML]="fullCourse.post_content.rest_content"></div>\n                    </div>\n                </div>\n                <div class="{{tab}}" *ngIf="(tab == \'curriculum\')">\n                    <ion-list>\n                        <ion-item *ngFor="let item of fullCourse[tab]">\n                            <h3 *ngIf="item?.type === \'section\'">\n                                <strong [innerHtml]="item.title"></strong>\n                            </h3>\n                            <h3 *ngIf="item?.type === \'unit\'">\n                                <span [innerHtml]="item.title"></span>\n                            </h3>\n                            <ion-icon name="ios-arrow-dropright" item-left *ngIf="item?.type === \'unit\'"></ion-icon>\n                            <ion-icon name="md-alarm" item-left *ngIf="item?.type === \'quiz\'"></ion-icon>\n                            <h3 *ngIf="item?.type === \'quiz\'">\n                                <span [innerHtml]="item.title"></span>\n                            </h3>\n                        </ion-item>\n                    </ion-list>\n                </div>\n                <div class="{{tab}}" *ngIf="(tab == \'reviews\')">\n                    <div class="message" *ngIf="!fullCourse[tab]?.length">\n                        {{config.get_translation(\'no_reviews\')}}\n                    </div>\n                    <ion-grid>\n                        <ion-row>\n                            <ion-col *ngFor="let item of fullCourse[tab]" col-12 col-lg-6>\n                                <ion-card>\n                                    <ion-card-title>\n                                        <star-rating [rating]="item?.rating" align-right></star-rating>{{item.title}}\n                                    </ion-card-title>\n                                    <ion-card-content [innerHtml]=item?.content>\n                                    </ion-card-content>\n                                    <ion-item>\n                                        <ion-avatar item-left>\n                                            <img [src]=item?.member?.avatar>\n                                        </ion-avatar>\n                                        <h4>{{item.member?.name}}<span\n                                                *ngIf="item.member.sub && item.member.sub != \'false\'">{{item.member?.sub}</span></h4>\n                                    </ion-item>\n                                </ion-card>\n                            </ion-col>\n                        </ion-row>\n                    </ion-grid>\n                </div>\n                <div class="{{tab}}" *ngIf="(tab == \'instructors\')">\n                                                <ion-grid>\n                                                    <ion-row>\n                                                        <ion-col *ngFor="let item of fullCourse[tab]" col-12 col-lg-6>\n                                                            <instructorblock [instructor]="item"></instructorblock>\n                                                        </ion-col>\n                                                    </ion-row>\n                                                </ion-grid>\n                </div>\n                <div class="{{tab}}" *ngIf="(tab == \'batch\')">\n                    <div *ngIf="config.batch.enable_batch">\n                        <div *ngIf="fullCourse[tab] && fullCourse[tab].status">\n                            <div *ngIf="fullCourse[tab].data.length">\n                                <div *ngFor="let group of fullCourse[tab].data">\n                                    <GroupBlock [group]="group" [course_id]="fullCourse[\'course\'].id"></GroupBlock>\n                                </div>\n                            </div>\n                            <div *ngIf="!fullCourse[tab].data.length">{{config.get_translation(\'no_batches_in_course\')}}\n                            </div>\n                        </div>\n                    </div>\n                    <div *ngIf="!config.batch.enable_batch">{{config.get_translation(\'Batches_not_enable_in_app\')}}\n                    </div>\n                </div>\n            </ion-slide>\n        </ion-slides>\n    </div>\n    <div *ngIf="message?.length" class="message_toggle">\n        <div [innerHtml]="message"></div>\n    </div>\n</ion-content>'/*ion-inline-end:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\pages\course\course.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* ModalController */],
            __WEBPACK_IMPORTED_MODULE_3__services_course__["a" /* CourseService */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["o" /* Platform */],
            __WEBPACK_IMPORTED_MODULE_6__services_config__["a" /* ConfigService */],
            __WEBPACK_IMPORTED_MODULE_7__services_users__["a" /* UserService */],
            __WEBPACK_IMPORTED_MODULE_5__ionic_storage__["b" /* Storage */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* ToastController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* LoadingController */],
            __WEBPACK_IMPORTED_MODULE_4__ionic_native_in_app_browser__["a" /* InAppBrowser */],
            __WEBPACK_IMPORTED_MODULE_9__services_wallet__["a" /* WalletService */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */]])
    ], CoursePage);
    return CoursePage;
}());

//# sourceMappingURL=course.js.map

/***/ }),

/***/ 620:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MyApp; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ionic_native_splash_screen__ = __webpack_require__(309);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__pages_intro_intro__ = __webpack_require__(313);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__pages_tabs_tabs__ = __webpack_require__(57);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__services_config__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__services_push_notification__ = __webpack_require__(114);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__services_sidemenu__ = __webpack_require__(189);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__ionic_storage__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__services_imageCache__ = __webpack_require__(191);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


//import { StatusBar, Splashscreen } from 'ionic-native';








var MyApp = /** @class */ (function () {
    function MyApp(config, platform, menuCtrl, loadingCtrl, app, storage, imgcacheService, 
    // private admob: AdMob,
    splashScreen, sidemenu, push_notification) {
        var _this = this;
        this.config = config;
        this.platform = platform;
        this.menuCtrl = menuCtrl;
        this.loadingCtrl = loadingCtrl;
        this.app = app;
        this.storage = storage;
        this.imgcacheService = imgcacheService;
        this.splashScreen = splashScreen;
        this.sidemenu = sidemenu;
        this.push_notification = push_notification;
        this.pages = [];
        this.presentLoading();
        this.platform.ready().then(function () {
            if (_this.config.settings.rtl) {
                _this.platform.setDir('rtl', true);
            }
            _this.push_notification.push_notifcation_firebase();
            /* check here storage:
               if introShown found then RootPage = TabsPage
               else RootPage = IntroPage
               And navRoot set
            */
            _this.storage.get('introShown').then(function (result) {
                _this.splashScreen.hide();
                if (result) {
                    _this.rootPage = __WEBPACK_IMPORTED_MODULE_4__pages_tabs_tabs__["a" /* TabsPage */];
                    var nav_1 = _this.app.getRootNav();
                    _this.imgcacheService.initImgCache().subscribe(function () {
                        _this.initialize().then(function (res) {
                            _this.config.initialize();
                            _this.sidemenu.set_Pages();
                            nav_1.setRoot(_this.rootPage);
                        });
                        _this.loader.dismiss();
                    });
                }
                else {
                    _this.rootPage = __WEBPACK_IMPORTED_MODULE_3__pages_intro_intro__["a" /* Intro */];
                    var nav_2 = _this.app.getRootNav();
                    _this.imgcacheService.initImgCache().subscribe(function () {
                        _this.initialize().then(function (res) {
                            _this.sidemenu.set_Pages();
                            nav_2.setRoot(_this.rootPage);
                        });
                        _this.loader.dismiss();
                    });
                }
            });
        });
    }
    // intro already shown
    MyApp.prototype.initialize = function () {
        var $this = this;
        return new Promise(function (resolve) {
            // select site from storage then override config variables
            var promise1 = new Promise(function (resolve1) {
                $this.storage.get('site_index').then(function (site_index) {
                    if (site_index) {
                        $this.config.set_multisite(site_index);
                    }
                    resolve1();
                });
            });
            // select setting from storage then override to config.settings
            var promise2 = new Promise(function (resolve2) {
                $this.storage.get('settings').then(function (settings) {
                    if (settings) {
                        $this.config.settings = settings;
                        $this.config.set_base_url();
                    }
                    resolve2();
                });
            });
            var promise3 = new Promise(function (resolve3) {
                $this.storage.get('user').then(function (res) {
                    if (res) {
                        $this.config.user = res;
                        if ($this.config.user['id']) {
                            $this.config.isLoggedIn = true;
                        }
                    }
                    resolve3();
                });
            });
            // resolve function when all promise resolves
            Promise.all([promise1, promise2, promise3]).then(function (values) {
                console.log('allPromise resolved');
                resolve();
            });
        });
    };
    MyApp.prototype.ngOnInit = function () {
    };
    MyApp.prototype.presentLoading = function () {
        this.loader = this.loadingCtrl.create({
            content: '<img src="assets/images/bubbles.svg">',
            duration: 5000,
            spinner: 'hide',
            showBackdrop: true,
        });
        this.loader.present();
    };
    MyApp.prototype.onLoad = function (page) {
        var nav = this.app.getRootNav();
        nav.setRoot(page.component, { index: page.index });
        //nav.push(page);
        //this.app.getRootNav().push(page);
        //this.nav.push(page);
        //this.nav.setRoot(page);
        this.menuCtrl.close();
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('nav'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */])
    ], MyApp.prototype, "nav", void 0);
    MyApp = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({template:/*ion-inline-start:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\app\app.html"*/'<ion-split-pane when="md">\n	<ion-menu id="mainmenu" [content]="nav" *ngIf=sidemenu.pages.length>\n		<ion-content>\n			<div id="logo">\n				<img src="assets/images/largelogo.png" />\n			</div>\n			<ion-list>\n				<button ion-item *ngFor="let p of sidemenu.pages" (click)="onLoad(p)">\n					<div class="menuitem">\n						<strong [innerHtml]="p.title"></strong>\n					</div>\n				</button>\n			</ion-list>\n		</ion-content>\n	</ion-menu>\n\n<ion-nav [root]="tabsPage" #nav swipe-back-enabled="false" main></ion-nav>\n</ion-split-pane>'/*ion-inline-end:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\app\app.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_5__services_config__["a" /* ConfigService */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["o" /* Platform */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["k" /* MenuController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* LoadingController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["c" /* App */],
            __WEBPACK_IMPORTED_MODULE_8__ionic_storage__["b" /* Storage */],
            __WEBPACK_IMPORTED_MODULE_9__services_imageCache__["a" /* ImgcacheService */],
            __WEBPACK_IMPORTED_MODULE_2__ionic_native_splash_screen__["a" /* SplashScreen */],
            __WEBPACK_IMPORTED_MODULE_7__services_sidemenu__["a" /* SideMenuService */],
            __WEBPACK_IMPORTED_MODULE_6__services_push_notification__["a" /* PushNotificationService */]])
    ], MyApp);
    return MyApp;
}());

//# sourceMappingURL=app.component.js.map

/***/ }),

/***/ 642:
/***/ (function(module, exports, __webpack_require__) {

var map = {
	"./af": 331,
	"./af.js": 331,
	"./ar": 332,
	"./ar-dz": 333,
	"./ar-dz.js": 333,
	"./ar-kw": 334,
	"./ar-kw.js": 334,
	"./ar-ly": 335,
	"./ar-ly.js": 335,
	"./ar-ma": 336,
	"./ar-ma.js": 336,
	"./ar-sa": 337,
	"./ar-sa.js": 337,
	"./ar-tn": 338,
	"./ar-tn.js": 338,
	"./ar.js": 332,
	"./az": 339,
	"./az.js": 339,
	"./be": 340,
	"./be.js": 340,
	"./bg": 341,
	"./bg.js": 341,
	"./bm": 342,
	"./bm.js": 342,
	"./bn": 343,
	"./bn.js": 343,
	"./bo": 344,
	"./bo.js": 344,
	"./br": 345,
	"./br.js": 345,
	"./bs": 346,
	"./bs.js": 346,
	"./ca": 347,
	"./ca.js": 347,
	"./cs": 348,
	"./cs.js": 348,
	"./cv": 349,
	"./cv.js": 349,
	"./cy": 350,
	"./cy.js": 350,
	"./da": 351,
	"./da.js": 351,
	"./de": 352,
	"./de-at": 353,
	"./de-at.js": 353,
	"./de-ch": 354,
	"./de-ch.js": 354,
	"./de.js": 352,
	"./dv": 355,
	"./dv.js": 355,
	"./el": 356,
	"./el.js": 356,
	"./en-au": 357,
	"./en-au.js": 357,
	"./en-ca": 358,
	"./en-ca.js": 358,
	"./en-gb": 359,
	"./en-gb.js": 359,
	"./en-ie": 360,
	"./en-ie.js": 360,
	"./en-il": 361,
	"./en-il.js": 361,
	"./en-in": 362,
	"./en-in.js": 362,
	"./en-nz": 363,
	"./en-nz.js": 363,
	"./en-sg": 364,
	"./en-sg.js": 364,
	"./eo": 365,
	"./eo.js": 365,
	"./es": 366,
	"./es-do": 367,
	"./es-do.js": 367,
	"./es-us": 368,
	"./es-us.js": 368,
	"./es.js": 366,
	"./et": 369,
	"./et.js": 369,
	"./eu": 370,
	"./eu.js": 370,
	"./fa": 371,
	"./fa.js": 371,
	"./fi": 372,
	"./fi.js": 372,
	"./fil": 373,
	"./fil.js": 373,
	"./fo": 374,
	"./fo.js": 374,
	"./fr": 375,
	"./fr-ca": 376,
	"./fr-ca.js": 376,
	"./fr-ch": 377,
	"./fr-ch.js": 377,
	"./fr.js": 375,
	"./fy": 378,
	"./fy.js": 378,
	"./ga": 379,
	"./ga.js": 379,
	"./gd": 380,
	"./gd.js": 380,
	"./gl": 381,
	"./gl.js": 381,
	"./gom-deva": 382,
	"./gom-deva.js": 382,
	"./gom-latn": 383,
	"./gom-latn.js": 383,
	"./gu": 384,
	"./gu.js": 384,
	"./he": 385,
	"./he.js": 385,
	"./hi": 386,
	"./hi.js": 386,
	"./hr": 387,
	"./hr.js": 387,
	"./hu": 388,
	"./hu.js": 388,
	"./hy-am": 389,
	"./hy-am.js": 389,
	"./id": 390,
	"./id.js": 390,
	"./is": 391,
	"./is.js": 391,
	"./it": 392,
	"./it-ch": 393,
	"./it-ch.js": 393,
	"./it.js": 392,
	"./ja": 394,
	"./ja.js": 394,
	"./jv": 395,
	"./jv.js": 395,
	"./ka": 396,
	"./ka.js": 396,
	"./kk": 397,
	"./kk.js": 397,
	"./km": 398,
	"./km.js": 398,
	"./kn": 399,
	"./kn.js": 399,
	"./ko": 400,
	"./ko.js": 400,
	"./ku": 401,
	"./ku.js": 401,
	"./ky": 402,
	"./ky.js": 402,
	"./lb": 403,
	"./lb.js": 403,
	"./lo": 404,
	"./lo.js": 404,
	"./lt": 405,
	"./lt.js": 405,
	"./lv": 406,
	"./lv.js": 406,
	"./me": 407,
	"./me.js": 407,
	"./mi": 408,
	"./mi.js": 408,
	"./mk": 409,
	"./mk.js": 409,
	"./ml": 410,
	"./ml.js": 410,
	"./mn": 411,
	"./mn.js": 411,
	"./mr": 412,
	"./mr.js": 412,
	"./ms": 413,
	"./ms-my": 414,
	"./ms-my.js": 414,
	"./ms.js": 413,
	"./mt": 415,
	"./mt.js": 415,
	"./my": 416,
	"./my.js": 416,
	"./nb": 417,
	"./nb.js": 417,
	"./ne": 418,
	"./ne.js": 418,
	"./nl": 419,
	"./nl-be": 420,
	"./nl-be.js": 420,
	"./nl.js": 419,
	"./nn": 421,
	"./nn.js": 421,
	"./oc-lnc": 422,
	"./oc-lnc.js": 422,
	"./pa-in": 423,
	"./pa-in.js": 423,
	"./pl": 424,
	"./pl.js": 424,
	"./pt": 425,
	"./pt-br": 426,
	"./pt-br.js": 426,
	"./pt.js": 425,
	"./ro": 427,
	"./ro.js": 427,
	"./ru": 428,
	"./ru.js": 428,
	"./sd": 429,
	"./sd.js": 429,
	"./se": 430,
	"./se.js": 430,
	"./si": 431,
	"./si.js": 431,
	"./sk": 432,
	"./sk.js": 432,
	"./sl": 433,
	"./sl.js": 433,
	"./sq": 434,
	"./sq.js": 434,
	"./sr": 435,
	"./sr-cyrl": 436,
	"./sr-cyrl.js": 436,
	"./sr.js": 435,
	"./ss": 437,
	"./ss.js": 437,
	"./sv": 438,
	"./sv.js": 438,
	"./sw": 439,
	"./sw.js": 439,
	"./ta": 440,
	"./ta.js": 440,
	"./te": 441,
	"./te.js": 441,
	"./tet": 442,
	"./tet.js": 442,
	"./tg": 443,
	"./tg.js": 443,
	"./th": 444,
	"./th.js": 444,
	"./tl-ph": 445,
	"./tl-ph.js": 445,
	"./tlh": 446,
	"./tlh.js": 446,
	"./tr": 447,
	"./tr.js": 447,
	"./tzl": 448,
	"./tzl.js": 448,
	"./tzm": 449,
	"./tzm-latn": 450,
	"./tzm-latn.js": 450,
	"./tzm.js": 449,
	"./ug-cn": 451,
	"./ug-cn.js": 451,
	"./uk": 452,
	"./uk.js": 452,
	"./ur": 453,
	"./ur.js": 453,
	"./uz": 454,
	"./uz-latn": 455,
	"./uz-latn.js": 455,
	"./uz.js": 454,
	"./vi": 456,
	"./vi.js": 456,
	"./x-pseudo": 457,
	"./x-pseudo.js": 457,
	"./yo": 458,
	"./yo.js": 458,
	"./zh-cn": 459,
	"./zh-cn.js": 459,
	"./zh-hk": 460,
	"./zh-hk.js": 460,
	"./zh-mo": 461,
	"./zh-mo.js": 461,
	"./zh-tw": 462,
	"./zh-tw.js": 462
};
function webpackContext(req) {
	return __webpack_require__(webpackContextResolve(req));
};
function webpackContextResolve(req) {
	var id = map[req];
	if(!(id + 1)) // check for number or string
		throw new Error("Cannot find module '" + req + "'.");
	return id;
};
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = 642;

/***/ }),

/***/ 655:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ionSlideTabs; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

//import {List, Item} from 'ionic/ionic';
//'$timeout', '$compile', '$interval', '$ionicSlideBoxDelegate', '$ionicScrollDelegate', '$ionicGesture',
var ionSlideTabs = /** @class */ (function () {
    function ionSlideTabs(el, renderer) {
        this.el = el;
        this.renderer = renderer;
        this.active = false;
        this.position = 'left';
        this.color = 'secondary';
        this.icon = 'more';
        this.cssClass = '';
        this.enableBackdropDismiss = true;
        this.buttons = [];
    }
    ionSlideTabs.prototype.ngOnInit = function () {
        this.renderer.setElementClass(this.el.nativeElement, this.position, true);
    };
    ionSlideTabs.prototype.onClick = function (event, button) {
        var _this = this;
        // We are listening to click event on document in order to be able to close button on backdrop click
        // Therefore we need to check if user clicked on our component or outside
        if (!event && !button) {
            // clicked on backdrop
            if (this.enableBackdropDismiss === true && this.active) {
                this.closeButton();
                return;
            }
        }
        if (this.el.nativeElement.contains(event.target)) {
            // User has clicked on our component. Check if he clicked on sub button or no.
            if (button) {
                var shouldDismiss = true;
                if (button.handler) {
                    // a handler has been provided, execute it
                    if (button.handler() === false) {
                        // if the return value of the handler is false then do not dismiss
                        shouldDismiss = false;
                    }
                }
                if (shouldDismiss) {
                    setTimeout(function () {
                        _this.closeButton();
                    }, 10);
                }
            }
            else {
                if (!this.active)
                    this.openButton();
            }
        }
        else {
            // User has clicked outside our component.
            // Check if `enableBackdropDismiss` is true and if component is opened.
            if (this.enableBackdropDismiss === true && this.active) {
                this.closeButton();
            }
        }
    };
    Object.defineProperty(ionSlideTabs.prototype, "width", {
        get: function () {
            var width = window.innerWidth / 56 * 2;
            return 'scale(' + width + ')';
        },
        enumerable: true,
        configurable: true
    });
    ionSlideTabs.prototype.openButton = function () {
        var _this = this;
        this.renderer.setElementClass(this.el.nativeElement, 'activated', !this.active);
        setTimeout(function () {
            _this.renderer.setElementClass(_this.el.nativeElement, 'closed', false);
            _this.renderer.setElementClass(_this.el.nativeElement, 'opened', true);
        }, 400);
        this.renderer.setElementStyle(this.el.nativeElement, 'width', '100%');
        this.active = !this.active;
    };
    ionSlideTabs.prototype.closeButton = function () {
        var _this = this;
        this.renderer.setElementClass(this.el.nativeElement, 'activated', !this.active);
        setTimeout(function () {
            _this.renderer.setElementClass(_this.el.nativeElement, 'opened', false);
            _this.renderer.setElementClass(_this.el.nativeElement, 'closed', true);
            _this.renderer.setElementStyle(_this.el.nativeElement, 'width', '68px');
        }, 400);
        this.active = !this.active;
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
        __metadata("design:type", String)
    ], ionSlideTabs.prototype, "position", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
        __metadata("design:type", String)
    ], ionSlideTabs.prototype, "color", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
        __metadata("design:type", String)
    ], ionSlideTabs.prototype, "icon", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
        __metadata("design:type", String)
    ], ionSlideTabs.prototype, "cssClass", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
        __metadata("design:type", Boolean)
    ], ionSlideTabs.prototype, "enableBackdropDismiss", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
        __metadata("design:type", Array)
    ], ionSlideTabs.prototype, "buttons", void 0);
    ionSlideTabs = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'ion-slide-tabs',
            template: "\n        <div tappable class=\"backdrop\" (click)=\"onClick(false, false)\"></div>\n        <div class=\"fab-toolbar\">\n            <ion-row [style.transform]=\"\">\n                <ion-col class=\"{{b.icon && b.title ? 'icon-and-title' : ''}}\" *ngFor=\"let b of buttons\">\n                    <button (click)=\"onClick($event, b)\" ion-button clear [color]=\"b.color ? b.color : 'light'\">\n                        <div>\n                            <ion-icon *ngIf=\"b.icon\" [name]=\"b.icon\"></ion-icon>\n                                <br *ngIf=\"b.title && b.icon\">\n                            <label *ngIf=\"b.title\">{{b.title}}</label>\n                        </div>\n                    </button>\n                </ion-col>\n            </ion-row>\n            <button (click)=\"onClick($event, false)\" [style.transform]=\"active ? width: 'scale(1)' \"ion-fab color=\"{{color}}\"><ion-icon name=\"{{icon}}\"></ion-icon></button>\n        </div>\n        "
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"], __WEBPACK_IMPORTED_MODULE_0__angular_core__["Renderer"]])
    ], ionSlideTabs);
    return ionSlideTabs;
}());

//# sourceMappingURL=swipedtab.js.map

/***/ }),

/***/ 656:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return EmailValidatorDirective; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_forms__ = __webpack_require__(17);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};


var EmailValidatorDirective = /** @class */ (function () {
    function EmailValidatorDirective() {
    }
    EmailValidatorDirective_1 = EmailValidatorDirective;
    EmailValidatorDirective.prototype.validate = function (c) {
        var regExp = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;
        if (!regExp.test(c.value)) {
            return { "invalidEmail": true };
        }
        return null;
    };
    var EmailValidatorDirective_1;
    EmailValidatorDirective = EmailValidatorDirective_1 = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Directive"])({
            selector: '[email-validator][formControlName],[email-validator][ngModel]',
            providers: [{ provide: __WEBPACK_IMPORTED_MODULE_1__angular_forms__["e" /* NG_VALIDATORS */], useExisting: EmailValidatorDirective_1, multi: true }]
        })
    ], EmailValidatorDirective);
    return EmailValidatorDirective;
}());

//# sourceMappingURL=FormValidator.js.map

/***/ }),

/***/ 657:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return LazyImgComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

/**
 * Component in charge of lazy load images and cache them
 */
var LazyImgComponent = /** @class */ (function () {
    function LazyImgComponent() {
        this.imgStyle = {};
        this.placeholderActive = true;
    }
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
        __metadata("design:type", String)
    ], LazyImgComponent.prototype, "inputSrc", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
        __metadata("design:type", Object)
    ], LazyImgComponent.prototype, "imgStyle", void 0);
    LazyImgComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'lazy-img',
            template: "\n  <div text-center [ngClass]=\"{ 'placeholder': placeholderActive }\">\n    <img [src]=\"inputSrc\" [ngStyle]=\"style\" lazy-load (loaded)=\"placeholderActive = false\"/>\n  </div>\n  "
        })
    ], LazyImgComponent);
    return LazyImgComponent;
}());

//# sourceMappingURL=lazy-img.js.map

/***/ }),

/***/ 658:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return LazyLoadDirective; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_imageCache__ = __webpack_require__(191);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


/**
* This directive is charge of cache the images and emit a loaded event
*/
var LazyLoadDirective = /** @class */ (function () {
    function LazyLoadDirective(el, imgCacheService, renderer) {
        this.el = el;
        this.imgCacheService = imgCacheService;
        this.renderer = renderer;
        this.inputSrc = '';
        this.loaded = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
    }
    LazyLoadDirective.prototype.ngOnInit = function () {
        var _this = this;
        // get img element
        var nativeElement = this.el.nativeElement;
        // add load listener
        this.loadListener = this.renderer.listen(nativeElement, 'load', function () {
            _this.renderer.addClass(nativeElement, 'loaded');
            _this.loaded.emit();
        });
        this.errorListener = this.renderer.listen(nativeElement, 'error', function () {
            nativeElement.remove();
        });
        this.renderer.setAttribute(nativeElement, 'src', this.inputSrc);
        // cache img and set the src to the img
        this.cacheSubscription =
            this.imgCacheService
                .cache(this.inputSrc)
                .subscribe(function (value) {
                _this.renderer.setAttribute(nativeElement, 'src', value);
            }, function (e) { return console.log(e); });
    };
    LazyLoadDirective.prototype.ngOnDestroy = function () {
        // remove listeners
        this.loadListener();
        this.errorListener();
        this.cacheSubscription.unsubscribe();
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])('inputSrc'),
        __metadata("design:type", String)
    ], LazyLoadDirective.prototype, "inputSrc", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"])
    ], LazyLoadDirective.prototype, "loaded", void 0);
    LazyLoadDirective = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Directive"])({
            selector: '[lazy-load]'
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"],
            __WEBPACK_IMPORTED_MODULE_1__services_imageCache__["a" /* ImgcacheService */],
            __WEBPACK_IMPORTED_MODULE_0__angular_core__["Renderer2"]])
    ], LazyLoadDirective);
    return LazyLoadDirective;
}());

//# sourceMappingURL=lazy-load.directive.js.map

/***/ }),

/***/ 659:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PressDirective; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular_gestures_gesture__ = __webpack_require__(178);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var PressDirective = /** @class */ (function () {
    function PressDirective(el) {
        this.longPress = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        this.el = el.nativeElement;
    }
    PressDirective.prototype.ngOnInit = function () {
        var _this = this;
        this.pressGesture = new __WEBPACK_IMPORTED_MODULE_1_ionic_angular_gestures_gesture__["a" /* Gesture */](this.el);
        this.pressGesture.listen();
        this.pressGesture.on('press', function (e) {
            _this.longPress.emit(e);
        });
    };
    PressDirective.prototype.ngOnDestroy = function () {
        this.pressGesture.destroy();
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"])
    ], PressDirective.prototype, "longPress", void 0);
    PressDirective = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Directive"])({
            selector: '[longPress]'
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"]])
    ], PressDirective);
    return PressDirective;
}());

//# sourceMappingURL=longPress.directive.js.map

/***/ }),

/***/ 660:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PinchZoomDirective; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular_gestures_gesture__ = __webpack_require__(178);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var PinchZoomDirective = /** @class */ (function () {
    function PinchZoomDirective(el, renderer) {
        this.renderer = renderer;
        this.scale = 1;
        this.last_scale = 1;
        this.el = el.nativeElement;
    }
    PinchZoomDirective.prototype.ngOnInit = function () {
        var _this = this;
        this.pinchGesture = new __WEBPACK_IMPORTED_MODULE_1_ionic_angular_gestures_gesture__["a" /* Gesture */](this.el);
        this.pinchGesture.listen();
        this.pinchGesture.on('pinch', function (ev) {
            _this.scale = Math.max(.999, Math.min(_this.last_scale * (ev.scale), 4));
            _this.last_scale = _this.scale;
            var fontSize = _this.scale * 25;
            var textElement = _this.el.getElementsByClassName('style-ayah');
            if (textElement.length > 0) {
                _this.renderer.setElementStyle(textElement[0], 'font-size', fontSize + 'px');
            }
        });
    };
    PinchZoomDirective.prototype.OnDestroy = function () {
        this.pinchGesture.destroy();
    };
    PinchZoomDirective = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Directive"])({
            selector: '[pinch-zoom]'
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"], __WEBPACK_IMPORTED_MODULE_0__angular_core__["Renderer"]])
    ], PinchZoomDirective);
    return PinchZoomDirective;
}());

//# sourceMappingURL=pinch-zoom.directive.js.map

/***/ }),

/***/ 661:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ElasticDirective; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var ElasticDirective = /** @class */ (function () {
    function ElasticDirective() {
    }
    ElasticDirective.prototype.onInput = function (nativeElement) {
        nativeElement.style.height = nativeElement.scrollHeight + "px";
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["HostListener"])('input', ['$event.target']),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Object]),
        __metadata("design:returntype", void 0)
    ], ElasticDirective.prototype, "onInput", null);
    ElasticDirective = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Directive"])({
            selector: '[elastic]'
        })
    ], ElasticDirective);
    return ElasticDirective;
}());

//# sourceMappingURL=elastic.directive.js.map

/***/ }),

/***/ 662:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AboutPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(6);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var AboutPage = /** @class */ (function () {
    function AboutPage(navCtrl) {
        this.navCtrl = navCtrl;
    }
    AboutPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-about',template:/*ion-inline-start:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\pages\about\about.html"*/'<ion-header>\n    <ion-navbar  color="transparent">\n        <ion-buttons start>\n            <button ion-button menuToggle>\n                <ion-icon name="md-menu"></ion-icon>\n            </button>\n        </ion-buttons>\n        <ion-title>{{fullCourse?.course.name}}</ion-title>\n    </ion-navbar>\n</ion-header>\n<ion-content elastic-header fixedscrollheader>\n\n<h1></h1>\n<ion-grid>\n	<ion-col>\n		This is something about us\n	</ion-col>\n	<ion-col>\n		this is something about us.\n	</ion-col>\n</ion-grid>\n\n</ion-content>\n'/*ion-inline-end:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\pages\about\about.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */]])
    ], AboutPage);
    return AboutPage;
}());

//# sourceMappingURL=about.js.map

/***/ }),

/***/ 663:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return InstructorsPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__profile_profile__ = __webpack_require__(22);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__search_search__ = __webpack_require__(61);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__instructor_instructor__ = __webpack_require__(118);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__services_config__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__services_users__ = __webpack_require__(29);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};







var InstructorsPage = /** @class */ (function () {
    function InstructorsPage(navCtrl, navParams, config, userService, modalCtrl, loadingCtrl) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.config = config;
        this.userService = userService;
        this.modalCtrl = modalCtrl;
        this.loadingCtrl = loadingCtrl;
        this.instructorPage = __WEBPACK_IMPORTED_MODULE_4__instructor_instructor__["a" /* InstructorPage */];
        this.profilePage = __WEBPACK_IMPORTED_MODULE_2__profile_profile__["a" /* ProfilePage */];
        this.instructors = [];
        this.noMoreInstructorsAvailable = true;
        this.isLoggedIn = false;
    }
    InstructorsPage.prototype.ngOnInit = function () {
        var _this = this;
        var loading = this.loadingCtrl.create({
            content: '<img src="assets/images/bubbles.svg">',
            duration: 15000,
            spinner: 'hide',
            showBackdrop: true,
        });
        loading.present();
        this.userService.getAllInstructors().subscribe(function (res) {
            console.log(res);
            _this.instructors = res;
            loading.dismiss();
        });
        this.title = this.config.get_translation('instructors_page_title');
        this.subtitle = this.config.get_translation('instructors_page_description');
        this.no_instructors = this.config.get_translation('no_instructors');
        if (this.config.isLoggedIn) {
            this.userdata = { 'isLoggedIn': this.config.isLoggedIn, 'User': this.config.user };
        }
    };
    InstructorsPage.prototype.doInfinite = function () {
    };
    InstructorsPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad InstructorsPage');
    };
    InstructorsPage.prototype.openSearch = function () {
        var modal = this.modalCtrl.create(__WEBPACK_IMPORTED_MODULE_3__search_search__["a" /* SearchPage */]);
        modal.present();
    };
    InstructorsPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-instructors',template:/*ion-inline-start:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\pages\instructors\instructors.html"*/'<ion-header>\n    <ion-navbar  color="transparent" >\n        <ion-buttons start>\n            <button ion-button menuToggle>\n                <ion-icon name="md-menu"></ion-icon>\n            </button>\n        </ion-buttons>\n        <ion-title>{{title}}<span>{{subtitle}}</span></ion-title>\n            <ion-buttons end>\n                <button ion-button (click)="openSearch()">\n                    <ion-icon name="md-search"></ion-icon>\n                </button>\n            </ion-buttons>\n            <ion-buttons end>\n                <button ion-button [navPush]="profilePage" [navParams]="userdata">\n                    <ion-icon name="md-contact" *ngIf="!config.isLoggedIn"></ion-icon>\n                    <img *ngIf="config.isLoggedIn" [src]="config.user?.avatar">\n                </button>\n            </ion-buttons>\n    </ion-navbar>\n</ion-header>\n<ion-content padding>\n	\n	<div *ngIf="!instructors.length">\n		<div class="message" [innerHtml]="no_instructors">\n		</div>\n	</div>\n	<ion-grid>\n		<ion-row>\n			<ion-col col-12 col-md-6 col-lg-4 *ngFor="let instructor of instructors" >\n				<instructorblock [instructor]="instructor"></instructorblock>\n			</ion-col>	\n		    <ion-infinite-scroll *ngIf="!noMoreInstructorsAvailable"(ionInfinite)="doInfinite($event)">\n		       <ion-infinite-scroll-content></ion-infinite-scroll-content>\n		    </ion-infinite-scroll>\n	    </ion-row>\n    </ion-grid>\n</ion-content>\n\n'/*ion-inline-end:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\pages\instructors\instructors.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_5__services_config__["a" /* ConfigService */],
            __WEBPACK_IMPORTED_MODULE_6__services_users__["a" /* UserService */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* ModalController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* LoadingController */]])
    ], InstructorsPage);
    return InstructorsPage;
}());

//# sourceMappingURL=instructors.js.map

/***/ }),

/***/ 664:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return GroupdirectoryPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_map__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__services_config__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__services_course__ = __webpack_require__(49);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__services_group__ = __webpack_require__(70);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__profile_profile__ = __webpack_require__(22);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};







var GroupdirectoryPage = /** @class */ (function () {
    function GroupdirectoryPage(navCtrl, config, groupService, navParams, nav, courseService, toastCtrl, loadingCtrl) {
        this.navCtrl = navCtrl;
        this.config = config;
        this.groupService = groupService;
        this.navParams = navParams;
        this.nav = nav;
        this.courseService = courseService;
        this.toastCtrl = toastCtrl;
        this.loadingCtrl = loadingCtrl;
        this.profilePage = __WEBPACK_IMPORTED_MODULE_6__profile_profile__["a" /* ProfilePage */];
        this.loadmore = 1;
        /* filter options */
        this.sortby = '';
        this.filterby = '';
        this.searchTerm = '';
    }
    GroupdirectoryPage.prototype.ngOnInit = function () {
        var $this = this;
        console.log('init GroupdirectoryPage');
        var args = {};
        this.args = {};
        $this.loadmore = 0;
        this.get_groups('ngoninit', args).then(function (resolve) {
            if (resolve.length == $this.config.batch.limit) {
                $this.loadmore = 1;
            }
        });
    };
    GroupdirectoryPage.prototype.doInfinite = function ($event) {
        var $this = this;
        var args = {};
        args = this.args;
        $this.loadmore = 0;
        this.get_groups('infinite', args).then(function (resolve) {
            if (resolve.length == $this.config.batch.limit) {
                $this.loadmore = 1;
            }
            $event.complete();
        });
    };
    GroupdirectoryPage.prototype.doRefresh = function ($event) {
        var $this = this;
        var args = {};
        this.args = {};
        $this.loadmore = 0;
        this.get_groups('refresh', args).then(function (resolve) {
            if (resolve.length == $this.config.batch.limit) {
                $this.loadmore = 1;
            }
            $event.complete();
        });
        this.reset();
    };
    GroupdirectoryPage.prototype.reset = function () {
        this.sortby = '';
        this.filterby = '';
        this.searchTerm = '';
        this.args = {};
    };
    GroupdirectoryPage.prototype.get_groups = function (activity, args) {
        var _this = this;
        var $this = this;
        var loading = this.loadingCtrl.create({
            content: '<img src="assets/images/bubbles.svg">',
            duration: 3000,
            spinner: 'hide',
            showBackdrop: true,
        });
        loading.present();
        return new Promise(function (resolve) {
            $this.groupService.get_all_groups(activity, args).then(function (res) {
                if (res.status) {
                }
                else {
                    var toast = _this.toastCtrl.create({
                        message: res.message,
                        duration: 3000,
                        position: 'bottom'
                    });
                    toast.present();
                }
                loading.dismiss();
                resolve(res);
            });
        });
    };
    /* sort by groups and batches */
    GroupdirectoryPage.prototype.onSortOptions = function ($event) {
        var $this = this;
        this.sortby = $event;
        this.args.type = this.sortby;
        $this.loadmore = 0;
        this.get_groups('type', this.args).then(function (resolve) {
            if (resolve.length == $this.config.batch.limit) {
                $this.loadmore = 1;
            }
        });
    };
    /* filter by alphabet , lastActive , newlyCreated  and mostMembers */
    GroupdirectoryPage.prototype.onFilterOptions = function ($event) {
        var $this = this;
        this.filterby = $event;
        this.args.filterby = this.filterby;
        $this.loadmore = 0;
        this.get_groups('filterby', this.args).then(function (resolve) {
            if (resolve.length == $this.config.batch.limit) {
                $this.loadmore = 1;
            }
        });
    };
    GroupdirectoryPage.prototype.ionViewDidLoad = function () {
        this.sortSelectOptions = {
            title: this.config.get_translation('sort_options'),
            okText: this.config.get_translation('okay'),
            cancelText: this.config.get_translation('dismiss'),
        };
        this.filterSelectOptions = {
            title: this.config.get_translation('filter_options'),
            okText: this.config.get_translation('okay'),
            cancelText: this.config.get_translation('dismiss'),
        };
    };
    /*    activateFilters(){
            this.activateFilterBlock=true;
        }*/
    /* Search by keyword */
    GroupdirectoryPage.prototype.onSearchInput = function () {
        console.log('onSearchInput');
        console.log(this.searchTerm);
        var $this = this;
        if (this.searchTerm) {
            if (this.searchTerm.length >= 3) {
                // make api hit
                var args = {};
                args = {
                    'search': $this.searchTerm
                };
                this.args.search = $this.searchTerm;
                this.loadmore = 0;
                this.get_groups('search', this.args).then(function (resolve) {
                    console.log('onSearchInput res');
                    if (resolve.length == $this.config.batch.limit) {
                        $this.loadmore = 1;
                    }
                });
            }
            else {
                // do nothing
            }
        }
    };
    GroupdirectoryPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-groupdirectory',template:/*ion-inline-start:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\pages\groupdirectory\groupdirectory.html"*/'<ion-header>\n    <ion-navbar  color="transparent" >\n        <ion-buttons start>\n            <button ion-button menuToggle>\n                <ion-icon name="md-menu"></ion-icon>\n            </button>\n        </ion-buttons>\n        <ion-title>{{config.get_translation(\'group_directory\')}}</ion-title>\n            <ion-buttons end>\n                <button ion-button [navPush]="profilePage" [navParams]="userdata">\n                    <ion-icon name="md-contact" *ngIf="!config.isLoggedIn"></ion-icon>\n                    <img *ngIf="config.isLoggedIn" [src]="config.user?.avatar">\n                </button>\n            </ion-buttons>\n    </ion-navbar>\n</ion-header>\n<ion-content padding>\n    <ion-refresher (ionRefresh)="doRefresh($event)">\n        <ion-refresher-content pullingText="{{config.get_translation(\'pull_to_refresh\')}}"\n          pullingIcon="arrow-dropdown"\n          refreshingSpinner="circles"\n          refreshingText="{{config.get_translation(\'refreshing\')}}"></ion-refresher-content>\n    </ion-refresher>\n    <ion-row>\n        <ion-col>\n            <div class="filter_sort_select">\n                <ion-item>\n                    <ion-select placeholder="{{this.config.get_translation(\'sort_options\')}}" (ionChange)="onSortOptions($event)" [selectOptions]="sortSelectOptions" [(ngModel)]="sortby" okText="{{config.get_translation(\'ok\')}}" cancelText="{{config.get_translation(\'cancel\')}}">\n                        <ion-option value="groups">{{this.config.get_translation(\'groups\')}}</ion-option>\n                        <ion-option value="batches">{{this.config.get_translation(\'batches\')}}</ion-option>\n                    </ion-select>\n                </ion-item>\n            </div>\n        </ion-col>\n        <ion-col>\n            <div class="filter_sort_select">\n                <ion-item>\n                    <ion-select placeholder="{{this.config.get_translation(\'filter_options\')}}" (ionChange)="onFilterOptions($event)" [selectOptions]="filterSelectOptions" [(ngModel)]="filterby" okText="{{config.get_translation(\'ok\')}}" cancelText="{{config.get_translation(\'cancel\')}}">\n                        <ion-option value="alphabetical">{{this.config.get_translation(\'alphabetical\')}}</ion-option>\n                        <ion-option value="newlyCreated">{{this.config.get_translation(\'newlyCreated\')}}</ion-option>\n                        <ion-option value="lastActive">{{this.config.get_translation(\'lastActive\')}}</ion-option>\n                        <ion-option value="mostMembers">{{this.config.get_translation(\'mostMembers\')}}</ion-option>\n                        <ion-option value="upComing">{{this.config.get_translation(\'upComing\')}}</ion-option>\n                    </ion-select>\n                </ion-item>\n            </div>\n        </ion-col>\n    </ion-row>\n    <ion-row class="search_groups">\n        <ion-searchbar [(ngModel)]="searchTerm" debounced-input placeholder="{{config.get_translation(\'directory_search_placeholder\')}}" (ionInput)="onSearchInput()"></ion-searchbar>\n    </ion-row>   \n    <div>\n        <div *ngIf="groupService.all_groups && groupService.all_groups.length" class="all_groups">\n            <div  *ngFor="let group of groupService.all_groups">\n                <GroupBlock  [group]="group"></GroupBlock>\n            </div>\n        </div>\n        <div *ngIf="!(groupService.all_groups && groupService.all_groups.length)">\n            <div class="message" [innerHtml]="this.config.get_translation(\'no_group\')">\n            </div>\n        </div>\n    </div>\n    <ion-infinite-scroll *ngIf="loadmore" (ionInfinite)="doInfinite($event)">\n            <ion-infinite-scroll-content></ion-infinite-scroll-content>\n    </ion-infinite-scroll>  \n</ion-content>'/*ion-inline-end:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\pages\groupdirectory\groupdirectory.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_3__services_config__["a" /* ConfigService */],
            __WEBPACK_IMPORTED_MODULE_5__services_group__["a" /* GroupService */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_4__services_course__["a" /* CourseService */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* ToastController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* LoadingController */]])
    ], GroupdirectoryPage);
    return GroupdirectoryPage;
}());

//# sourceMappingURL=groupdirectory.js.map

/***/ }),

/***/ 665:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ForumdirectoryPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_map__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__services_config__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__services_forum__ = __webpack_require__(48);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__profile_profile__ = __webpack_require__(22);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






var ForumdirectoryPage = /** @class */ (function () {
    function ForumdirectoryPage(navCtrl, config, forumService, navParams, nav, toastCtrl, loadingCtrl) {
        this.navCtrl = navCtrl;
        this.config = config;
        this.forumService = forumService;
        this.navParams = navParams;
        this.nav = nav;
        this.toastCtrl = toastCtrl;
        this.loadingCtrl = loadingCtrl;
        this.profilePage = __WEBPACK_IMPORTED_MODULE_5__profile_profile__["a" /* ProfilePage */];
        this.loadmore = 1;
        /* filter options */
        this.sortby = '';
        this.filterby = '';
        /* search options */
        this.searchTerm = '';
    }
    ForumdirectoryPage.prototype.ngOnInit = function () {
        var $this = this;
        this.args = this.set_start();
        this.loadmore = 0;
        var loading = this.loadingCtrl.create({
            content: '<img src="assets/images/bubbles.svg">',
            duration: 5000,
            spinner: 'hide',
            showBackdrop: true,
        });
        loading.present();
        this.get_forums('ngoninit', this.args).then(function (resolve) {
            loading.dismiss();
            if (Array.isArray(resolve) && (resolve.length == $this.config.forum.limit)) {
                $this.loadmore = 1;
            }
        });
    };
    ForumdirectoryPage.prototype.doRefresh = function ($event) {
        var $this = this;
        this.args = this.set_start();
        this.loadmore = 0;
        this.get_forums('refresh', this.args).then(function (resolve) {
            if (Array.isArray(resolve) && (resolve.length == $this.config.forum.limit)) {
                $this.loadmore = 1;
            }
            $event.complete();
        });
        this.reset();
    };
    ForumdirectoryPage.prototype.doInfinite = function ($event) {
        var $this = this;
        $this.loadmore = 0;
        this.get_forums('infinite', this.args).then(function (resolve) {
            if (Array.isArray(resolve) && (resolve.length == $this.config.forum.limit)) {
                $this.loadmore = 1;
            }
            $event.complete();
        });
    };
    /* Search by keyword */
    ForumdirectoryPage.prototype.onSearchInput = function () {
        var $this = this;
        if (this.searchTerm) {
            if (this.searchTerm.length >= 3) {
                // make api hit
                this.args = this.set_start();
                this.args.title = this.searchTerm;
                this.loadmore = 0;
                this.get_forums('search', this.args).then(function (resolve) {
                    if (Array.isArray(resolve) && (resolve.length == $this.config.batch.limit)) {
                        $this.loadmore = 1;
                    }
                });
            }
            else {
                // do nothing
            }
        }
    };
    ForumdirectoryPage.prototype.get_forums = function (activity, args) {
        var $this = this;
        var loading = this.loadingCtrl.create({
            content: '<img src="assets/images/bubbles.svg">',
            duration: 3000,
            spinner: 'hide',
            showBackdrop: true,
        });
        loading.present();
        return new Promise(function (resolve) {
            $this.forumService.get_all_forums(activity, args).then(function (res) {
                loading.dismiss();
                resolve(res);
            });
        });
    };
    ForumdirectoryPage.prototype.set_start = function () {
        return {
            'posts_per_page': this.config.forum.limit,
            'paged': this.config.forum.paged
        };
    };
    ForumdirectoryPage.prototype.reset = function () {
        this.sortby = '';
        this.filterby = '';
        this.searchTerm = '';
    };
    /* sort by groups and batches */
    ForumdirectoryPage.prototype.onSortOptions = function ($event) {
        var $this = this;
        this.args = this.set_start();
        this.args.order = $event;
        $this.loadmore = 0;
        this.get_forums('sort', this.args).then(function (resolve) {
            if (Array.isArray(resolve) && (resolve.length == $this.config.batch.limit)) {
                $this.loadmore = 1;
            }
        });
    };
    /* filter by alphabet , lastActive , newlyCreated  and mostMembers */
    ForumdirectoryPage.prototype.onFilterOptions = function ($event) {
        var $this = this;
        this.filterby = $event;
        var args = { 'filterby': this.filterby };
        this.args = args;
        $this.loadmore = 0;
        var loading = this.loadingCtrl.create({
            content: '<img src="assets/images/bubbles.svg">',
            duration: 2000,
            spinner: 'hide',
            showBackdrop: true,
        });
        loading.present();
        this.get_forums('type', args).then(function (resolve) {
            loading.dismiss();
            // if(resolve.length==$this.config.batch.limit){
            //     $this.loadmore=1;
            // }
        });
    };
    ForumdirectoryPage.prototype.ionViewDidLoad = function () {
        this.sortSelectOptions = {
            title: this.config.get_translation('sort_options'),
            okText: this.config.get_translation('okay'),
            cancelText: this.config.get_translation('dismiss'),
        };
        this.filterSelectOptions = {
            title: this.config.get_translation('filter_options'),
            okText: this.config.get_translation('okay'),
            cancelText: this.config.get_translation('dismiss'),
        };
    };
    ForumdirectoryPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-forumirectory',template:/*ion-inline-start:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\pages\forumdirectory\forumdirectory.html"*/'<ion-header>\n    <ion-navbar color="transparent">\n        <ion-buttons start>\n            <button ion-button menuToggle>\n                <ion-icon name="md-menu"></ion-icon>\n            </button>\n        </ion-buttons>\n        <ion-title>{{config.get_translation(\'forum_directory\')}}</ion-title>\n        <ion-buttons end>\n            <button ion-button [navPush]="profilePage" [navParams]="userdata">\n                <ion-icon name="md-contact" *ngIf="!config.isLoggedIn"></ion-icon>\n                <img *ngIf="config.isLoggedIn" [src]="config.user?.avatar">\n            </button>\n        </ion-buttons>\n    </ion-navbar>\n</ion-header>\n<ion-content padding>\n    <ion-refresher (ionRefresh)="doRefresh($event)">\n        <ion-refresher-content pullingText="{{config.get_translation(\'pull_to_refresh\')}}" pullingIcon="arrow-dropdown" refreshingSpinner="circles"\n            refreshingText="{{config.get_translation(\'refreshing\')}}"></ion-refresher-content>\n    </ion-refresher>\n    <ion-row>\n        <ion-col>\n            <div class="filter_sort_select">\n                <ion-item>\n                    <ion-select placeholder="{{this.config.get_translation(\'sort_options\')}}" (ionChange)="onSortOptions($event)" [selectOptions]="sortSelectOptions"\n                        [(ngModel)]="sortby" okText="{{config.get_translation(\'ok\')}}" cancelText="{{config.get_translation(\'cancel\')}}">\n                        <ion-option value="ASC">{{this.config.get_translation(\'oldest_post_first\')}}</ion-option>\n                        <ion-option value="DESC">{{this.config.get_translation(\'latest_post_first\')}}</ion-option>\n                    </ion-select>\n                </ion-item>\n            </div>\n        </ion-col>\n    </ion-row>\n    <ion-row class="search_groups">\n        <ion-searchbar [(ngModel)]="searchTerm" debounced-input placeholder="{{config.get_translation(\'directory_search_placeholder\')}}"\n            (ionInput)="onSearchInput()"></ion-searchbar>\n    </ion-row>\n    <div>\n        <div *ngIf="forumService.all_forums && forumService.all_forums.length" class="all_forums">\n            <div *ngFor="let forum of forumService.all_forums">\n                <ForumBlock [forum]="forum"></ForumBlock>\n            </div>\n        </div>\n        <div *ngIf="!(forumService.all_forums && forumService.all_forums.length)" class="all_forums">\n            <div class="message" [innerHtml]="this.config.get_translation(\'forum_not_found\')"></div>\n        </div>\n    </div>\n    <ion-infinite-scroll *ngIf="loadmore" (ionInfinite)="doInfinite($event)">\n        <ion-infinite-scroll-content></ion-infinite-scroll-content>\n    </ion-infinite-scroll>\n</ion-content>'/*ion-inline-end:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\pages\forumdirectory\forumdirectory.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_3__services_config__["a" /* ConfigService */],
            __WEBPACK_IMPORTED_MODULE_4__services_forum__["a" /* ForumService */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* ToastController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* LoadingController */]])
    ], ForumdirectoryPage);
    return ForumdirectoryPage;
}());

//# sourceMappingURL=forumdirectory.js.map

/***/ }),

/***/ 666:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ElasticHeader; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var ElasticHeader = /** @class */ (function () {
    function ElasticHeader(element, renderer) {
        this.element = element;
        this.renderer = renderer;
    }
    ElasticHeader.prototype.ngOnInit = function () {
        var _this = this;
        this.scrollerHandle = this.element.nativeElement.getElementsByClassName('scroll-content')[0];
        this.header = this.scrollerHandle.firstElementChild;
        this.headerHeight = this.scrollerHandle.clientHeight;
        this.ticking = false;
        this.renderer.setElementStyle(this.header, 'webkitTransformOrigin', 'center bottom');
        window.addEventListener('resize', function () {
            _this.headerHeight = _this.scrollerHandle.clientHeight;
        }, false);
        this.scrollerHandle.addEventListener('scroll', function () {
            if (!_this.ticking) {
                window.requestAnimationFrame(function () {
                    _this.updateElasticHeader();
                });
            }
            _this.ticking = true;
        });
    };
    ElasticHeader.prototype.updateElasticHeader = function () {
        this.scrollTop = this.scrollerHandle.scrollTop;
        if (this.scrollTop >= 0) {
            this.translateAmt = this.scrollTop / 3;
            this.scaleAmt = 1;
        }
        else {
            this.translateAmt = 0;
            this.scaleAmt = this.scrollTop / this.headerHeight + 1;
        }
        this.renderer.setElementStyle(this.header, 'webkitTransform', 'translate3d(0,-' + this.translateAmt + 'px,0) scale(' + this.scaleAmt + ',' + this.scaleAmt + ')');
        this.ticking = false;
    };
    ElasticHeader = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Directive"])({
            selector: '[elastic-header]'
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"], __WEBPACK_IMPORTED_MODULE_0__angular_core__["Renderer"]])
    ], ElasticHeader);
    return ElasticHeader;
}());

//# sourceMappingURL=elastic-header.js.map

/***/ }),

/***/ 667:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return FixedScrollHeader; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var FixedScrollHeader = /** @class */ (function () {
    function FixedScrollHeader(element, renderer) {
        this.element = element;
        this.renderer = renderer;
        this.scrollPosition = 0;
        this.lastScrollTop = 0;
    }
    FixedScrollHeader.prototype.ngAfterViewInit = function () {
        // ion-header classname
        this.header = document.getElementsByClassName("toolbar")[0];
        // the height of the header
        this.headerHeight = this.header.clientHeight;
    };
    FixedScrollHeader.prototype.onContentScroll = function (ev) {
        var _this = this;
        ev.domWrite(function () {
            _this.updateHeader(ev);
        });
    };
    FixedScrollHeader.prototype.updateHeader = function (ev) {
        this.scrollPosition = ev.scrollTop;
        if (this.scrollPosition > this.lastScrollTop && this.scrollPosition >= 25) {
            // scrolling down
            this.renderer.setElementStyle(this.header, 'transition', 'all 0.3s linear');
            this.renderer.setElementStyle(this.header, 'transform', 'translateY(-' + this.headerHeight + 'px)');
        }
        else {
            // scrolling up
            this.renderer.setElementStyle(this.header, 'transform', 'translateY(0px)');
        }
        // reset
        this.lastScrollTop = this.scrollPosition;
    };
    FixedScrollHeader = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Directive"])({
            selector: '[fixedscrollheader]',
            host: {
                '(ionScroll)': 'onContentScroll($event)'
            }
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"], __WEBPACK_IMPORTED_MODULE_0__angular_core__["Renderer"]])
    ], FixedScrollHeader);
    return FixedScrollHeader;
}());

//# sourceMappingURL=fixed-scroll-header.js.map

/***/ }),

/***/ 668:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return StarRatingComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var StarRatingComponent = /** @class */ (function () {
    function StarRatingComponent() {
        this.rating = 4;
        this.stars = [];
    }
    StarRatingComponent.prototype.ngOnInit = function () {
        this.prepareStars();
    };
    StarRatingComponent.prototype.prepareStars = function () {
        for (var i = 0; i < 5; i++) {
            if (i <= this.rating && (i + 1) <= this.rating) {
                this.stars[i] = 'star';
            }
            else if (i < this.rating && (i + 1) > this.rating) {
                this.stars[i] = 'star-half';
            }
            else {
                this.stars[i] = 'star-outline';
            }
        }
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
        __metadata("design:type", Number)
    ], StarRatingComponent.prototype, "rating", void 0);
    StarRatingComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'star-rating',template:/*ion-inline-start:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\components\star-rating\star-rating.html"*/'<div class="star-rating" *ngIf=rating>\n  <div class="star" *ngFor="let star of stars">\n      <ion-icon name="md-{{star}}" class="align-left"></ion-icon>\n    </div>\n</div>\n'/*ion-inline-end:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\components\star-rating\star-rating.html"*/
        }),
        __metadata("design:paramtypes", [])
    ], StarRatingComponent);
    return StarRatingComponent;
}());

//# sourceMappingURL=star-rating.js.map

/***/ }),

/***/ 669:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AvatarScrollZoomout; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var AvatarScrollZoomout = /** @class */ (function () {
    function AvatarScrollZoomout(element, renderer) {
        this.element = element;
        this.renderer = renderer;
        this.adjustment = 75;
    }
    AvatarScrollZoomout.prototype.ngOnInit = function () {
        var _this = this;
        this.scrollerHandle = this.element.nativeElement.parentNode.parentNode.parentNode.parentNode.getElementsByClassName('scroll-content')[0];
        this.imageHandle = this.element.nativeElement.getElementsByClassName('avatar')[0];
        this.avatar = this.imageHandle.firstElementChild;
        this.avatarHeight = (window.innerWidth / 2); //this.imageHandle.clientHeight;
        this.ticking = false;
        this.marginTop = (window.innerWidth / 2) + this.adjustment;
        this.renderer.setElementStyle(this.imageHandle, 'width', (window.innerWidth / 2) + 'px');
        this.renderer.setElementStyle(this.imageHandle, 'height', (window.innerWidth / 2) + 'px');
        this.renderer.setElementStyle(this.scrollerHandle, 'margin-top', this.marginTop + 'px');
        window.addEventListener('resize', function () {
            _this.avatarHeight = _this.imageHandle.clientHeight;
        }, false);
        this.scrollerHandle.addEventListener('scroll', function () {
            if (!_this.ticking) {
                window.requestAnimationFrame(function () {
                    _this.updateAvatarZoomOut();
                });
            }
            _this.ticking = true;
        });
    };
    AvatarScrollZoomout.prototype.updateAvatarZoomOut = function () {
        this.scrollTop = this.scrollerHandle.scrollTop;
        if (this.scrollTop >= 0) {
            this.translateAmt = this.scrollTop / 2;
            this.scaleAmt = this.avatarHeight / (this.avatarHeight + this.scrollTop);
            if (this.scaleAmt < 0.1) {
                this.scaleAmt = 0;
            }
        }
        else {
            this.translateAmt = 0;
            this.scaleAmt = 1 + this.avatarHeight / (this.avatarHeight - this.scrollTop);
            if (this.scaleAmt > 1.2) {
                this.scaleAmt = 1.2;
            }
        }
        var height = (this.scaleAmt * this.avatarHeight);
        if (this.translateAmt > this.avatarHeight) {
            height = 0;
        }
        this.renderer.setElementStyle(this.imageHandle, 'width', height + 'px');
        this.renderer.setElementStyle(this.imageHandle, 'height', height + 'px');
        this.renderer.setElementStyle(this.scrollerHandle, 'margin-top', (((height - this.avatarHeight) + this.marginTop)) + 'px'); //+this.adjustment
        this.renderer.setElementStyle(this.scrollerHandle, 'padding-top', '0');
        this.renderer.setElementStyle(this.avatar, 'webkitTransform', 'translate3d(0,-' + this.translateAmt + 'px,0) ');
        this.ticking = false;
    };
    AvatarScrollZoomout = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Directive"])({
            selector: '[avatarscrollzoomout]'
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"], __WEBPACK_IMPORTED_MODULE_0__angular_core__["Renderer"]])
    ], AvatarScrollZoomout);
    return AvatarScrollZoomout;
}());

//# sourceMappingURL=avatarscrollzoomout.js.map

/***/ }),

/***/ 670:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CallbackPipe; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};

var CallbackPipe = /** @class */ (function () {
    function CallbackPipe() {
    }
    CallbackPipe.prototype.transform = function (items, callback) {
        if (!items || !callback) {
            return items;
        }
        return items.filter(function (item) {
            return callback(item);
        });
    };
    CallbackPipe = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Pipe"])({
            name: 'callback',
            pure: false
        }),
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])()
    ], CallbackPipe);
    return CallbackPipe;
}());

//# sourceMappingURL=pipefilters.js.map

/***/ }),

/***/ 671:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Coursecard; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_config__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__pages_course_course__ = __webpack_require__(62);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__services_wishlist__ = __webpack_require__(73);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var Coursecard = /** @class */ (function () {
    function Coursecard(wishlistService, config) {
        this.wishlistService = wishlistService;
        this.config = config;
        this.coursePage = __WEBPACK_IMPORTED_MODULE_2__pages_course_course__["a" /* CoursePage */];
        this.active = '';
    }
    Coursecard.prototype.ngOnInit = function () {
        if (this.wishlistService.checkInWishList(this.course)) {
            this.active = 'active';
        }
        else {
            this.active = '';
        }
    };
    Coursecard.prototype.addToWishlist = function () {
        console.log('clicked -' + this.course.name);
        if (this.active == 'active') {
            this.wishlistService.removeFromWishList(this.course);
            this.active = '';
        }
        else {
            this.wishlistService.addToWishlist(this.course);
            this.active = 'active';
        }
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])('course'),
        __metadata("design:type", Object)
    ], Coursecard.prototype, "course", void 0);
    Coursecard = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'coursecard',template:/*ion-inline-start:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\components\coursecard\coursecard.html"*/'<ion-card class="featured_course_block" [navPush]="coursePage" [navParams]="course">\n	<div class="featured_course_image">    \n	    <lazy-img [inputSrc]="course.featured_image"></lazy-img>\n	</div>\n	<ion-card-content class="align-left">\n	    <ion-card-title>\n	        {{course.name}}\n	    </ion-card-title>\n	    <star-rating *ngIf="popular" [rating]=course.average_rating></star-rating>\n	    <div class="course_price" *ngIf="course.price_html && !config.isString(course.price_html) && course.price_html.length >1">{{config.get_translation(\'pricing_options\')}}</div>\n	    <div class="course_price" *ngIf="course.price_html && !config.isString(course.price_html) && course.price_html.length == 1" [innerHtml]="course.price_html[0].html"></div>\n        <div class="course_price" *ngIf="course.price_html && config.isString(course.price_html)" [innerHtml]=course.price_html></div>\n	</ion-card-content>\n</ion-card>\n<div class="wishlist {{active}}" (click)="addToWishlist()"></div>\n'/*ion-inline-end:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\components\coursecard\coursecard.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_3__services_wishlist__["a" /* WishlistService */], __WEBPACK_IMPORTED_MODULE_1__services_config__["a" /* ConfigService */]])
    ], Coursecard);
    return Coursecard;
}());

//# sourceMappingURL=coursecard.js.map

/***/ }),

/***/ 672:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Courseblock; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_config__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__pages_course_course__ = __webpack_require__(62);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__services_wishlist__ = __webpack_require__(73);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var Courseblock = /** @class */ (function () {
    function Courseblock(wishlistService, config) {
        this.wishlistService = wishlistService;
        this.config = config;
        this.coursePage = __WEBPACK_IMPORTED_MODULE_2__pages_course_course__["a" /* CoursePage */];
        this.active = '';
        this.style = {};
    }
    Courseblock.prototype.ngOnInit = function () {
        if (this.wishlistService.checkInWishList(this.course)) {
            this.active = 'active';
        }
        else {
            this.active = '';
        }
    };
    Courseblock.prototype.addToWishlist = function () {
        if (this.active == 'active') {
            this.wishlistService.removeFromWishList(this.course);
            this.active = '';
        }
        else {
            this.wishlistService.addToWishlist(this.course);
            this.active = 'active';
        }
    };
    Courseblock.prototype.ngAfterViewInit = function () {
        if (window.screen.width < 500) {
            var height = this.featured.nativeElement.offsetHeight + 10;
            this.style = {
                'height': height + 'px',
                'width': 'auto'
            };
        }
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])('course'),
        __metadata("design:type", Object)
    ], Courseblock.prototype, "course", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('featured'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], Courseblock.prototype, "featured", void 0);
    Courseblock = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'courseblock',template:/*ion-inline-start:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\components\courseblock\courseblock.html"*/'<div class="wishlist {{active}}" (click)="addToWishlist()"></div>\n<div class="course_block" [navPush]="coursePage" [navParams]="course">\n    <ion-grid>\n        <ion-row>\n            <ion-col col-6 col-sm-12>\n                <div class="course_featured_image" [ngStyle]="{ \'background-image\':\'url(\'+course.featured_image+\')\'}">\n                    <lazy-img [inputSrc]="course.featured_image" [imgStyle]="style"></lazy-img>\n                </div>\n            </ion-col>\n            <ion-col col-6 col-sm-12 #featured >\n                <ion-card-content class="align-left">\n                    <ion-card-title>\n                        {{course.name}}\n                    </ion-card-title>\n                    <star-rating [rating]="course.average_rating"></star-rating>\n                    <span class="course_instructor">{{course.instructor.name}}</span>\n                    <div class="course_price" *ngIf="course.price_html && !config.isString(course.price_html) && course.price_html.length >1">{{config.get_translation(\'pricing_options\')}}</div>\n                    <div class="course_price" *ngIf="course.price_html && !config.isString(course.price_html) && course.price_html.length == 1" [innerHtml]="course.price_html[0].html"></div>\n                    <div class="course_price" *ngIf="course.price_html && config.isString(course.price_html)" [innerHtml]=course.price_html></div>\n                </ion-card-content>\n            </ion-col>\n        </ion-row>\n    </ion-grid>\n</div>'/*ion-inline-end:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\components\courseblock\courseblock.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_3__services_wishlist__["a" /* WishlistService */], __WEBPACK_IMPORTED_MODULE_1__services_config__["a" /* ConfigService */]])
    ], Courseblock);
    return Courseblock;
}());

//# sourceMappingURL=courseblock.js.map

/***/ }),

/***/ 673:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return InstructorBlock; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__pages_instructor_instructor__ = __webpack_require__(118);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_config__ = __webpack_require__(3);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var InstructorBlock = /** @class */ (function () {
    function InstructorBlock(config) {
        this.config = config;
        this.shortbio = '';
        this.showFull = false;
        this.instructorPage = __WEBPACK_IMPORTED_MODULE_1__pages_instructor_instructor__["a" /* InstructorPage */];
    }
    InstructorBlock.prototype.ngOnInit = function () {
        if ('bio' in this.instructor && this.instructor.bio.length > 200) {
            this.shortbio = this.instructor.bio.slice(0, 200);
        }
    };
    InstructorBlock.prototype.showfullBio = function (show) {
        if (show) {
            this.showFull = true;
        }
        else {
            this.showFull = false;
        }
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])('instructor'),
        __metadata("design:type", Object)
    ], InstructorBlock.prototype, "instructor", void 0);
    InstructorBlock = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'instructorblock',template:/*ion-inline-start:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\components\instructorblock\instructorblock.html"*/'<div class="instructor_block">\n    <ion-grid>\n        <ion-row>\n            <ion-col col-12 col-sm-6>\n                <div class="instructor_avatar" [ngStyle]="{ \'background-image\':\'url(\'+instructor.avatar+\')\'}" [navPush]="instructorPage" [navParams]="instructor">\n                    <lazy-img [inputSrc]="instructor.avatar"></lazy-img>\n                </div>\n            </ion-col>\n            <ion-col col-12 col-sm-6 #featured >\n                <ion-card-content class="align-left">\n                    <ion-card-title [navPush]="instructorPage" [navParams]="instructor">\n                        {{instructor.name}}\n                    </ion-card-title>\n                    <span class="instructor_sub" *ngIf="instructor.sub && instructor.sub != \'false\'">{{instructor.sub}}</span>\n                    <star-rating [rating]="instructor.average_rating" align-right></star-rating>\n                    <div class="instructor_bio" >\n                    \n                    <div *ngIf="instructor?.bio && instructor?.bio != \'false\' && instructor.bio.length > 200">\n                        <div *ngIf="!showFull">\n                            <div [innerHtml]=shortbio></div>\n                            <button (click)="showfullBio(1)" ion-button clear> {{config.get_translation(\'show_more\')}}</button>\n                        </div>\n                        <div *ngIf="showFull">\n                            <div [innerHtml]=instructor.bio></div>\n                            <button (click)="showfullBio(0)" ion-button clear> {{config.get_translation(\'show_less\')}}</button>\n                        </div>\n                    </div>\n                    \n                    <div *ngIf="instructor.bio && instructor.bio != \'false\' && instructor.bio.length <= 200" [innerHtml]=instructor.bio></div>\n\n                    </div>\n                    <ion-grid>\n						<ion-row>\n							<ion-col *ngIf="instructor?.student_count">\n								<ion-icon name="md-contacts"></ion-icon>\n								<strong>{{instructor.student_count}}</strong>\n							</ion-col>\n							<ion-col *ngIf="instructor?.course_count">\n								<ion-icon name="md-book"></ion-icon>\n								<strong>{{instructor.course_count}}</strong>\n							</ion-col>\n						</ion-row>\n					</ion-grid>\n                </ion-card-content>\n            </ion-col>\n        </ion-row>\n    </ion-grid>\n</div>'/*ion-inline-end:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\components\instructorblock\instructorblock.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2__services_config__["a" /* ConfigService */]])
    ], InstructorBlock);
    return InstructorBlock;
}());

//# sourceMappingURL=instructorblock.js.map

/***/ }),

/***/ 674:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CommentBlock; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_notes_discussions__ = __webpack_require__(120);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_ionic_angular__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__services_config__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__pages_add_edit_unit_comment_add_edit_unit_comment__ = __webpack_require__(186);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var CommentBlock = /** @class */ (function () {
    function CommentBlock(navCtrl, alertCtrl, notesanddiscussion, config) {
        this.navCtrl = navCtrl;
        this.alertCtrl = alertCtrl;
        this.notesanddiscussion = notesanddiscussion;
        this.config = config;
        this.time = 0;
        this.show_hide = 1;
        this.add_edit_reply = 0;
    }
    CommentBlock.prototype.manageChildren = function () {
        if (this.show_hide) {
            this.show_hide = 0;
        }
        else {
            this.show_hide = 1;
        }
    };
    CommentBlock.prototype.ngOnInit = function () {
        if (this.comment.user_id == this.config.user.id) {
            this.comment['user'] = this.config.user;
        }
        this.time = Math.floor(new Date().getTime() / 1000) - this.comment.comment_date;
        if (!this.comment.hasOwnProperty('comment_date')) {
            this.comment['comment_date'] = (new Date().getTime() / 1000);
            this.time = 0;
        }
        //    let t = this.comment.comment_date.split(/[- :]/);
        // this.time = (new Date().getTime() - new Date(Date.UTC(t[0], t[1]-1, t[2], t[3], t[4], t[5])).getTime())/1000;
        // console.log(this.time);
    };
    CommentBlock.prototype.addReply = function () {
        console.log(this.comment);
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_4__pages_add_edit_unit_comment_add_edit_unit_comment__["a" /* AddEditUnitCommentPage */], { 'comment': this.comment, 'type': 'reply' });
    };
    CommentBlock.prototype.editReply = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_4__pages_add_edit_unit_comment_add_edit_unit_comment__["a" /* AddEditUnitCommentPage */], { 'comment': this.comment, 'type': 'edit' });
    };
    CommentBlock.prototype.getClass = function () {
        if (this.config.user.id === this.comment.user_id) {
            return 'comment_author mine';
        }
        else {
            return 'comment_author';
        }
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])('comment'),
        __metadata("design:type", Object)
    ], CommentBlock.prototype, "comment", void 0);
    CommentBlock = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'CommentBlock',template:/*ion-inline-start:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\components\commentblock\commentblock.html"*/'\n<div class="unit_comment">\n	<div class="comment_inside">\n		<div class="comment_header"  (click)="manageChildren()">\n\n			<a class="manage_children" *ngIf="show_hide == 1 && comment.child && comment.child.length"  title="config.get_translation(\'Hide_children\')"><ion-icon name="ios-remove-circle-outline"></ion-icon></a>\n\n			<a class="manage_children" *ngIf="show_hide == 0 && comment.child && comment.child.length"  title="config.get_translation(\'Show_children\')"><ion-icon name="ios-add-circle-outline"></ion-icon></a>\n\n\n			<div [ngClass]="{ \'comment_author\': (comment.user_id != config.user.id), \'comment_author me\': (comment.user_id == config.user.id) }">\n				<lazy-img [inputSrc]="comment.user.avatar"></lazy-img>\n				<span>{{comment.user.name}}</span>\n			</div>\n			<span><friendlytime [time]="time"></friendlytime></span>\n			<a class="reply" (click)="addReply(comment)">{{config.get_translation(\'Reply_comment\')}}</a>\n\n			\n\n			<a class="edit right" *ngIf="config.user.id == comment.user_id " (click)="editReply()">{{config.get_translation(\'Edit_comment\')}}</a>\n		</div>\n		<div [innerHtml]="comment.comment_content"></div>\n	</div>\n	<div class="children" *ngIf="comment.child && comment.child.length && show_hide">\n		<ul class="unit_comments">\n			<li *ngFor="let ccomment of comment.child; let i = index">	\n 				<CommentBlock [comment]="ccomment"></CommentBlock>\n 			</li>\n		</ul>\n	</div>\n</div>\n\n\n\n<!-- && !comment.hasOwnProperty(\'loading\') -->\n<!-- && !comment.hasOwnProperty(\'loading\') -->'/*ion-inline-end:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\components\commentblock\commentblock.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_2_ionic_angular__["b" /* AlertController */],
            __WEBPACK_IMPORTED_MODULE_1__services_notes_discussions__["a" /* NotesDiscussionService */],
            __WEBPACK_IMPORTED_MODULE_3__services_config__["a" /* ConfigService */]])
    ], CommentBlock);
    return CommentBlock;
}());

//# sourceMappingURL=commentblock.js.map

/***/ }),

/***/ 675:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ChatBlock; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__pages_message_message__ = __webpack_require__(121);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_ionic_angular__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__services_config__ = __webpack_require__(3);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var ChatBlock = /** @class */ (function () {
    function ChatBlock(navCtrl, navParams, config) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.config = config;
        this.messagePage = __WEBPACK_IMPORTED_MODULE_1__pages_message_message__["a" /* MessagePage */];
    }
    ChatBlock.prototype.ngOnInit = function () {
    };
    ChatBlock.prototype.goToNextPage = function (chat) {
        this.navCtrl.push(this.messagePage, { 'chat_key': chat.key });
    };
    ChatBlock.prototype.getChatLastTime = function (time) {
        var new_time = Math.floor((new Date().getTime() - time) / 1000);
        return this.toFriendlyTime(new_time);
    };
    ChatBlock.prototype.toFriendlyTime = function (time) {
        var count = 0;
        var time_labels;
        var measure;
        var key;
        var small_measure;
        var small_count = 0;
        var measures = [
            {
                'label': this.config.get_translation('year'),
                'multi': this.config.get_translation('years'),
                'value': 946080000
            },
            {
                'label': this.config.get_translation('month'),
                'multi': this.config.get_translation('months'),
                'value': 2592000
            },
            {
                'label': this.config.get_translation('week'),
                'multi': this.config.get_translation('weeks'),
                'value': 604800
            },
            {
                'label': this.config.get_translation('day'),
                'multi': this.config.get_translation('days'),
                'value': 86400
            },
            {
                'label': this.config.get_translation('hour'),
                'multi': this.config.get_translation('hours'),
                'value': 3600
            },
            {
                'label': this.config.get_translation('minute'),
                'multi': this.config.get_translation('minutes'),
                'value': 60
            },
            {
                'label': this.config.get_translation('second'),
                'multi': this.config.get_translation('seconds'),
                'value': 1
            },
        ];
        if (time < 0) {
            return this.config.get_translation('expired');
        }
        if (time == 0) {
            return this.config.get_translation('just_now');
        }
        for (var i = 0; i < measures.length; i++) {
            measure = measures[i];
            key = i;
            if (measure.value < time) {
                count = Math.floor(time / measure.value);
                break;
            }
        }
        time_labels = count + ' ' + ((count > 1) ? measure.multi : measure.label);
        if (measure.value > 1) { // Ensure we're not on last element
            small_measure = measures[key + 1];
            small_count = Math.floor((time % measure.value) / small_measure.value);
            if (small_count)
                time_labels += ', ' + small_count + ' ' + ((small_count > 1) ? small_measure.multi : small_measure.label);
        }
        return time_labels;
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])('chat'),
        __metadata("design:type", Object)
    ], ChatBlock.prototype, "chat", void 0);
    ChatBlock = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'ChatBlock',template:/*ion-inline-start:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\components\chatblock\chatblock.html"*/'     <div (click)="goToNextPage(chat)">\n       <div class="mychat" *ngIf="chat.allMessages[0] && chat.allMessages[0].user">\n           <img [src]="chat.allMessages[0].user.image" />    \n            <div>\n              <div class="mychat_header"> \n                <p [innerHtml]="getChatLastTime(chat.allMessages[0].time)"></p>\n              </div> \n              <div class="mychat_content">\n                <p [innerHtml]="chat.allMessages[0].message"></p>\n                <p *ngIf="chat.unseen" [innerHtml]="chat.unseen"></p>\n              </div>\n            </div>\n       </div>\n     </div>'/*ion-inline-end:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\components\chatblock\chatblock.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_2_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_3__services_config__["a" /* ConfigService */]])
    ], ChatBlock);
    return ChatBlock;
}());

//# sourceMappingURL=chatblock.js.map

/***/ }),

/***/ 676:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return GroupBlock; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__pages_group_group__ = __webpack_require__(555);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__services_config__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__services_wallet__ = __webpack_require__(89);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__services_group__ = __webpack_require__(70);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






var GroupBlock = /** @class */ (function () {
    function GroupBlock(navCtrl, navParams, config, walletService, groupService, loadingController, toastCtrl, alertCtrl) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.config = config;
        this.walletService = walletService;
        this.groupService = groupService;
        this.loadingController = loadingController;
        this.toastCtrl = toastCtrl;
        this.alertCtrl = alertCtrl;
        this.groupPage = __WEBPACK_IMPORTED_MODULE_2__pages_group_group__["a" /* GroupPage */];
    }
    GroupBlock.prototype.ngOnInit = function () {
        console.log('------');
        console.log(this.group);
    };
    GroupBlock.prototype.goToNextPage = function (group) {
        var $this = this;
        if (group.is_batch) {
            if ($this.config.isLoggedIn) {
                if (group.is_member) {
                    $this.navCtrl.push(this.groupPage, group);
                }
                else {
                    var toast = $this.toastCtrl.create({
                        message: $this.config.get_translation('join_batch'),
                        duration: 1000,
                        position: 'bottom'
                    });
                    toast.present();
                }
            }
            else {
                var toast = $this.toastCtrl.create({
                    message: $this.config.get_translation('login_to_access'),
                    duration: 1000,
                    position: 'bottom'
                });
                toast.present();
            }
        }
        else {
            if (group.status === 'public') {
                this.navCtrl.push(this.groupPage, group);
            }
            if (group.status === 'private') {
                if (this.config.isLoggedIn) {
                    this.navCtrl.push(this.groupPage, group);
                }
                else {
                    var toast = $this.toastCtrl.create({
                        message: $this.config.get_translation('login_to_access'),
                        duration: 1000,
                        position: 'bottom'
                    });
                    toast.present();
                }
            }
            if (group.status === 'hidden') {
                if (this.config.isLoggedIn && group.is_member) {
                    this.navCtrl.push(this.groupPage, group);
                }
                else {
                    var toast = $this.toastCtrl.create({
                        message: $this.config.get_translation('join_to_access'),
                        duration: 1000,
                        position: 'bottom'
                    });
                    toast.present();
                }
            }
        }
    };
    GroupBlock.prototype.buy_batch = function (group) {
        var _this = this;
        var $this = this;
        if ($this.config.isLoggedIn) {
            var buttons = [];
            buttons = [
                {
                    text: this.config.get_translation('cancel'),
                    role: 'cancel',
                    handler: function () {
                        console.log('Cancel clicked');
                    }
                },
                {
                    text: this.config.get_translation('pay_from_wallet'),
                    handler: function () {
                        var loading = _this.loadingController.create({
                            content: '<img src="assets/images/bubbles.svg">',
                            duration: 15000,
                            spinner: 'hide',
                            showBackdrop: true,
                        });
                        loading.present();
                        $this.walletService.getWallet(true).subscribe(function (res) {
                            console.log('getWallet');
                            console.log(res);
                            if (group.price.sale_price <= res.amount) {
                                $this.groupService.join_remove_batch(group.id, 'add').then(function (resolve) {
                                    if (resolve.status) {
                                        console.log('joined');
                                        loading.dismiss();
                                        var toast = $this.toastCtrl.create({
                                            message: resolve.message,
                                            duration: 1000,
                                            position: 'bottom'
                                        });
                                        group.buy_method = 'debit';
                                        $this.walletService.walletPayment_batch(group).then(function (reswalletd) {
                                            if (reswalletd.status == 'success') {
                                                loading.dismiss();
                                                var toast_1 = $this.toastCtrl.create({
                                                    message: $this.config.get_translation('money_deducted_joined'),
                                                    duration: 1000,
                                                    position: 'bottom'
                                                });
                                                toast_1.present();
                                                $this.group.is_member = true;
                                                /*set storage here  with changes*/
                                                $this.setGroupStorage(group);
                                                $this.resetBatchCourse(group);
                                                console.log('debited');
                                            }
                                            else {
                                                $this.groupService.join_remove_batch(group.id, 'remove').then(function (resolve) {
                                                    loading.dismiss();
                                                    if (resolve.status) {
                                                        var toast_2 = $this.toastCtrl.create({
                                                            message: resolve.message,
                                                            duration: 1000,
                                                            position: 'bottom'
                                                        });
                                                    }
                                                    else {
                                                        var toast_3 = $this.toastCtrl.create({
                                                            message: resolve.message,
                                                            duration: 1000,
                                                            position: 'bottom'
                                                        });
                                                    }
                                                });
                                            }
                                        });
                                    }
                                    else {
                                        loading.dismiss();
                                        var toast = $this.toastCtrl.create({
                                            message: resolve.message,
                                            duration: 1000,
                                            position: 'bottom'
                                        });
                                        toast.present();
                                    }
                                });
                            }
                            else {
                                loading.dismiss();
                                var toast = $this.toastCtrl.create({
                                    message: $this.config.get_translation('not_enough_money_to_purchase_batch'),
                                    duration: 1000,
                                    position: 'bottom'
                                });
                                toast.present();
                                console.log('not enough money');
                            }
                        });
                    }
                },
            ];
            var title = '';
            title = group.name;
            var alert_1 = this.alertCtrl.create({
                title: title,
                buttons: buttons
            });
            alert_1.present();
        }
        else {
            var toast = $this.toastCtrl.create({
                message: $this.config.get_translation('login_buy_batch'),
                duration: 1000,
                position: 'bottom'
            });
            toast.present();
        }
    };
    GroupBlock.prototype.setGroupStorage = function (group) {
        var $this = this;
        $this.groupService.setGroupStorage(group);
    };
    GroupBlock.prototype.resetBatchCourse = function (group) {
        var $this = this;
        $this.groupService.resetBatchCourse(group);
    };
    GroupBlock.prototype.get_start_end_date = function (start_date, end_date) {
        if (start_date === void 0) { start_date = ''; }
        if (end_date === void 0) { end_date = ''; }
        var months = this.config.batch.months;
        if (start_date) {
            var res_start_date = start_date.split("-");
            var new_start_date_month = months[Number(res_start_date[1] - 1)];
        }
        if (end_date) {
            var res_end_date = end_date.split("-");
            var new_end_date_month = months[Number(res_end_date[1] - 1)];
        }
        if (start_date && end_date) {
            return (res_start_date[2] + ' ' + new_start_date_month + ' ' + res_start_date[0] + '-' + res_end_date[2] + ' ' + new_end_date_month + ' ' + res_end_date[0]);
        }
        else if (start_date) {
            return (res_start_date[2] + ' ' + new_start_date_month + ' ' + res_start_date[0] + '-' + this.config.get_translation('continue'));
        }
        else if (end_date) {
            return (this.config.get_translation('now_to') + '-' + res_end_date[2] + ' ' + new_end_date_month + ' ' + res_end_date[0]);
        }
        else {
            return (this.config.get_translation('not_set'));
        }
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])('group'),
        __metadata("design:type", Object)
    ], GroupBlock.prototype, "group", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])('course_id'),
        __metadata("design:type", Object)
    ], GroupBlock.prototype, "course_id", void 0);
    GroupBlock = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'GroupBlock',template:/*ion-inline-start:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\components\groupblock\groupblock.html"*/'<ion-card  class="group_container">\n    <div (click)="goToNextPage(group)">\n        <div class="group_block_grid">  \n            <div class="group_featured_image" [ngStyle]="{ \'background-image\':\'url(\'+group.image+\')\'}">\n                <lazy-img [inputSrc]="group.image" [imgStyle]="style"></lazy-img>\n                <span *ngIf="group.is_batch" class="group_is_batch">{{config.get_translation(\'batch\')}}</span>\n            </div>\n            <div *ngIf="group" class="basic_group">\n                <h3><span [innerHtml]="group.name"></span></h3>\n                <div class="group_details">\n                    <div *ngIf="group.settings && group.settings.enable_batch_date">\n                        <ion-icon name="calendar"></ion-icon>\n                        <span>{{get_start_end_date(group.settings.start_batch_date,group.settings.end_batch_date)}}</span>\n                    </div>\n                    <div class="members" *ngIf="group.settings">\n                        <ion-icon name="people"></ion-icon>\n                        <span *ngIf="group.settings.total_member_count">{{group.settings.total_member_count}}</span>\n                        <span *ngIf="group.settings.batch_seats && group.settings.enable_seats ">/{{group.settings.batch_seats}}</span>\n                    </div>\n                    \n                    <div class="batch_price_container" *ngIf="group.price && group.price.price_html">\n                        <span class="batch_price" [innerHtml]="group.price.price_html"></span>\n                    </div>    \n                    <div class="buy_button" *ngIf="config.settings.wallet && !course_id">\n                        <div *ngIf="config.isLoggedIn && !group.is_member && group.price">\n                            <button *ngIf="group.is_batch " ion-button (click)="buy_batch(group)">{{config.get_translation(\'buy_batch\')}}</button>\n                        </div>\n                        <div *ngIf="!config.isLoggedIn">\n                            <button *ngIf="group.is_batch && group.price" ion-button (click)="buy_batch(group)">{{config.get_translation(\'buy_batch\')}}</button>\n                        </div>    \n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</ion-card>\n'/*ion-inline-end:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\components\groupblock\groupblock.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_3__services_config__["a" /* ConfigService */],
            __WEBPACK_IMPORTED_MODULE_4__services_wallet__["a" /* WalletService */],
            __WEBPACK_IMPORTED_MODULE_5__services_group__["a" /* GroupService */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* LoadingController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* ToastController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */]])
    ], GroupBlock);
    return GroupBlock;
}());

//# sourceMappingURL=groupblock.js.map

/***/ }),

/***/ 677:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MemberBlock; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_config__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__pages_member_member__ = __webpack_require__(556);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var MemberBlock = /** @class */ (function () {
    function MemberBlock(navCtrl, navParams, config, loadingController, toastCtrl, alertCtrl) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.config = config;
        this.loadingController = loadingController;
        this.toastCtrl = toastCtrl;
        this.alertCtrl = alertCtrl;
        this.memberPage = __WEBPACK_IMPORTED_MODULE_3__pages_member_member__["a" /* MemberPage */];
    }
    MemberBlock.prototype.ngOnInit = function () {
    };
    MemberBlock.prototype.goToNextPage = function (member) {
        this.navCtrl.push(this.memberPage, member);
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])('member'),
        __metadata("design:type", Object)
    ], MemberBlock.prototype, "member", void 0);
    MemberBlock = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'MemberBlock',template:/*ion-inline-start:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\components\memberblock\memberblock.html"*/'<div (click)="goToNextPage(member)">\n	<div class="mymember" *ngIf="member.image && member.display_name">\n		<img [src]="member.image" />\n		<div>\n			<div class="mymember_content">\n				<p [innerHtml]="member.display_name"></p>\n				<a *ngIf="member.status" href="#" class="status"></a>\n			</div>\n		</div>\n	</div>\n</div>'/*ion-inline-end:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\components\memberblock\memberblock.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__services_config__["a" /* ConfigService */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* LoadingController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* ToastController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */]])
    ], MemberBlock);
    return MemberBlock;
}());

//# sourceMappingURL=memberblock.js.map

/***/ }),

/***/ 678:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TopicBlock; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_config__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__services_forum__ = __webpack_require__(48);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__pages_replydirectory_replydirectory__ = __webpack_require__(557);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var TopicBlock = /** @class */ (function () {
    function TopicBlock(navCtrl, navParams, config, forumService, loadingController, toastCtrl, alertCtrl) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.config = config;
        this.forumService = forumService;
        this.loadingController = loadingController;
        this.toastCtrl = toastCtrl;
        this.alertCtrl = alertCtrl;
        this.replypPage = __WEBPACK_IMPORTED_MODULE_4__pages_replydirectory_replydirectory__["a" /* ReplydirectoryPage */];
    }
    TopicBlock.prototype.ngOnInit = function () {
        if (this.topic.post_date) {
            var new_time = Math.floor((new Date().getTime() - Date.parse(this.topic.post_date)) / 1000);
            this.topic.post_date = new_time;
        }
    };
    TopicBlock.prototype.goToNextPage = function (topic) {
        var $this = this;
        $this.navCtrl.push(this.replypPage, topic);
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])('topic'),
        __metadata("design:type", Object)
    ], TopicBlock.prototype, "topic", void 0);
    TopicBlock = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'TopicBlock',template:/*ion-inline-start:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\components\topicblock\topicblock.html"*/'<ion-card  class="topic_container"  (click)="goToNextPage(topic)">\n	<div class="user">\n	   <img *ngIf="topic.user.image" [src]="topic.user.image" alt="">\n	   <span *ngIf="topic.post_date" ><friendlytime [time]="topic.post_date"></friendlytime></span>\n	</div>\n\n	<div class="value">\n		<div *ngIf="topic.post_title" class="post_title">\n			<span [innerHtml]="topic.post_title"></span>\n		</div>\n	</div>\n</ion-card>\n\n\n\n'/*ion-inline-end:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\components\topicblock\topicblock.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__services_config__["a" /* ConfigService */],
            __WEBPACK_IMPORTED_MODULE_3__services_forum__["a" /* ForumService */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* LoadingController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* ToastController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */]])
    ], TopicBlock);
    return TopicBlock;
}());

//# sourceMappingURL=topicblock.js.map

/***/ }),

/***/ 679:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ReplyBlock; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_config__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__services_forum__ = __webpack_require__(48);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var ReplyBlock = /** @class */ (function () {
    function ReplyBlock(navCtrl, navParams, config, forumService, loadingController, toastCtrl, alertCtrl) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.config = config;
        this.forumService = forumService;
        this.loadingController = loadingController;
        this.toastCtrl = toastCtrl;
        this.alertCtrl = alertCtrl;
        this.edit_form = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
    }
    ReplyBlock.prototype.ngOnInit = function () {
        if (this.is_topic) {
        }
        else {
            if (this.reply.post_date) {
                var new_time = Math.floor((new Date().getTime() - Date.parse(this.reply.post_date)) / 1000);
                this.reply.post_date = new_time;
            }
        }
    };
    ReplyBlock.prototype.deletereply = function (reply) {
        var _this = this;
        var $this = this;
        var alert = this.alertCtrl.create({
            title: this.config.get_translation('delete_reply'),
            message: this.config.get_translation('sure_to_delete_reply'),
            buttons: [
                {
                    text: this.config.get_translation('cancel'),
                    role: 'cancel',
                    handler: function () {
                        console.log('Confirm Cancel');
                    }
                }, {
                    text: 'Ok',
                    handler: function () {
                        $this.forumService.deletereply(reply).then(function (res) {
                            if (res.status) {
                                var toast = _this.toastCtrl.create({
                                    message: res.message,
                                    duration: 1000,
                                    position: 'bottom'
                                });
                                toast.present();
                            }
                            else {
                                var toast = _this.toastCtrl.create({
                                    message: res.message,
                                    duration: 1000,
                                    position: 'bottom'
                                });
                                toast.present();
                            }
                        });
                    }
                }
            ]
        });
        alert.present();
    };
    ReplyBlock.prototype.editreply = function (reply) {
        var $this = this;
        this.edit_form.emit(this.reply);
        // if(new_content){
        //     $this.forumService.editreply(reply,new_content).then((res:any)=>{
        //         if(res.status){
        //             let toast = this.toastCtrl.create({
        //                 message: res.message,
        //                 duration: 1000,
        //                 position: 'bottom'
        //             });
        //             toast.present();
        //         }else{
        //             let toast = this.toastCtrl.create({
        //                 message: res.message,
        //                 duration: 1000,
        //                 position: 'bottom'
        //             });
        //             toast.present();
        //         }
        //     });
        // }
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])('reply'),
        __metadata("design:type", Object)
    ], ReplyBlock.prototype, "reply", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])('edit'),
        __metadata("design:type", Object)
    ], ReplyBlock.prototype, "edit", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])('delete'),
        __metadata("design:type", Object)
    ], ReplyBlock.prototype, "delete", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])('is_topic'),
        __metadata("design:type", Object)
    ], ReplyBlock.prototype, "is_topic", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(),
        __metadata("design:type", Object)
    ], ReplyBlock.prototype, "edit_form", void 0);
    ReplyBlock = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'ReplyBlock',template:/*ion-inline-start:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\components\replyblock\replyblock.html"*/'<ion-card class="reply_container">\n	<div class="reply_header">\n		<div class="user">\n			<img *ngIf="reply.user.image" [src]="reply.user.image" alt="">\n			<strong class="nickname" *ngIf="reply.user.nickname"> \n				<span [innerHtml]="reply.user.nickname"></span>\n				<span *ngIf="reply.post_date">\n					<friendlytime [time]="reply.post_date"></friendlytime>\n				</span>\n			</strong>\n		</div>\n		<div class="edit_delete">\n			<span *ngIf="config.isLoggedIn && (reply.post_author == config.user.id) && edit" class="edit"\n				(click)="editreply(reply)">\n				Edit\n			</span>\n			<span *ngIf="config.isLoggedIn && (reply.post_author == config.user.id) && delete" class="delete"\n				(click)="deletereply(reply)">\n				Delete\n			</span>\n		</div>\n	</div>\n	<div class="value">\n		<div *ngIf="reply.post_content" class="post_content">\n			<span [innerHtml]="reply.post_content"></span>\n		</div>\n	</div>\n</ion-card>'/*ion-inline-end:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\components\replyblock\replyblock.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__services_config__["a" /* ConfigService */],
            __WEBPACK_IMPORTED_MODULE_3__services_forum__["a" /* ForumService */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* LoadingController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* ToastController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */]])
    ], ReplyBlock);
    return ReplyBlock;
}());

//# sourceMappingURL=replyblock.js.map

/***/ }),

/***/ 680:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MessageBlock; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_config__ = __webpack_require__(3);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var MessageBlock = /** @class */ (function () {
    function MessageBlock(navCtrl, navParams, config) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.config = config;
    }
    MessageBlock.prototype.ngOnInit = function () {
    };
    MessageBlock.prototype.getMessageLastTime = function (message) {
        var new_time = Math.floor((new Date().getTime() - message.time) / 1000);
        return this.toFriendlyTime(new_time);
    };
    MessageBlock.prototype.toFriendlyTime = function (time) {
        var count = 0;
        var time_labels;
        var measure;
        var key;
        var small_measure;
        var small_count = 0;
        var measures = [
            {
                'label': this.config.get_translation('year'),
                'multi': this.config.get_translation('years'),
                'value': 946080000
            },
            {
                'label': this.config.get_translation('month'),
                'multi': this.config.get_translation('months'),
                'value': 2592000
            },
            {
                'label': this.config.get_translation('week'),
                'multi': this.config.get_translation('weeks'),
                'value': 604800
            },
            {
                'label': this.config.get_translation('day'),
                'multi': this.config.get_translation('days'),
                'value': 86400
            },
            {
                'label': this.config.get_translation('hour'),
                'multi': this.config.get_translation('hours'),
                'value': 3600
            },
            {
                'label': this.config.get_translation('minute'),
                'multi': this.config.get_translation('minutes'),
                'value': 60
            },
            {
                'label': this.config.get_translation('second'),
                'multi': this.config.get_translation('seconds'),
                'value': 1
            },
        ];
        if (time < 0) {
            return this.config.get_translation('expired');
        }
        if (time == 0) {
            return this.config.get_translation('just_now');
        }
        for (var i = 0; i < measures.length; i++) {
            measure = measures[i];
            key = i;
            if (measure.value < time) {
                count = Math.floor(time / measure.value);
                break;
            }
        }
        time_labels = count + ' ' + ((count > 1) ? measure.multi : measure.label);
        if (measure.value > 1) { // Ensure we're not on last element
            small_measure = measures[key + 1];
            small_count = Math.floor((time % measure.value) / small_measure.value);
            if (small_count)
                time_labels += ', ' + small_count + ' ' + ((small_count > 1) ? small_measure.multi : small_measure.label);
        }
        return time_labels;
    };
    MessageBlock.prototype.mimeCheck = function (attachment_type) {
        if (attachment_type.search('image') >= 0) {
            return true;
        }
        else {
            return false;
        }
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])('chat'),
        __metadata("design:type", Object)
    ], MessageBlock.prototype, "chat", void 0);
    MessageBlock = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'MessageBlock',template:/*ion-inline-start:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\components\messageblock\messageblock.html"*/'<div class="chat_message" *ngIf="chat && chat.user && config.user.id === chat.user.id">\n  <img *ngIf="chat.user.image" [src]="chat.user.image"  /> \n  <div [ngClass]=\'{mymessage: config.user.id === chat.user.id}\'>\n    <div class="chat_message_header">\n         <p [innerHtml]="getMessageLastTime(chat)"></p>\n    </div>\n    <p [innerHtml]="chat.message"></p>\n      <div class="attachment" *ngIf="chat.attachment && chat.attachment_type && mimeCheck(chat.attachment_type)">\n        <img  class="attachment_image" [src]="chat.attachment"/> \n    </div>\n    <div class="attachment" *ngIf="chat.attachment && chat.attachment_type && !mimeCheck(chat.attachment_type)">\n        <a class="attachment_url" *ngIf="chat.attachment" [href]="chat.attachment"><ion-icon name="download"></ion-icon></a>\n    </div>   \n  </div>\n</div>\n<div class="chat_message_reverse" *ngIf="chat && chat.user && config.user.id !== chat.user.id">\n   <div [ngClass]=\'{mymessage: config.user.id === chat.user.id}\'>\n        <div class="chat_message_header">\n            <p [innerHtml]="getMessageLastTime(chat)"></p>\n        </div>\n    <p [innerHtml]="chat.message"></p>\n    <div class="attachment" *ngIf="chat.attachment && chat.attachment_type && mimeCheck(chat.attachment_type)">\n        <img  class="attachment_image" [src]="chat.attachment"/> \n    </div>\n    <div class="attachment" *ngIf="chat.attachment && chat.attachment_type && !mimeCheck(chat.attachment_type)">\n        <a class="attachment_url" *ngIf="chat.attachment" [href]="chat.attachment"><ion-icon name="download"></ion-icon></a>\n    </div>   \n  </div> \n  \n  <img *ngIf="chat.user.image" [src]="chat.user.image"  /> \n</div>'/*ion-inline-end:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\components\messageblock\messageblock.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__services_config__["a" /* ConfigService */]])
    ], MessageBlock);
    return MessageBlock;
}());

//# sourceMappingURL=messageblock.js.map

/***/ }),

/***/ 681:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return VideoGularBlock; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_config__ = __webpack_require__(3);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var VideoGularBlock = /** @class */ (function () {
    function VideoGularBlock(config) {
        this.config = config;
    }
    VideoGularBlock.prototype.ngOnInit = function () {
    };
    VideoGularBlock.prototype.isObject = function (obj) {
        return typeof obj === 'object';
    };
    VideoGularBlock.prototype.onPlayerReady = function (api) {
        var _this = this;
        this.api = api;
        this.api.getDefaultMedia().subscriptions.ended.subscribe(function () {
            // Set the video to the beginning
            _this.api.getDefaultMedia().currentTime = 0;
            console.log('ended');
        });
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])('meta'),
        __metadata("design:type", Object)
    ], VideoGularBlock.prototype, "meta", void 0);
    VideoGularBlock = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'VideoGularBlock',template:/*ion-inline-start:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\components\video-gular\video-gular.html"*/'<div *ngIf="meta">\n    <div *ngIf="meta.audio && meta.audio.length" class="post_uri">\n        <div *ngFor="let audio of meta.audio">\n            <vg-player style="height: 50px;" (onPlayerReady)="onPlayerReady($event)" vg-responsive="true">\n                <vg-controls [vgAutohide]="false">\n                    <vg-play-pause></vg-play-pause>\n                    <vg-playback-button></vg-playback-button>\n                    <vg-time-display vgProperty="current" vgFormat="mm:ss"></vg-time-display>\n                    <vg-scrub-bar>\n                        <vg-scrub-bar-current-time></vg-scrub-bar-current-time>\n                    </vg-scrub-bar>\n                    <vg-time-display vgProperty="total" vgFormat="mm:ss"></vg-time-display>\n                    <vg-mute></vg-mute>\n                </vg-controls>\n                <audio #media [vgMedia]="media" id="myAudio">\n                    <source [src]="audio" type="audio/mp3">\n                </audio>\n            </vg-player>\n        </div>\n    </div>\n    <div *ngIf="meta.video && meta.video.length" class="post_uri">\n        <div *ngFor="let video of meta.video">\n            <vg-player (onPlayerReady)="onPlayerReady($event)" vg-responsive="true">\n                <vg-controls [vgFor]="my-video" [vgAutohide]="true" [vgAutohideTime]="5">\n                    <vg-play-pause [vgFor]="my-video"></vg-play-pause>\n                    <vg-playback-button></vg-playback-button>\n                    <vg-time-display [vgFor]="my-video" vgProperty="current" vgFormat="mm:ss"></vg-time-display>\n                    <vg-scrub-bar [vgFor]="my-video">\n                        <vg-scrub-bar-current-time></vg-scrub-bar-current-time>\n                    </vg-scrub-bar>\n                    <vg-volume [vgFor]="my-video"></vg-volume>\n                    <vg-fullscreen></vg-fullscreen>\n                    <vg-overlay-play></vg-overlay-play>\n                </vg-controls>\n                <video #myMedia [vgMedia]="myMedia" id="my-video" [src]="video" type="video/mp4">\n                </video>\n            </vg-player>\n        </div>\n    </div>\n    <div *ngIf="meta.iframes && meta.iframes.length" class="post_uri">\n        <div *ngFor="let iframeUrl of meta.iframes">\n            <iframe *ngIf="!isObject(iframeUrl)" width="100%" height="100%" [src]="iframeUrl | safeUrl" frameborder="0"\n                allowfullscreen></iframe>\n        </div>\n    </div>\n</div>'/*ion-inline-end:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\components\video-gular\video-gular.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__services_config__["a" /* ConfigService */]])
    ], VideoGularBlock);
    return VideoGularBlock;
}());

//# sourceMappingURL=video-gular.js.map

/***/ }),

/***/ 682:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return NodataPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ionic_native_media__ = __webpack_require__(190);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__ionic_native_file__ = __webpack_require__(88);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





/**
 * Generated class for the NodataPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var NodataPage = /** @class */ (function () {
    function NodataPage(navCtrl, navParams, media, platform, file, toastCtrl) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.media = media;
        this.platform = platform;
        this.file = file;
        this.toastCtrl = toastCtrl;
        this.loadFiles = [];
    }
    NodataPage.prototype.ngOnInit = function () {
        var _this = this;
        this.platform.ready().then(function () {
            if (_this.platform.is('ios')) {
                _this.storageDirectory = _this.file.dataDirectory;
            }
            else if (_this.platform.is('android')) {
                _this.storageDirectory = _this.file.externalDataDirectory;
            }
            else {
                _this.storageDirectory = _this.file.cacheDirectory;
            }
            _this.file.listDir(_this.storageDirectory, '').then(function (listing) {
                listing.forEach(function (element) {
                    if (element.name.substr(element.name.length - 3) == 'mp3' || element.name.substr(element.name.length - 3) == 'mp4') {
                        var mediaobject = _this.createAudioFile(_this.storageDirectory, element.name);
                        _this.loadFiles.push(mediaobject);
                    }
                });
                var toastt1 = _this.toastCtrl.create({
                    message: _this.loadFiles[0],
                    duration: 10000,
                    position: 'bottom'
                });
                toastt1.present();
            });
        });
    };
    NodataPage.prototype.createAudioFile = function (pathToDirectory, filename) {
        if (this.platform.is('ios')) {
            //ios
            return this.media.create(pathToDirectory.replace(/^file:\/\//, '') + '/' + filename);
        }
        else {
            // android
            try {
                return this.media.create(pathToDirectory + filename);
            }
            catch (error) {
                var toastt1 = this.toastCtrl.create({
                    message: error,
                    duration: 10000,
                    position: 'bottom'
                });
                toastt1.present();
                return error;
            }
        }
    };
    NodataPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad NodataPage');
    };
    NodataPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-nodata',template:/*ion-inline-start:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\pages\nodata\nodata.html"*/'<!--\n  Generated template for the NodataPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <ion-title>nodata</ion-title>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n  <ion-list>\n    <ion-item *ngFor="let f of loadFiles">\n      <vg-player style="height: 50px;"   vg-responsive="true">\n        <vg-controls [vgAutohide]="false">\n            <vg-play-pause></vg-play-pause>\n            <vg-playback-button></vg-playback-button>\n\n            <vg-time-display vgProperty="current" vgFormat="mm:ss"></vg-time-display>\n\n            <vg-scrub-bar>\n                <vg-scrub-bar-current-time></vg-scrub-bar-current-time>\n            </vg-scrub-bar>\n\n            <vg-time-display vgProperty="total" vgFormat="mm:ss"></vg-time-display>\n\n            <vg-mute></vg-mute>\n\n        </vg-controls>\n                                                                                                                                                                                                                        \n        <audio #media [vgMedia]="media" id="myAudio" >\n            <source [src]="f" type="audio/mp3">\n        </audio>\n    </vg-player>\n    </ion-item>\n  </ion-list>\n</ion-content>\n'/*ion-inline-end:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\pages\nodata\nodata.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__ionic_native_media__["a" /* Media */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["o" /* Platform */], __WEBPACK_IMPORTED_MODULE_3__ionic_native_file__["a" /* File */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* ToastController */]])
    ], NodataPage);
    return NodataPage;
}());

//# sourceMappingURL=nodata.js.map

/***/ }),

/***/ 683:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ProgressBarComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var ProgressBarComponent = /** @class */ (function () {
    function ProgressBarComponent() {
        if (this.progress > 100) {
            this.progress = 100;
        }
    }
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])('progress'),
        __metadata("design:type", Object)
    ], ProgressBarComponent.prototype, "progress", void 0);
    ProgressBarComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'progress-bar',template:/*ion-inline-start:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\components\progress-bar\progress-bar.html"*/'<div class="progress_wrap">\n	<div class="progress-outer">\n    	<div class="progress-inner" [style.width]="progress + \'%\'"></div>\n	</div> \n	<span>{{progress}}%</span>\n</div>\n'/*ion-inline-end:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\components\progress-bar\progress-bar.html"*/
        }),
        __metadata("design:paramtypes", [])
    ], ProgressBarComponent);
    return ProgressBarComponent;
}());

//# sourceMappingURL=progress-bar.js.map

/***/ }),

/***/ 684:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return FriendlytimeComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_config__ = __webpack_require__(3);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


/**
 * Component converts timestamp into human readable date time
 */
var FriendlytimeComponent = /** @class */ (function () {
    function FriendlytimeComponent(config) {
        this.config = config;
        this.time = 60;
    }
    FriendlytimeComponent.prototype.ngOnInit = function () {
        this.toFriendlyTime();
    };
    FriendlytimeComponent.prototype.ionViewWillEnter = function () {
        this.toFriendlyTime();
    };
    FriendlytimeComponent.prototype.totime = function () {
    };
    FriendlytimeComponent.prototype.toFriendlyTime = function () {
        var count = 0;
        var time_labels;
        var measure;
        var key;
        var small_measure;
        var small_count = 0;
        var measures = [
            {
                'label': this.config.get_translation('year'),
                'multi': this.config.get_translation('years'),
                'value': 946080000
            },
            {
                'label': this.config.get_translation('month'),
                'multi': this.config.get_translation('months'),
                'value': 2592000
            },
            {
                'label': this.config.get_translation('week'),
                'multi': this.config.get_translation('weeks'),
                'value': 604800
            },
            {
                'label': this.config.get_translation('day'),
                'multi': this.config.get_translation('days'),
                'value': 86400
            },
            {
                'label': this.config.get_translation('hour'),
                'multi': this.config.get_translation('hours'),
                'value': 3600
            },
            {
                'label': this.config.get_translation('minute'),
                'multi': this.config.get_translation('minutes'),
                'value': 60
            },
            {
                'label': this.config.get_translation('second'),
                'multi': this.config.get_translation('seconds'),
                'value': 1
            },
        ];
        if (this.time <= 0) {
            return this.friendlytime = this.config.get_translation('expired') + ' #   ' + this.time;
        }
        for (var i = 0; i < measures.length; i++) {
            measure = measures[i];
            key = i;
            if (measure.value < this.time) {
                count = Math.floor(this.time / measure.value);
                break;
            }
        }
        time_labels = count + ' ' + ((count > 1) ? measure.multi : measure.label);
        if (measure.value > 1) { // Ensure we're not on last element
            small_measure = measures[key + 1];
            small_count = Math.floor((this.time % measure.value) / small_measure.value);
            if (small_count)
                time_labels += ', ' + small_count + ' ' + ((small_count > 1) ? small_measure.multi : small_measure.label);
        }
        this.friendlytime = time_labels;
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
        __metadata("design:type", Number)
    ], FriendlytimeComponent.prototype, "time", void 0);
    FriendlytimeComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'friendlytime',
            template: '{{friendlytime}}'
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__services_config__["a" /* ConfigService */]])
    ], FriendlytimeComponent);
    return FriendlytimeComponent;
}());

//# sourceMappingURL=friendlytime.js.map

/***/ }),

/***/ 685:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return QuestionComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ng2_dragula__ = __webpack_require__(558);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ng2_dragula___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_ng2_dragula__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_config__ = __webpack_require__(3);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var QuestionComponent = /** @class */ (function () {
    function QuestionComponent(config, dragulaService) {
        this.config = config;
        this.dragulaService = dragulaService;
        this.marks = 0;
        this.flip = false;
        this.answerChecked = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        this.markedQuestion = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
    }
    QuestionComponent.prototype.ngOnInit = function () {
        var _this = this;
        if (this.question.type == 'sort' || this.question.type == 'match') {
            this.sort_options = this.question.options.slice();
            this.answer = [];
            for (var l = 0; l < this.sort_options.length; l++) {
                this.answer.push((this.question.options.indexOf(this.sort_options[l]) + 1));
            }
            this.dragulaService.dropModel.subscribe(function (value) {
                _this.answer = [];
                for (var l = 0; l < _this.sort_options.length; l++) {
                    _this.answer.push((_this.question.options.indexOf(_this.sort_options[l]) + 1));
                }
                _this.markedQuestion.emit(_this.question);
                _this.processCheckAnswer();
            });
        }
    };
    QuestionComponent.prototype.saveOptionAnswer = function (marked) {
        this.answer = marked;
        this.question.status = 1;
        this.question.marked = this.answer;
        this.markedQuestion.emit(this.question);
        this.processCheckAnswer();
    };
    QuestionComponent.prototype.savemultiOptionAnswer = function (marked) {
        if (this.answer) {
            //let ans = this.answer.split(',');
            if (this.answer.indexOf(marked) > -1) { //Remove Makred
                var index = this.answer.indexOf(marked);
                this.answer.splice(index, 1);
            }
            else {
                this.answer.push(marked);
            }
        }
        else {
            this.answer = [];
            this.answer.push(marked);
        }
        this.question.status = 1;
        this.question.marked = this.answer;
        this.markedQuestion.emit(this.question);
        this.processCheckAnswer();
    };
    QuestionComponent.prototype.checkInAnswer = function (i) {
        if (this.answer) {
            if (this.answer.indexOf(i) !== -1) {
                return true;
            }
            else {
                return false;
            }
        }
        return false;
    };
    QuestionComponent.prototype.checkInCorrectOrder = function (i) {
        var ans = this.question.correct.split(',');
        if (ans[i] == (this.question.options.indexOf(this.sort_options[i]) + 1)) {
            return true;
        }
        return false;
    };
    QuestionComponent.prototype.checkInCorrect = function (i) {
        if (this.question.correct) {
            var ans = this.question.correct.split(',');
            i = i + 1;
            var match = i.toString();
            if (ans.indexOf(match) !== -1) {
                return true;
            }
        }
        return false;
    };
    QuestionComponent.prototype.checkAnswer = function () {
        this.question.user_marks = 0;
        this.question.marked = this.answer;
        this.question.status = 2;
        this.processCheckAnswer();
    };
    QuestionComponent.prototype.processCheckAnswer = function () {
        switch (this.question.type) {
            case 'truefalse':
                this.question.correct = parseInt(this.question.correct);
                if (this.answer == this.question.correct) {
                    this.question.user_marks = this.question.marks;
                }
                else {
                    this.question.user_marks = 0;
                }
                break;
            case 'single':
                if (this.answer == (this.question.correct - 1)) {
                    this.question.user_marks = this.question.marks;
                }
                else {
                    this.question.user_marks = 0;
                }
                break;
            case 'multiple':
                var ans = this.answer;
                console.log(ans);
                this.question.marked = this.answer.join(',').slice();
                var correct = this.question.correct.split(',');
                if ((ans.length) == correct.length) {
                    for (var k = 0; k < ans.length; k++) {
                        this.question.user_marks = this.question.marks;
                        var match = (ans[k] + 1);
                        match = match.toString();
                        //console.log('Checking in correct  '+(ans[k]+1)+' = '+correct.indexOf(match));
                        if (correct.indexOf(match) == -1) {
                            console.log('7777');
                            this.question.user_marks = 0;
                            break;
                        }
                    }
                }
                break;
            case 'match':
                this.question.marked = this.answer.join(',').slice();
                var match_ans = this.answer;
                var match_correct = this.question.correct.split(',');
                for (var k = 0; k < match_ans.length; k++) {
                    this.question.user_marks = this.question.marks;
                    var match = void 0;
                    match = match_ans[k].toString();
                    if (match_correct[k] != match) {
                        this.question.user_marks = 0;
                        break;
                    }
                }
                break;
            case 'sort':
                this.question.marked = this.answer.join(',').slice();
                var sort_ans = this.answer;
                var sort_correct = this.question.correct.split(',');
                for (var k = 0; k < sort_ans.length; k++) {
                    this.question.user_marks = this.question.marks;
                    var match = void 0;
                    match = sort_ans[k].toString();
                    if (sort_correct[k] != match) {
                        this.question.user_marks = 0;
                        break;
                    }
                }
                break;
            case 'fillblank':
                this.question.marked = this.answer.join('|').slice();
                var fill_correct = this.question.correct.split('|');
                this.question.user_marks = 0;
                if (fill_correct.length == this.answer.length) {
                    this.question.user_marks = this.question.marks;
                    for (var k = 0; k < this.answer.length; k++) {
                        var match = void 0;
                        match = this.answer[k].toString();
                        var fill_variants = fill_correct[k].split(',');
                        if (fill_variants.indexOf(match) == -1) {
                            this.question.user_marks = 0;
                            break;
                        }
                    }
                }
                break;
            case 'select':
                this.question.marked = this.answer.join('|').slice();
                var select_correct = this.question.correct.split('|');
                this.question.user_marks = 0;
                if (select_correct.length == this.answer.length) {
                    this.question.user_marks = this.question.marks;
                    for (var k = 0; k < this.answer.length; k++) {
                        var match = void 0;
                        match = (this.answer[k] + 1).toString();
                        if (match != select_correct[k]) {
                            this.question.user_marks = 0;
                            break;
                        }
                    }
                }
                break;
            case 'smalltext':
                this.question.marked = this.answer;
                if (this.answer == this.question.correct) {
                    this.question.user_marks = this.question.marks;
                }
                else {
                    this.question.user_marks = 0;
                }
                break;
            default:
                break;
        }
        this.answerChecked.emit(this.question);
    };
    QuestionComponent.prototype.flipped = function () {
        if (this.question.status > 1) {
            if (this.flip) {
                this.flip = false;
            }
            else {
                this.flip = true;
            }
        }
    };
    QuestionComponent.prototype.getUserMarkedAnswer = function () {
        var answer;
        switch (this.question.type) {
            case 'truefalse':
                if (this.question.marked) {
                    answer = this.config.get_translation('true');
                }
                else {
                    answer = this.config.get_translation('false');
                }
                break;
            case 'single':
            case 'survey':
                if (this.question.marked != null && typeof this.question.marked != 'undefined') {
                    answer = this.question.options[(this.question.marked)];
                }
                break;
            case 'sort':
            case 'match':
            case 'multiple':
                answer = '';
                if (this.question.marked) {
                    var correct = this.question.marked.split(',');
                    ;
                    if (correct.length) {
                        for (var i = 0; i < correct.length; i++) {
                            answer += '( ' + (i + 1) + ' ) ' + this.question.options[(correct[i] - 1)];
                        }
                    }
                }
                break;
            case 'select':
                answer = '';
                if (this.question.marked) {
                    var correct = this.question.marked.split(',');
                    ;
                    if (correct.length) {
                        for (var i = 0; i < correct.length; i++) {
                            answer += '( ' + (i + 1) + ' ) ' + this.question.options[(correct[i] - 1)];
                        }
                    }
                }
                break;
            case 'fillblank':
            case 'text':
            case 'textarea':
            case 'smalltext':
                answer = '';
                if (this.question.marked) {
                    var correct = this.question.marked.split(',');
                    ;
                    if (correct.length) {
                        for (var i = 0; i < correct.length; i++) {
                            answer += '( ' + (i + 1) + ' ) ' + correct[i];
                        }
                    }
                }
                break;
        }
        return answer;
    };
    QuestionComponent.prototype.getAnswer = function () {
        var answer;
        switch (this.question.type) {
            case 'truefalse':
                if (this.question.correct) {
                    answer = this.config.get_translation('true');
                }
                else {
                    answer = this.config.get_translation('false');
                }
                break;
            case 'single':
            case 'survey':
                answer = this.question.options[(this.question.correct - 1)];
                break;
            case 'sort':
            case 'match':
            case 'multiple':
                answer = '';
                var correct = this.question.correct.split(',');
                if (correct.length) {
                    for (var i = 0; i < correct.length; i++) {
                        answer += '( ' + (i + 1) + ' ) ' + this.question.options[(correct[i] - 1)];
                    }
                }
                break;
            case 'select':
                answer = '';
                var correct = this.question.correct.split('|');
                if (correct.length) {
                    for (var i = 0; i < correct.length; i++) {
                        answer += '( ' + (i + 1) + ' ) ' + this.question.options[(correct[i] - 1)];
                    }
                }
                break;
            case 'fillblank':
            case 'text':
            case 'textarea':
            case 'smalltext':
                answer = '';
                var correct = this.question.correct.split('|');
                if (correct.length) {
                    for (var i = 0; i < correct.length; i++) {
                        answer += '( ' + (i + 1) + ' ) ' + correct[i];
                    }
                }
                break;
        }
        return answer;
    };
    QuestionComponent.prototype.trackSelect = function (value, i) {
        if (this.answer) {
            this.answer[i] = value;
        }
        else {
            this.answer = [];
            this.answer[i] = value;
        }
        this.question.status = 1;
        this.markedQuestion.emit(this.question);
        this.processCheckAnswer();
    };
    QuestionComponent.prototype.trackFillBlank = function (value, i) {
        if (this.answer) {
            this.answer[i] = value;
        }
        else {
            this.answer = [];
            this.answer[i] = value;
        }
        this.question.status = 1;
        this.markedQuestion.emit(this.question);
        this.processCheckAnswer();
    };
    QuestionComponent.prototype.tracktext = function (value) {
        this.answer = value;
        this.question.status = 1;
        this.markedQuestion.emit(this.question);
        this.processCheckAnswer();
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])('question'),
        __metadata("design:type", Object)
    ], QuestionComponent.prototype, "question", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])('display'),
        __metadata("design:type", Object)
    ], QuestionComponent.prototype, "display", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"])
    ], QuestionComponent.prototype, "answerChecked", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"])
    ], QuestionComponent.prototype, "markedQuestion", void 0);
    QuestionComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'question',template:/*ion-inline-start:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\components\question\question.html"*/'<div class="marks"><span [innerHtml]="question.marks"></span>{{config.get_translation(\'marks\')}}</div>\n\n<div class="question_content" *ngIf="question.type != \'match\' && question.type != \'select\' && question.type != \'fillblank\'" [innerHtml]="question.content"></div>\n\n<div class="question_content" *ngIf="question.type == \'match\'">\n	<div [innerHtml]="question.content.statement"></div>\n</div>\n\n<div class="question_content" *ngIf="question.type == \'select\'">\n	<div *ngFor="let content of question.content; let i = index">\n		<div [innerHtml]="content"></div>\n		<ion-item><ion-select #ci (ionChange)="trackSelect($event,i)" *ngIf="i < (question.content.length-1)" okText="{{config.get_translation(\'ok\')}}" cancelText="{{config.get_translation(\'cancel\')}}">\n		    <ion-option *ngFor="let option of question.options;let k=index" [value]="k">{{option}}</ion-option>\n		</ion-select></ion-item>\n	</div>\n</div>\n\n<div class="question_content" *ngIf="question.type == \'fillblank\'">\n	<div *ngFor="let content of question.content; let i = index">\n		<div [innerHtml]="content"></div>\n		<ion-input type="text"  (keyup)="trackFillBlank($event.target.value,i)" *ngIf="i < (question.content.length-1)"></ion-input>\n	</div>\n</div>\n\n<div [ngClass]="{\'quiz_question\': true, \'active\': ( question.status > 1 || flip ) }" (click)="flipped()">\n	<div class="flipper">\n	<div class="main_question">\n		<div *ngIf="question.type == \'truefalse\'" [class]="question.type">\n			<ul class="question_options">\n				<li>\n					<ion-label [ngClass]="{selected: answer == 1, correct: question.status > 1 && question.correct == 1}" [innerHtml]="config.get_translation(\'true\')" (click)="saveOptionAnswer(1)"></ion-label>\n				</li>\n				<li>\n					<ion-label [ngClass]="{selected: answer == 0, correct: question.status > 1 && question.correct == 0}" [innerHtml]="config.get_translation(\'false\')" (click)="saveOptionAnswer(0)"></ion-label>\n				</li>\n			</ul>\n		</div>\n		<div *ngIf="question.type == \'single\' || question.type == \'survey\'" [class]="question.type">\n			<ul class="question_options">\n				<li *ngFor="let option of question.options; let i = index">\n					<ion-label [ngClass]="{selected:answer == i, correct: question.status > 1 && (question.correct-1) == i, incorrect: question.status > 1 && (question.correct-1) != i && answer == i}" [innerHtml]="option" (click)="saveOptionAnswer(i)"></ion-label>\n				</li>\n			</ul>\n		</div>\n		<div *ngIf="question.type == \'multiple\'">\n			<ul class="question_options">\n				<li *ngFor="let option of question.options; let i = index">\n					<ion-label [ngClass]="{selected: checkInAnswer(i), correct: question.status > 1 && checkInCorrect(i), incorrect: question.status > 1 && checkInCorrect(i) == false && checkInAnswer(i)}" [innerHtml]="option" (click)="savemultiOptionAnswer(i)"></ion-label>\n				</li>\n			</ul>\n		</div>\n		<div *ngIf="question.type == \'smalltext\'">\n		  	<ion-item>\n		    	<ion-input (keyup)="tracktext($event.target.value)" type="text"></ion-input>\n		  	</ion-item>\n		</div>\n		<div *ngIf="question.type == \'largetext\'">\n		  	<ion-item>\n		    	<ion-textarea (keyup)="tracktext($event.target.value)"></ion-textarea>\n		  	</ion-item>\n		</div>\n		<div *ngIf="question.type == \'sort\'">\n			<ul class="question_sort" [dragula]=\'"sortable_question"\' [dragulaModel]="sort_options">\n				<li *ngFor="let option of sort_options; let i = index">\n					<ion-label [ngClass]="{selected: checkInAnswer(i), correct: question.status > 1 && checkInCorrectOrder(i), incorrect: question.status > 1 && checkInCorrectOrder(i) == false && checkInAnswer(i)}" [innerHtml]="option" ></ion-label>\n				</li>\n			</ul>\n		</div>\n		<div *ngIf="question.type == \'match\'">\n			<ion-grid>\n				<ion-row>\n					<ion-col>\n						<ul class="question_sort_static">\n							<li *ngFor="let match_drop of question.content.match; let i = index">\n								<div [innerHtml]="match_drop"></div>\n							</li>\n						</ul>\n					</ion-col>\n					<ion-col>\n						<ul class="question_sort" [dragula]=\'"sortable_question"\' [dragulaModel]="sort_options">\n							<li *ngFor="let option of sort_options; let i = index">\n								<ion-label [ngClass]="{selected: checkInAnswer(i), correct: question.status > 1 && checkInCorrectOrder(i), incorrect: question.status > 1 && checkInCorrectOrder(i) == false && checkInAnswer(i)}" [innerHtml]="option" ></ion-label>\n							</li>\n						</ul>\n					</ion-col>\n				</ion-row>\n			</ion-grid>\n		</div>\n		<button ion-button block *ngIf="question.status <= 1 && question.auto > 0 && !display" (click)="checkAnswer()" [innerHtml]="config.get_translation(\'checkanswer\')"></button>\n	</div>\n	<div class="question_result" *ngIf="question.status > 1 || display">\n		<div class="result">\n			<div class="correct" *ngIf="question.user_marks == question.marks">\n				<ion-icon name="md-checkmark-circle"></ion-icon>\n			</div>\n			<div class="incorrect" *ngIf="question.user_marks != question.marks">\n				<ion-icon name="md-close-circle"></ion-icon>\n			</div>\n		</div>\n		<div class="correct_answer" [innerHtml]="getAnswer()"></div>\n		<div class="marked_answer">\n			<span  [innerHtml]="config.get_translation(\'marked_answer\')+\' : \'"></span>\n			<span class="user_answer" [innerHtml]="getUserMarkedAnswer()"></span>\n		</div>\n		<div class="explanation" [innerHtml]="question.explanation"></div>\n	</div>\n	</div>\n</div>\n\n'/*ion-inline-end:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\components\question\question.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2__services_config__["a" /* ConfigService */],
            __WEBPACK_IMPORTED_MODULE_1_ng2_dragula__["DragulaService"]])
    ], QuestionComponent);
    return QuestionComponent;
}());

//# sourceMappingURL=question.js.map

/***/ }),

/***/ 697:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TimerComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Rx__ = __webpack_require__(560);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Rx___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_Rx__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_config__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__services_quiz__ = __webpack_require__(185);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var TimerComponent = /** @class */ (function () {
    function TimerComponent(quizService, config) {
        this.quizService = quizService;
        this.config = config;
        this.hours = 0;
        this.minutes = 0;
        this.seconds = 0;
        this.remaining = 100;
        this.QuizEnded = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
    }
    TimerComponent.prototype.ngOnInit = function () {
        if (this.quiz) {
            console.log('IS QUIZ STARTED');
            this.start = this.quizService.checkQuizStarted(this.quiz);
            console.log(this.start);
        }
    };
    TimerComponent.prototype.ionViewLoaded = function () {
        this.QuizTimer();
    };
    TimerComponent.prototype.ngOnChanges = function () {
        if (this.quiz) {
            if (this.remaining > 0) {
                console.log("CHANGE DETECTED");
                this.start = this.quizService.checkQuizStarted(this.quiz);
                console.log('IS QUIZ STARTED =' + this.start);
                this.QuizTimer();
            }
        }
    };
    TimerComponent.prototype.startQuiz = function ($event) {
        console.log('Event Captured');
        console.log($event);
        if (this.quiz) {
            this.QuizTimer();
        }
    };
    TimerComponent.prototype.QuizTimer = function () {
        var _this = this;
        console.log('start ' + this.start);
        if (this.start) {
            console.log('Time ' + this.time);
            var endtimer = this.time * 1000;
            var stopTimer$ = __WEBPACK_IMPORTED_MODULE_1_rxjs_Rx__["Observable"].timer(endtimer);
            setTimeout(function () {
                _this.remaining = 0;
                console.log('SetTimeout fired');
                _this.QuizEnded.emit(_this.quiz);
            }, endtimer);
            console.log(this.time);
            this.timer = __WEBPACK_IMPORTED_MODULE_1_rxjs_Rx__["Observable"].timer(1000, 1000).takeUntil(stopTimer$);
            this.timer.subscribe(function (t) {
                //console.log(t+'-- t | time ->'+this.time);
                var newtime = _this.time - t;
                _this.hours = Math.floor(newtime / 3600);
                _this.minutes = Math.floor((newtime - 3600 * _this.hours) / 60);
                _this.seconds = newtime - 3600 * _this.hours - 60 * _this.minutes;
                _this.remaining = Math.floor(100 * (newtime / _this.time));
                //console.log(this.remaining+'<= REMAINING | newtime = '+newtime);
            });
        }
        else {
            this.hours = Math.floor(this.time / 3600);
            this.minutes = Math.floor((this.time - 3600 * this.hours) / 60);
            this.seconds = this.time - 3600 * this.hours - 60 * this.minutes;
        }
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])('time'),
        __metadata("design:type", Object)
    ], TimerComponent.prototype, "time", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])('quiz'),
        __metadata("design:type", Object)
    ], TimerComponent.prototype, "quiz", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])('start'),
        __metadata("design:type", Object)
    ], TimerComponent.prototype, "start", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"])
    ], TimerComponent.prototype, "QuizEnded", void 0);
    TimerComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'timer',template:/*ion-inline-start:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\components\timer\timer.html"*/'<div class="timer">\n	<div class="hours" *ngIf="hours > 0">\n		{{hours}}\n	</div>\n	<div class="minutes" *ngIf="seconds > 0">\n		{{minutes}}\n	</div>\n	<div class="seconds"  *ngIf="seconds > 0">\n		{{seconds}}\n	</div>\n	<div  *ngIf="remaining == 0">\n		{{config.get_translation(\'timeout\')}}\n	</div>\n	<div class="timeremaining">\n		<div class="timer_remaining_bg">\n			<div class="timer_remaining" [ngStyle]="{\'width\': remaining+\'%\'}">\n			</div>\n		</div>\n	</div>\n</div>\n'/*ion-inline-end:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\components\timer\timer.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_3__services_quiz__["a" /* QuizService */], __WEBPACK_IMPORTED_MODULE_2__services_config__["a" /* ConfigService */]])
    ], TimerComponent);
    return TimerComponent;
}());

//# sourceMappingURL=timer.js.map

/***/ }),

/***/ 70:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return GroupService; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ionic_storage__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__config__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var GroupService = /** @class */ (function () {
    function GroupService(http, config, storage) {
        this.http = http;
        this.config = config;
        this.storage = storage;
        this.my_batches = [];
    }
    GroupService.prototype.get_all_groups = function (action, args) {
        var $this = this;
        var data = {};
        return new Promise(function (resolve) {
            switch (action) {
                case 'refresh':
                    $this.all_groups = [];
                    data = {
                        'limit': $this.config.batch.limit,
                        'offset': 0,
                        'args': args
                    };
                    $this.get_groups(data, action).then(function (res) {
                        resolve(res);
                    });
                    break;
                case 'ngoninit':
                    $this.storage.get('allgroups').then(function (allgroups) {
                        if (allgroups && allgroups.length) {
                            $this.all_groups = allgroups;
                            resolve(allgroups);
                        }
                        else {
                            data = {
                                'limit': $this.config.batch.limit,
                                'offset': 0,
                                'args': args
                            };
                            $this.get_groups(data, action).then(function (res) {
                                resolve(res);
                            });
                        }
                    });
                    break;
                case 'infinite':
                    if ($this.all_groups && $this.all_groups.length) {
                        var offset = $this.all_groups.length;
                        data = {
                            'limit': $this.config.batch.limit,
                            'offset': offset,
                            'args': args
                        };
                        $this.get_groups(data, action).then(function (res) {
                            resolve(res);
                        });
                    }
                    break;
                case 'type':
                    $this.all_groups = [];
                    data = {
                        'limit': $this.config.batch.limit,
                        'offset': 0,
                        'args': args
                    };
                    $this.get_groups(data, action).then(function (res) {
                        resolve(res);
                    });
                    break;
                case 'search':
                    $this.all_groups = [];
                    data = {
                        'limit': $this.config.batch.limit,
                        'offset': 0,
                        'args': args
                    };
                    $this.get_groups(data, action).then(function (res) {
                        resolve(res);
                    });
                    break;
                case 'filterby':
                    $this.all_groups = [];
                    data = {
                        'limit': $this.config.batch.limit,
                        'offset': 0,
                        'args': args
                    };
                    $this.get_groups(data, action).then(function (res) {
                        resolve(res);
                    });
                    break;
                default:
            }
        });
    };
    GroupService.prototype.get_groups = function (data, action) {
        var _this = this;
        var $this = this;
        return new Promise(function (resolve) {
            if ($this.config.isLoggedIn) {
                var opt = $this.getUserAuthorizationHeaders();
                $this.http.post($this.config.baseUrl + "groups/getAllgroups", data, opt)
                    .map(function (res) { return res.json(); })
                    .subscribe(function (res) {
                    if (res.status) {
                        if (res.data.length) {
                            res.data.map(function (x, i) {
                                if ($this.all_groups) {
                                    $this.all_groups.push(x);
                                }
                                else {
                                    $this.all_groups = [];
                                }
                            });
                        }
                    }
                    else {
                        $this.all_groups = [];
                    }
                    if (action == 'refresh' || action == 'ngoninit') {
                        _this.storage.set('allgroups', $this.all_groups);
                        _this.config.addToTracker('allgroups', parseInt($this.all_groups.length));
                    }
                    resolve(res.data);
                });
            }
            else {
                $this.http.post($this.config.baseUrl + "groups/getAllgroups-nonlog", data)
                    .map(function (res) { return res.json(); })
                    .subscribe(function (res) {
                    if (res.status) {
                        if (res.data.length) {
                            res.data.map(function (x, i) {
                                if ($this.all_groups) {
                                    $this.all_groups.push(x);
                                }
                                else {
                                    $this.all_groups = [];
                                }
                            });
                        }
                    }
                    else {
                        $this.all_groups = [];
                    }
                    if (action == 'refresh' || action == 'ngoninit') {
                        _this.storage.set('allgroups', $this.all_groups);
                        _this.config.addToTracker('allgroups', parseInt($this.all_groups.length));
                    }
                    console.log('this.allgroups');
                    console.log($this.all_groups);
                    resolve(res.data);
                });
            }
        });
    };
    GroupService.prototype.getBatchById = function (batch_id, force) {
        var _this = this;
        if (force === void 0) { force = true; }
        // force=true;
        var $this = this;
        batch_id = parseInt(batch_id);
        return new Promise(function (resolve) {
            var track_group = $this.config.trackComponents('groups');
            if (Array.isArray(track_group) && track_group.indexOf(batch_id) != -1 && !force) {
                $this.storage.get('fullbatch_' + batch_id).then(function (batch_val) {
                    if (batch_val) {
                        resolve(batch_val);
                    }
                    else {
                        console.log('if hit ');
                        var body_form_data = new FormData();
                        body_form_data.append('batch_id', batch_id);
                        var opt = $this.getUserAuthorizationHeaders();
                        $this.http.post($this.config.baseUrl + "groups/getBatchById", body_form_data, opt)
                            .map(function (res) { return res.json(); })
                            .subscribe(function (res) {
                            if (res.status) {
                                _this.storage.set('fullbatch_' + batch_id, res.data);
                                _this.config.addToTracker('groups', batch_id);
                            }
                            resolve(res.data);
                        });
                    }
                });
            }
            else {
                var body_form_data = new FormData();
                body_form_data.append('batch_id', batch_id);
                var opt = $this.getUserAuthorizationHeaders();
                $this.http.post($this.config.baseUrl + "groups/getBatchById", body_form_data, opt)
                    .map(function (res) { return res.json(); })
                    .subscribe(function (res) {
                    if (res.status) {
                        _this.storage.set('fullbatch_' + batch_id, res.data);
                        _this.config.addToTracker('groups', batch_id);
                    }
                    resolve(res.data);
                });
            }
        });
    };
    GroupService.prototype.join_remove_batch = function (batch_id, type) {
        var $this = this;
        console.log(batch_id);
        return new Promise(function (resolve) {
            var body_form_data = new FormData();
            body_form_data.append('batch_id', batch_id);
            if (type == 'add') {
                body_form_data.append('type', 'add');
            }
            else if (type == 'remove') {
                body_form_data.append('type', 'remove');
            }
            var opt = $this.getUserAuthorizationHeaders();
            $this.http.post($this.config.baseUrl + "groups/join-batch", body_form_data, opt)
                .map(function (res) { return res.json(); })
                .subscribe(function (res) {
                resolve(res);
            });
        });
    };
    GroupService.prototype.get_batch_tab_value = function (batch_id, current_tab_key, per_page, offset) {
        var $this = this;
        return new Promise(function (resolve) {
            var body_form_data = new FormData();
            body_form_data.append('batch_id', batch_id);
            body_form_data.append('batch_tab', current_tab_key);
            body_form_data.append('per_page', per_page);
            body_form_data.append('offset', offset);
            var opt = $this.getUserAuthorizationHeaders();
            $this.http.post($this.config.baseUrl + "groups/getbatchtabvalue", body_form_data, opt)
                .map(function (res) { return res.json(); })
                .subscribe(function (res) {
                resolve(res);
            });
            // resolve({'current_batch_id':current_batch_id,'current_tab_key':current_tab_key,'per_page':per_page,'offset':offset});
        });
    };
    GroupService.prototype.getUserAuthorizationHeaders = function () {
        var userheaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        userheaders.append('Authorization', this.config.settings.access_token);
        return new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: userheaders });
    };
    GroupService.prototype.setGroupStorage = function (group) {
        var _this = this;
        this.storage.get('allgroups').then(function (allgroups) {
            if (Array.isArray(allgroups) && allgroups) {
                var index = allgroups.findIndex(function (element) {
                    return element.id == group.id;
                });
                if (index != -1) {
                    allgroups[index] = group;
                    _this.storage.set('allgroups', allgroups);
                }
            }
        });
    };
    GroupService.prototype.resetBatchCourse = function (group) {
        var $this = this;
        if (group && group.settings && group.settings.batch_course) {
            if (Array.isArray(group.settings.batch_course)) {
                (group.settings.batch_course).forEach(function (course_id) {
                    $this.config.removeFromTracker('courses', parseInt(course_id));
                    console.log(course_id + ' removed from tracker');
                });
            }
        }
    };
    GroupService.prototype.get_my_batches = function (res) {
        console.log(res);
        var $this = this;
        $this.my_batches = [];
        if (res.status) {
            if (res.data.length) {
                res.data.map(function (x, i) {
                    $this.my_batches.push(x);
                });
            }
        }
        else {
            $this.my_batches = [];
        }
    };
    GroupService = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Http */],
            __WEBPACK_IMPORTED_MODULE_3__config__["a" /* ConfigService */],
            __WEBPACK_IMPORTED_MODULE_2__ionic_storage__["b" /* Storage */]])
    ], GroupService);
    return GroupService;
}());

//# sourceMappingURL=group.js.map

/***/ }),

/***/ 72:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DirectoryPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_forms__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_ionic_angular__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__course_course__ = __webpack_require__(62);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__profile_profile__ = __webpack_require__(22);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__search_search__ = __webpack_require__(61);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_map__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__services_config__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__services_course__ = __webpack_require__(49);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__services_users__ = __webpack_require__(29);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__services_wishlist__ = __webpack_require__(73);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};











var DirectoryPage = /** @class */ (function () {
    function DirectoryPage(navCtrl, config, navParams, nav, modalCtrl, userService, courseService, wishlistService, loadingCtrl) {
        this.navCtrl = navCtrl;
        this.config = config;
        this.navParams = navParams;
        this.nav = nav;
        this.modalCtrl = modalCtrl;
        this.userService = userService;
        this.courseService = courseService;
        this.wishlistService = wishlistService;
        this.loadingCtrl = loadingCtrl;
        this.paged = 1;
        this.isLoggedIn = false;
        this.childCategories = [];
        this.profilePage = __WEBPACK_IMPORTED_MODULE_4__profile_profile__["a" /* ProfilePage */];
        this.coursePage = __WEBPACK_IMPORTED_MODULE_3__course_course__["a" /* CoursePage */];
        this.courses = []; //Course[]=[];
        this.categories = [];
        this.locations = [];
        this.levels = [];
        this.noMoreCoursesAvailable = 0;
        this.searchTerm = '';
        this.searchControl = new __WEBPACK_IMPORTED_MODULE_1__angular_forms__["b" /* FormControl */]();
        this.selectedCategories = [];
        this.selectedInstructors = [];
        this.selectedLocations = [];
        this.selectedLevels = [];
        this.instructors = [];
        this.filters = [];
        this.sortby = '';
        this.searching = false;
        this.activateFilterBlock = false;
    }
    DirectoryPage.prototype.ngOnInit = function () {
        var _this = this;
        this.title = this.config.get_translation('course_directory_title');
        this.subtitle = this.config.get_translation('course_directory_sub_title');
        this.wishlistService.getWishList();
        if ('term_id' in this.navParams.data) {
            this.category = this.navParams.data;
        }
        if ('email' in this.navParams.data) {
            this.instructor = this.navParams.data;
        }
        if ('sortby' in this.navParams.data) {
            this.sortby = this.navParams.get('sortby');
        }
        if (this.category && Object.keys(this.category).length !== 0) {
            this.selectedCategories.push(this.category.term_id);
            var cats = { 'type': 'taxonomy', 'taxonomy': this.category.taxonomy, 'values': this.selectedCategories };
            this.filters.push(cats);
            this.title = this.category.name;
            this.subtitle = this.category.description;
        }
        if (this.instructor && Object.keys(this.instructor).length !== 0) {
            this.filters = [];
            this.selectedInstructors.push(this.instructor.id);
            var insts = { 'type': 'instructors', 'values': this.selectedInstructors };
            this.filters.push(insts);
            this.title = this.instructor.name;
            this.subtitle = this.instructor.sub;
        }
        if (this.config.isLoggedIn) {
            this.userdata = { 'isLoggedIn': this.config.isLoggedIn, 'User': this.config.user };
        }
        if (this.config.directoryFilters.instructors) {
            this.userService.getAllInstructors().subscribe(function (res) {
                if (res) {
                    _this.instructors = res;
                }
            });
        }
        if (this.config.directoryFilters.categories) {
            this.courseService.getAllCourseCategory().subscribe(function (cats) {
                if (cats) {
                    _this.categories = _this.mergeCategories(_this.categories, cats);
                }
            });
        }
        if (this.config.directoryFilters.levels) {
            this.courseService.getAllCourseLevels().subscribe(function (levels) {
                if (levels) {
                    _this.levels = levels;
                }
            });
        }
        if (this.config.directoryFilters.locations) {
            this.courseService.getAllCourseLocations().subscribe(function (locations) {
                if (locations) {
                    _this.locations = locations;
                }
            });
        }
    };
    DirectoryPage.prototype.ionViewDidLoad = function () {
        var _this = this;
        if (this.category && this.categories.length && Object.keys(this.category).length !== 0) {
            for (var i = 0; i < this.categories.length; i++) {
                if (this.categories[i].parent == this.category.term_id) {
                    this.childCategories.push(this.categories[i]);
                }
            }
        }
        this.sortSelectOptions = {
            title: this.config.get_translation('sort_options'),
            okText: this.config.get_translation('okay'),
            cancelText: this.config.get_translation('dismiss'),
        };
        this.setFilteredItems();
        this.searchControl.valueChanges.debounceTime(700).subscribe(function (search) {
            _this.searching = false;
            _this.setFilteredItems();
        });
    };
    DirectoryPage.prototype.loadCategory = function (category) {
        this.category = category;
        this.selectedCategories = [];
        this.filters = [];
        this.searchTerm = '';
        this.paged = 1;
        this.childCategories = [];
        this.selectedCategories.push(this.category.term_id);
        var cats = { 'type': 'taxonomy', 'taxonomy': this.category.taxonomy, 'values': this.selectedCategories };
        console.log(cats);
        this.filters.push(cats);
        this.title = this.category.name;
        this.subtitle = this.category.description;
        for (var i = 0; i < this.categories.length; i++) {
            if (this.categories[i].parent == this.category.term_id) {
                this.childCategories.push(this.categories[i]);
            }
        }
        this.setFilteredItems();
    };
    DirectoryPage.prototype.onSearchInput = function () {
        this.searching = true;
    };
    DirectoryPage.prototype.setFilteredItems = function () {
        var _this = this;
        var loading = this.loadingCtrl.create({
            content: '<img src="assets/images/bubbles.svg">',
            duration: 15000,
            spinner: 'hide',
            showBackdrop: true,
        });
        loading.present();
        if (this.searchTerm.length || this.filters.length || this.sortby.length) {
            var f = { 'search': this.searchTerm, 'filters': this.filters, 'sort': this.sortby, 'paged': 1 };
            this.courseService.filterItems(f).subscribe(function (res) {
                loading.dismiss();
                if (res) {
                    _this.courses = res;
                }
                else {
                    _this.courses = [];
                }
            });
        }
        else {
            var f = { 'search': '', 'filters': [], 'sort': '', 'paged': 1 };
            this.courseService.filterItems(f).subscribe(function (res) {
                loading.dismiss();
                if (res) {
                    _this.courses = res;
                }
                else {
                    _this.courses = [];
                }
            });
        }
    };
    DirectoryPage.prototype.openSearch = function () {
        var modal = this.modalCtrl.create(__WEBPACK_IMPORTED_MODULE_5__search_search__["a" /* SearchPage */]);
        modal.present();
    };
    DirectoryPage.prototype.activateFilters = function () {
        this.activateFilterBlock = true;
    };
    DirectoryPage.prototype.fetchFiltersSorters = function () {
        this.filters = [];
        if (this.selectedCategories) {
            if (this.filters.length) {
                for (var i = 0; i < this.filters.length; i++) {
                    if (this.filters[i].type == 'taxonomy' && this.filters[i].taxonomy == 'course-cat') {
                        this.filters.splice(i, 1);
                    }
                }
            }
            var cats = { 'type': 'taxonomy', 'taxonomy': 'course-cat', 'values': this.selectedCategories };
            this.filters.push(cats);
        }
        if (this.selectedLocations) {
            if (this.filters.length) {
                for (var i = 0; i < this.filters.length; i++) {
                    if (this.filters[i].type == 'taxonomy' && this.filters[i].taxonomy == 'location') {
                        this.filters.splice(i, 1);
                    }
                }
            }
            console.log(this.selectedLocations);
            var cats = { 'type': 'taxonomy', 'taxonomy': 'location', 'values': this.selectedLocations };
            this.filters.push(cats);
        }
        if (this.selectedLevels) {
            if (this.filters.length) {
                for (var i = 0; i < this.filters.length; i++) {
                    if (this.filters[i].type == 'taxonomy' && this.filters[i].taxonomy == 'level') {
                        this.filters.splice(i, 1);
                    }
                }
            }
            var cats = { 'type': 'taxonomy', 'taxonomy': 'level', 'values': this.selectedLevels };
            this.filters.push(cats);
        }
        if (this.free_paid) {
            var free_p = { 'type': 'free', 'values': this.free_paid };
            this.filters.push(free_p);
        }
        if (this.offline) {
            var off = { 'type': 'offline', 'values': this.offline };
            this.filters.push(off);
        }
        if (this.start_date) {
            var off = { 'type': 'start_date', 'values': this.start_date };
            this.filters.push(off);
        }
        if (this.end_date) {
            var off = { 'type': 'end_date', 'values': this.end_date };
            this.filters.push(off);
        }
        if (this.selectedInstructors.length) {
            var insts = { 'type': 'instructors', 'values': this.selectedInstructors };
            this.filters.push(insts);
        }
        var af = { 'search': this.searchTerm, 'filters': this.filters, 'sort': this.sortby };
        return af;
    };
    DirectoryPage.prototype.applyFilters = function () {
        var _this = this;
        var af = this.fetchFiltersSorters();
        var loading = this.loadingCtrl.create({
            content: '<img src="assets/images/bubbles.svg">',
            duration: 15000,
            spinner: 'hide',
            showBackdrop: true,
        });
        loading.present();
        this.courseService.filterItems(af).subscribe(function (res) {
            if (res) {
                _this.courses = res;
            }
            else {
                _this.courses = [];
            }
            loading.dismiss();
        });
        this.paged = 0;
        this.activateFilterBlock = false;
        this.noMoreCoursesAvailable = 0;
    };
    DirectoryPage.prototype.resetFilters = function () {
        this.filters = [];
        this.selectedCategories = [];
        this.selectedInstructors = [];
        this.selectedLocations = [];
        this.selectedLevels = [];
        this.instructors = [];
        this.free_paid = 0;
        this.offline = 0;
        this.start_date = '';
        this.end_date = '';
    };
    DirectoryPage.prototype.closeFilters = function () {
        this.activateFilterBlock = false;
    };
    DirectoryPage.prototype.onSortOptions = function ($event) {
        this.sortby = $event;
        this.applyFilters();
    };
    DirectoryPage.prototype.doInfinite = function (event) {
        var _this = this;
        this.paged++;
        if (this.selectedCategories.length) {
            var cats = { 'type': 'taxonomy', 'taxonomy': 'course-cat', 'values': this.selectedCategories };
            this.filters.push(cats);
        }
        if (this.selectedInstructors.length) {
            var insts = { 'type': 'instructors', 'values': this.selectedInstructors };
            this.filters.push(insts);
        }
        var af = { 'search': this.searchTerm, 'filters': this.filters, 'sort': this.sortby, 'paged': this.paged };
        this.courseService.filterItems(af).subscribe(function (res) {
            if (res != null) {
                console.log(res.length);
                for (var i = 0; i < res.length; i++) {
                    var push = 1;
                    for (var k = 0; k < _this.courses.length; k++) {
                        if (_this.courses[k].id == res[i].id) {
                            push = 0;
                            break;
                        }
                    }
                    if (push) {
                        _this.courses.push(res[i]);
                    }
                }
                if (_this.courses.length < (_this.paged + 1) * _this.config.settings.per_view) {
                    _this.noMoreCoursesAvailable = 0;
                }
            }
            else {
                _this.noMoreCoursesAvailable = 1;
            }
            event.complete();
        });
    };
    DirectoryPage.prototype.mergeCategories = function (catsA, catsB) {
        for (var i = 0; i < catsB.length; i++) {
            var flag = 1;
            for (var j = 0; j < catsA.length; j++) {
                if (catsB[i].term_id == catsA[j].term_id) {
                    flag = 0;
                }
            }
            if (flag) {
                catsA.push(catsB[i]);
            }
        }
        return catsA;
    };
    DirectoryPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-directory',template:/*ion-inline-start:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\pages\directory\directory.html"*/'<ion-header>\n    <ion-navbar  color="transparent" >\n        <ion-buttons start>\n            <button ion-button menuToggle>\n                <ion-icon name="md-menu"></ion-icon>\n            </button>\n        </ion-buttons>\n        <ion-title>{{title}}<span *ngIf="subtitle != \'false\'">{{subtitle}}</span></ion-title>\n            <ion-buttons end>\n                <button ion-button (click)="openSearch()">\n                    <ion-icon name="md-search"></ion-icon>\n                </button>\n            </ion-buttons>\n            <ion-buttons end>\n                <button ion-button [navPush]="profilePage" [navParams]="userdata">\n                    <ion-icon name="md-contact" *ngIf="!config.isLoggedIn"></ion-icon>\n                    <img *ngIf="config.isLoggedIn" [src]="config.user?.avatar">\n                </button>\n            </ion-buttons>\n    </ion-navbar>\n</ion-header>\n<ion-content padding>\n	<div id="filters">\n		<ion-row>\n			<ion-col>\n				<div class="filter_sort_select">\n					<button ion-button block [innerHtml]="this.config.get_translation(\'filter_options\')" (click)="activateFilters()"></button>\n				</div>\n			</ion-col>\n			<ion-col>\n				<div class="filter_sort_select">\n					<ion-item>\n						<ion-select placeholder="{{this.config.get_translation(\'sort_options\')}}" (ionChange)="onSortOptions($event)" [selectOptions]="sortSelectOptions" [(ngModel)]="sortby" okText="{{config.get_translation(\'ok\')}}" cancelText="{{config.get_translation(\'cancel\')}}">\n							<ion-option value="popular">{{this.config.get_translation(\'popular\')}}</ion-option>\n							<ion-option value="recent">{{this.config.get_translation(\'recent\')}}</ion-option>\n							<ion-option value="alphabetical">{{this.config.get_translation(\'alphabetical\')}}</ion-option>\n							<ion-option value="rated">{{this.config.get_translation(\'rated\')}}</ion-option>\n							<ion-option value="start_date">{{this.config.get_translation(\'start_date\')}}</ion-option>\n						</ion-select>\n					</ion-item>\n				</div>\n			</ion-col>\n		</ion-row>\n	</div>\n	<div id="searchbar">\n		<ion-searchbar [(ngModel)]="searchTerm" [formControl]="searchControl" placeholder="{{config.get_translation(\'directory_search_placeholder\')}}" (ionInput)="onSearchInput()"></ion-searchbar>\n	</div>\n	<div *ngIf="childCategories.length">\n        <ion-slides dir="{{config.settings.rtl ? \'rtl\' : undefined }}" id="categories" spaceBetween="0" slidesPerView="3">\n            <ion-slide *ngFor="let category of childCategories" (click)="loadCategory(category)">\n                <ion-card>\n                    <div class="featured_category_block">\n                        <img [src]=category.image />\n                        <div class="category-content">\n                            <div class="category-title">{{category.name}}</div>\n                            <div class="category-subtitle">{{category.count}} Courses</div>\n                        </div>\n                    </div>\n                  </ion-card>\n            </ion-slide>\n        </ion-slides>\n	</div>\n	<div *ngIf="!courses.length">\n		<div class="message" [innerHtml]="this.config.get_translation(\'not_found\')">\n		</div>\n	</div>\n	<div id="all_courses" *ngIf="courses.length">\n		<ion-grid>\n		  <ion-row>\n		    <ion-col col-12 col-sm-6 col-md-6 col-lg-4 col-xl-3 *ngFor="let lcourse of courses">\n		      	<ion-card>\n		            <courseblock [course]="lcourse"></courseblock>\n		        </ion-card>\n		    </ion-col>\n		  </ion-row>\n		</ion-grid>\n        \n        <ion-infinite-scroll *ngIf="!noMoreCoursesAvailable" (ionInfinite)="doInfinite($event)">\n           <ion-infinite-scroll-content></ion-infinite-scroll-content>\n        </ion-infinite-scroll>\n    </div>\n</ion-content>\n<div id="filter_options" *ngIf="activateFilterBlock">\n	<h3>{{this.config.get_translation(\'filter_options\')}}</h3>\n	<ion-list>\n		<ion-item *ngIf="this.config.directoryFilters.categories">\n			<ion-label>{{this.config.get_translation(\'select_category\')}}</ion-label>\n			<ion-select [(ngModel)]="selectedCategories"   multiple="true" okText="{{config.get_translation(\'ok\')}}" cancelText="{{config.get_translation(\'cancel\')}}">\n				<ion-option *ngFor="let category of categories" [value]="category.term_id" [innerHtml]="category.name"></ion-option>\n			</ion-select>\n		</ion-item>\n		<ion-item *ngIf="this.config.directoryFilters.locations">\n			<ion-label>{{this.config.get_translation(\'select_location\')}}</ion-label>\n			<ion-select [(ngModel)]="selectedLocations"   multiple="true" okText="{{config.get_translation(\'ok\')}}" cancelText="{{config.get_translation(\'cancel\')}}">\n				<ion-option *ngFor="let category of locations" [value]="category.term_id" [innerHtml]="category.name"></ion-option>\n			</ion-select>\n		</ion-item>\n		<ion-item *ngIf="this.config.directoryFilters.levels">\n			<ion-label>{{this.config.get_translation(\'select_level\')}}</ion-label>\n			<ion-select [(ngModel)]="selectedLevels"   multiple="true" okText="{{config.get_translation(\'ok\')}}" cancelText="{{config.get_translation(\'cancel\')}}">\n				<ion-option *ngFor="let category of levels" [value]="category.term_id" [innerHtml]="category.name"></ion-option>\n			</ion-select>\n		</ion-item>\n		<ion-item *ngIf="this.config.directoryFilters.instructors">\n			<ion-label>{{this.config.get_translation(\'select_instructor\')}}</ion-label>\n			<ion-select [(ngModel)]="selectedInstructors"  multiple="true" okText="{{config.get_translation(\'ok\')}}" cancelText="{{config.get_translation(\'cancel\')}}">\n				<ion-option *ngFor="let instructor of instructors" [value]="instructor.id" [innerHtml]="instructor.name"></ion-option>\n			</ion-select>\n		</ion-item>\n		<ion-item *ngIf="this.config.directoryFilters.free_paid">\n			<ion-label>{{this.config.get_translation(\'free_paid\')}}</ion-label>\n			<ion-select [(ngModel)]="free_paid" okText="{{config.get_translation(\'ok\')}}" cancelText="{{config.get_translation(\'cancel\')}}">\n				<ion-option [value]="0" [innerHtml]="this.config.get_translation(\'all\')"></ion-option>\n				<ion-option [value]="S" [innerHtml]="this.config.get_translation(\'all_free\')"></ion-option>\n				<ion-option [value]="H" [innerHtml]="this.config.get_translation(\'all_paid\')"></ion-option>\n			</ion-select>\n		</ion-item>\n		<ion-item *ngIf="this.config.directoryFilters.online_offline">\n			<ion-label>{{this.config.get_translation(\'select_online_offline\')}}</ion-label>\n			<ion-select [(ngModel)]="offline" okText="{{config.get_translation(\'ok\')}}" cancelText="{{config.get_translation(\'cancel\')}}">\n				<ion-option [value]="0" [innerHtml]="this.config.get_translation(\'all\')"></ion-option>\n				<ion-option [value]="S" [innerHtml]="this.config.get_translation(\'offline\')"></ion-option>\n				<ion-option [value]="H" [innerHtml]="this.config.get_translation(\'online\')"></ion-option>\n			</ion-select>\n		</ion-item>\n		<ion-item *ngIf="this.config.directoryFilters.start_date">\n			<ion-label>{{this.config.get_translation(\'after_start_date\')}}</ion-label>\n			<ion-datetime displayFormat="YYYY-MM-DD" [(ngModel)]="start_date"></ion-datetime>\n		</ion-item>\n		<ion-item *ngIf="this.config.directoryFilters.start_date">\n			<ion-label>{{this.config.get_translation(\'before_start_date\')}}</ion-label>\n			<ion-datetime displayFormat="YYYY-MM-DD" [(ngModel)]="end_date"></ion-datetime>\n		</ion-item>\n		\n	</ion-list>\n	<button ion-button block id="apply_filters" (click)="applyFilters()">{{this.config.get_translation(\'apply_filters\')}}</button>\n	<ion-row>\n		<ion-col>\n			<button ion-button clear  icon-only color="white" (click)="resetFilters()">\n				<ion-icon name="md-refresh"></ion-icon>\n			</button>\n		</ion-col>\n		<ion-col>\n			<button ion-button clear icon-only color="white" (click)="closeFilters()">\n				<ion-icon name="md-close"></ion-icon>\n			</button>\n		</ion-col>\n	</ion-row>\n	\n</div>\n'/*ion-inline-end:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\pages\directory\directory.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_7__services_config__["a" /* ConfigService */],
            __WEBPACK_IMPORTED_MODULE_2_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_2_ionic_angular__["l" /* ModalController */],
            __WEBPACK_IMPORTED_MODULE_9__services_users__["a" /* UserService */],
            __WEBPACK_IMPORTED_MODULE_8__services_course__["a" /* CourseService */],
            __WEBPACK_IMPORTED_MODULE_10__services_wishlist__["a" /* WishlistService */],
            __WEBPACK_IMPORTED_MODULE_2_ionic_angular__["j" /* LoadingController */]])
    ], DirectoryPage);
    return DirectoryPage;
}());

//# sourceMappingURL=directory.js.map

/***/ }),

/***/ 73:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return WishlistService; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__ionic_storage__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__config__ = __webpack_require__(3);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var WishlistService = /** @class */ (function () {
    function WishlistService(storage, config) {
        this.storage = storage;
        this.config = config;
        this.wishlist = [];
    }
    WishlistService.prototype.getWishList = function () {
        var _this = this;
        console.log('fetching wishlist...');
        this.storage.get('wishlist').then(function (res) {
            if (res) {
                _this.wishlist = res;
            }
            else {
                _this.wishlist = [];
            }
            console.log('fetching complete..');
        });
    };
    WishlistService.prototype.addToWishlist = function (course) {
        if (!this.wishlist) {
            this.wishlist = [];
        }
        if (!this.checkInWishList(course)) {
            this.wishlist.push(course);
            this.storage.set('wishlist', this.wishlist);
        }
    };
    WishlistService.prototype.removeFromWishList = function (course) {
        if (this.wishlist && this.wishlist.length) {
            var key = this.wishlist.indexOf(course);
            this.wishlist.splice(key, 1);
            this.storage.set('wishlist', this.wishlist);
        }
    };
    WishlistService.prototype.checkInWishList = function (course) {
        if (this.wishlist && this.wishlist.length) {
            for (var i = 0; i < this.wishlist.length; i++) {
                if (this.wishlist[i].id == course.id) {
                    return true;
                }
            }
        }
        return false;
    };
    WishlistService = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__ionic_storage__["b" /* Storage */],
            __WEBPACK_IMPORTED_MODULE_2__config__["a" /* ConfigService */]])
    ], WishlistService);
    return WishlistService;
}());

//# sourceMappingURL=wishlist.js.map

/***/ }),

/***/ 87:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ChatService; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ionic_storage__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__config__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_firebase__ = __webpack_require__(315);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_firebase___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_firebase__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






var ChatService = /** @class */ (function () {
    function ChatService(http, config, storage) {
        this.http = http;
        this.config = config;
        this.storage = storage;
        this.myChats = [];
        this.users = [];
        this.current_index = 0;
        this.typing_user = {};
        this.typing_event = [];
        this.notifications_added_check = 0;
        this.child_added_on_chat_key = []; // if already added then not add again
        this.searched_users = [];
        this.child_event_chat_keys = []; // array of child added on chat keys if already have then not add again
    }
    ChatService.prototype.fetchUser = function (user_id) {
        var _this = this;
        return new Promise(function (resolve) {
            _this.storage.get('firebase_user_' + user_id).then(function (user) {
                if (user) {
                    resolve(user);
                }
                else {
                    __WEBPACK_IMPORTED_MODULE_5_firebase___default.a.database().ref("/users/" + user_id + "/base").once('value', function (userSnapshot) {
                        _this.storage.set('firebase_user_' + user_id, userSnapshot.val());
                        resolve(userSnapshot.val());
                    });
                }
            });
        });
    };
    ChatService.prototype.fetchMyChats = function (forceRefresh, data) {
        var _this = this;
        var allmyChats = [];
        var $this = this;
        return new Promise(function (res) {
            $this.set_current_user().then(function (current_user_id) {
                if (forceRefresh == 'ngoninit' || forceRefresh == 'doRefresh') {
                    $this.last_entry = 0;
                }
                if ($this.last_entry) {
                    __WEBPACK_IMPORTED_MODULE_5_firebase___default.a.database()
                        .ref("/users/" + current_user_id + "/chats").orderByChild('lastUpdate').endAt($this.last_entry.lastUpdate).limitToLast($this.config.chat.chat_number)
                        .once("value", function (snapshot) {
                        snapshot.forEach(function (mychat) {
                            allmyChats.push(new Promise(function (resolve) {
                                __WEBPACK_IMPORTED_MODULE_5_firebase___default.a.database()
                                    .ref("/chats/" + mychat.key + "/messages").limitToLast(1)
                                    .on("child_added", function (mychat_snapshot) {
                                    if ($this.child_event_chat_keys.indexOf(mychat.key) < 0) {
                                        $this.child_event_chat_keys.push(mychat.key);
                                    }
                                    var message = mychat_snapshot.val();
                                    $this.fetchUser(message.user).then(function (u) {
                                        message.user = u;
                                        message.message_key = mychat_snapshot.key;
                                        var data = { key: mychat.key, allMessages: [message] };
                                        var t = 'key_not_exist'; // cheking for key exist or not
                                        if ($this.myChats.length) {
                                            $this.myChats.map(function (x, i) {
                                                if (x.key == mychat.key) {
                                                    var check_message_exist_1 = 'message not found';
                                                    $this.myChats[i].allMessages.map(function (y, j) {
                                                        if (y.message_key == message.message_key) {
                                                            check_message_exist_1 = 'message found';
                                                        }
                                                    });
                                                    if (check_message_exist_1 === 'message not found') {
                                                        $this.myChats[i].allMessages.unshift(message);
                                                        $this.myChats[i].lastUpdate = message.time;
                                                    }
                                                    t = 'key_exist';
                                                }
                                            });
                                            if (t == 'key_not_exist') {
                                                $this.myChats.push(data);
                                                var index = $this.get_Current_index(data.key);
                                                $this.myChats[index].lastUpdate = message.time;
                                            }
                                        }
                                        else {
                                            $this.myChats.unshift(data);
                                            var index = $this.get_Current_index(data.key);
                                            $this.myChats[index].lastUpdate = message.time;
                                        }
                                        $this.last_entry = $this.myChats[$this.myChats.length - 1]; // end key
                                        resolve('success resolve');
                                    });
                                });
                            }));
                            Promise.all(allmyChats).then(function () {
                                res($this.myChats);
                            });
                        });
                    });
                }
                else {
                    $this.myChats = [];
                    __WEBPACK_IMPORTED_MODULE_5_firebase___default.a.database()
                        .ref("/users/" + current_user_id + "/chats").orderByChild('lastUpdate').limitToLast($this.config.chat.chat_number)
                        .once("value", function (snapshot) {
                        snapshot.forEach(function (mychat) {
                            allmyChats.push(new Promise(function (resolve) {
                                if ($this.myChats.length) {
                                    $this.myChats.map(function (x, i) {
                                        if (x.key == mychat.key) {
                                            resolve('key already exist no child added');
                                        }
                                    });
                                }
                                __WEBPACK_IMPORTED_MODULE_5_firebase___default.a.database()
                                    .ref("/chats/" + mychat.key + "/messages").limitToLast(1)
                                    .on("child_added", function (mychat_snapshot) {
                                    if ($this.child_event_chat_keys.indexOf(mychat.key) < 0) {
                                        $this.child_event_chat_keys.push(mychat.key);
                                    }
                                    var message = mychat_snapshot.val();
                                    $this.fetchUser(message.user).then(function (u) {
                                        message.user = u;
                                        message.message_key = mychat_snapshot.key;
                                        var data = { key: mychat.key, allMessages: [message] };
                                        var t = 'key_not_exist'; // cheking for key exist or not
                                        if ($this.myChats.length) {
                                            $this.myChats.map(function (x, i) {
                                                if (x.key == mychat.key) {
                                                    var check_message_exist_2 = 'message not found';
                                                    $this.myChats[i].allMessages.map(function (y, j) {
                                                        if (y.message_key == message.message_key) {
                                                            check_message_exist_2 = 'message found';
                                                        }
                                                    });
                                                    if (check_message_exist_2 === 'message not found') {
                                                        $this.myChats[i].allMessages.unshift(message);
                                                        $this.myChats[i].lastUpdate = message.time;
                                                    }
                                                    t = 'key_exist';
                                                }
                                            });
                                            if (t == 'key_not_exist') {
                                                $this.myChats.unshift(data);
                                                var index = $this.get_Current_index(data.key);
                                                $this.myChats[index].lastUpdate = message.time;
                                            }
                                        }
                                        else {
                                            $this.myChats.unshift(data);
                                            var index = $this.get_Current_index(data.key);
                                            $this.myChats[index].lastUpdate = message.time;
                                        }
                                        $this.last_entry = $this.myChats[$this.myChats.length - 1]; // end key
                                        resolve('success resolve');
                                    });
                                });
                            }));
                            Promise.all(allmyChats).then(function () {
                                res($this.myChats);
                            });
                        });
                        /* start binding child with lastUpdate of chat */
                        __WEBPACK_IMPORTED_MODULE_5_firebase___default.a.database()
                            .ref("/users/" + current_user_id + "/chats").orderByChild('lastUpdate')
                            .on("child_changed", function (mychat) {
                            var index = _this.get_Current_index(mychat.key);
                            if (index < 0) {
                                var data_1 = { key: mychat.key, allMessages: [] };
                                __WEBPACK_IMPORTED_MODULE_5_firebase___default.a.database()
                                    .ref("/chats/" + mychat.key + "/messages").limitToLast(1)
                                    .on("child_added", function (mychat_snapshot) {
                                    var message = mychat_snapshot.val();
                                    $this.fetchUser(message.user).then(function (u) {
                                        message.user = u;
                                        message.message_key = mychat_snapshot.key;
                                        var data = { key: mychat.key, allMessages: [message] };
                                        var t = 'key_not_exist'; // cheking for key exist or not
                                        if ($this.myChats.length) {
                                            $this.myChats.map(function (x, i) {
                                                if (x.key == mychat.key) {
                                                    var check_message_exist_3 = 'message not found';
                                                    $this.myChats[i].allMessages.map(function (y, j) {
                                                        if (y.message_key == message.message_key) {
                                                            check_message_exist_3 = 'message found';
                                                        }
                                                    });
                                                    if (check_message_exist_3 === 'message not found') {
                                                        $this.myChats[i].allMessages.unshift(message);
                                                        $this.myChats[i].lastUpdate = message.time;
                                                    }
                                                    t = 'key_exist';
                                                }
                                            });
                                            if (t == 'key_not_exist') {
                                                $this.myChats.unshift(data);
                                                $this.myChats[0].lastUpdate = message.time;
                                            }
                                        }
                                        else {
                                            $this.myChats.unshift(data);
                                            $this.myChats[0].lastUpdate = message.time;
                                        }
                                        $this.last_entry = $this.myChats[$this.myChats.length - 1]; // end key
                                    });
                                });
                            }
                            else {
                                $this.myChats = $this.array_move($this.myChats, index, 0);
                                $this.current_index = 0;
                                $this.get_last_update(mychat.key).then(function (update) {
                                    $this.myChats[0].lastUpdate = update;
                                });
                            }
                        });
                        /* End of binding lastupdate of chat key */
                    });
                }
            });
        });
    };
    ChatService.prototype.get_last_update = function (current_chat_key) {
        return new Promise(function (resolve) {
            __WEBPACK_IMPORTED_MODULE_5_firebase___default.a.database()
                .ref("/chats/" + current_chat_key + "/lastUpdate")
                .once("value", function (snapdata) {
                var data = snapdata.val();
                resolve(data);
            });
        });
    };
    /*
        this will movr array element to one position to another
    */
    ChatService.prototype.array_move = function (arr, old_index, new_index) {
        if (new_index >= arr.length) {
            var k = new_index - arr.length + 1;
            while (k--) {
                arr.push(undefined);
            }
        }
        arr.splice(new_index, 0, arr.splice(old_index, 1)[0]);
        return arr;
    };
    ;
    /*
        Fetch messages by chat_id and activity(on init, loadmore)
    */
    ChatService.prototype.fetchMyMessages = function (activity, current_chat_key) {
        var $this = this;
        $this.current_index = this.get_Current_index(current_chat_key);
        //$this.myChats[$this.current_index].unseen=0;// unseen mssage
        var allMessagePromise = [];
        if (activity == 'doRefresh' || activity == 'ngoninit') {
            $this.myChats[$this.current_index] = { key: current_chat_key, allMessages: [] };
        }
        $this.myChats[$this.current_index].unseen = 0;
        return new Promise(function (res) {
            //Verify if Child Added is connected with this chat.
            $this.child_added_event_handler(current_chat_key).then(function (ch_response) {
                $this.get_all_chat_key_users(current_chat_key).then(function (users_resolve) { }); // fetch user of chat key 
                if (activity == 'doRefresh' || activity == 'ngoninit') {
                    //allMessagePromise.push(new Promise(function(resolveAnonymous) {
                    __WEBPACK_IMPORTED_MODULE_5_firebase___default.a.database()
                        .ref("/chats/" + current_chat_key + "/messages").orderByChild('time').limitToLast($this.config.chat.message_number)
                        .once("value", function (mychat_snapshot) {
                        // if(mychat_snapshot.val()==null){
                        // 	resolveAnonymous();
                        // }else{
                        Object.keys(mychat_snapshot.val()).forEach(function (key) {
                            var message = mychat_snapshot.val()[key];
                            allMessagePromise.push(new Promise(function (resolve) {
                                $this.fetchUser(message.user).then(function (u) {
                                    message.user = u;
                                    message.message_key = key;
                                    var t = 'key_not_exist'; // cheking for key exist or not
                                    if ($this.myChats.length) {
                                        if ($this.current_index >= 0) {
                                            var check_message_exist_4 = 'message not found';
                                            $this.myChats[$this.current_index].allMessages.map(function (eachMessage, eachIndex) {
                                                if ($this.myChats[$this.current_index].allMessages[eachIndex].message_key == message.message_key) {
                                                    check_message_exist_4 = 'messsage found';
                                                }
                                            });
                                            if (check_message_exist_4 == 'message not found') {
                                                $this.myChats[$this.current_index].allMessages.unshift(message);
                                                var m_len = $this.myChats[$this.current_index].allMessages.length;
                                                $this.myChats[$this.current_index].lastUpdate = $this.myChats[$this.current_index].allMessages[m_len - 1].time;
                                            }
                                        }
                                    }
                                    //resolveAnonymous();	
                                    resolve();
                                });
                            }));
                        });
                        Promise.all(allMessagePromise).then(function () {
                            res();
                        });
                        //}
                    });
                    //}));
                }
                if (activity == 'loadMoreMessages') {
                    /*
                        get last index then proceed
                    */
                    var message_length = ($this.myChats[$this.current_index].allMessages).length;
                    var last_message_1 = $this.myChats[$this.current_index].allMessages[message_length - 1];
                    var message_count_1 = 0;
                    allMessagePromise.push(new Promise(function (resolveAnonymous, reject) {
                        __WEBPACK_IMPORTED_MODULE_5_firebase___default.a.database()
                            .ref("/chats/" + current_chat_key + "/messages").orderByChild('time').endAt(last_message_1.time).limitToLast($this.config.chat.message_number)
                            .once("value", function (mychat_snapshot) {
                            if (mychat_snapshot.val() == null) {
                                resolveAnonymous();
                            }
                            else {
                                /*
                                reverse the keys then proceed firebase gives in reverse order
                                */
                                var keys = Object.keys(mychat_snapshot.val());
                                message_count_1 = keys.length;
                                var reverse_keys = keys.reverse();
                                reverse_keys.forEach(function (key) {
                                    var message = mychat_snapshot.val()[key];
                                    allMessagePromise.push(new Promise(function (resolve) {
                                        $this.fetchUser(message.user).then(function (u) {
                                            message.user = u;
                                            message.message_key = key;
                                            var t = 'key_not_exist'; // cheking for key exist or not
                                            if ($this.myChats.length) {
                                                if ($this.current_index >= 0) {
                                                    var check_message_exist_5 = 'message not found';
                                                    $this.myChats[$this.current_index].allMessages.map(function (eachMessage, eachIndex) {
                                                        if ($this.myChats[$this.current_index].allMessages[eachIndex].message_key == message.message_key) {
                                                            check_message_exist_5 = 'messsage found';
                                                        }
                                                    });
                                                    if (check_message_exist_5 == 'message not found') {
                                                        $this.myChats[$this.current_index].allMessages.push(message);
                                                    }
                                                }
                                            }
                                            resolveAnonymous();
                                            resolve();
                                        });
                                    }));
                                });
                            }
                        });
                    }));
                    Promise.all(allMessagePromise).then(function () {
                        res(message_count_1);
                    });
                }
            });
        });
    };
    ChatService.prototype.reverseObject = function (object) {
        var newObject = {};
        var keys = [];
        for (var key in object) {
            keys.push(key);
        }
        for (var i = keys.length - 1; i >= 0; i--) {
            var value = object[keys[i]];
            newObject[keys[i]] = value;
        }
        return newObject;
    };
    /*
        get all chat_key users
    */
    ChatService.prototype.get_all_chat_key_users = function (current_chat_key) {
        var $this = this;
        $this.current_index = this.get_Current_index(current_chat_key);
        var all_user_promise = [];
        $this.myChats[$this.current_index]['chat_users'] = [];
        return new Promise(function (res) {
            __WEBPACK_IMPORTED_MODULE_5_firebase___default.a.database()
                .ref("/chats/" + current_chat_key + "/users")
                .on("value", function (mychat_snapshot) {
                Object.keys(mychat_snapshot.val()).forEach(function (key) {
                    all_user_promise.push(new Promise(function (resolve) {
                        $this.fetchUser(key).then(function (u) {
                            $this.myChats[$this.current_index]['chat_users'].push(u);
                            resolve();
                        });
                    }));
                    Promise.all(all_user_promise).then(function () {
                        res('users set to chat_id');
                    });
                });
            });
        });
    };
    /*
        Get current index of any chat_id in my_chats array
    */
    ChatService.prototype.get_Current_index = function (current_chat_key) {
        var index = -1;
        if (this.myChats.length) {
            this.myChats.map(function (x, i) {
                if (x.key == current_chat_key) {
                    index = i;
                }
            });
        }
        return index;
    };
    /*
        send message to chat_id
    */
    ChatService.prototype.sendMessageService = function (messageObj, current_chat_key) {
        var $this = this;
        return new Promise(function (res) {
            $this.set_current_user().then(function (current_user_id) {
                /* creating sending object*/
                var obj = {
                    time: Date.now(),
                    user: current_user_id,
                    message: messageObj.text_message
                };
                if (messageObj.attachment && messageObj.attachment_type) {
                    obj.attachment = messageObj.attachment;
                    obj.attachment_type = messageObj.attachment_type;
                }
                __WEBPACK_IMPORTED_MODULE_5_firebase___default.a.database().ref("/chats/" + current_chat_key + "/messages").push(obj).then(function () {
                    __WEBPACK_IMPORTED_MODULE_5_firebase___default.a.database().ref("/users/" + current_user_id + "/chats/" + current_chat_key + "/lastUpdate").set(Date.now()).then(function () {
                        __WEBPACK_IMPORTED_MODULE_5_firebase___default.a.database().ref("/chats/" + current_chat_key + "/lastUpdate").set(Date.now()).then(function () {
                            res();
                        });
                    });
                });
            });
        });
    };
    ChatService.prototype.uploadChatAttachment = function (file) {
        var $this = this;
        return new Promise(function (resolve) {
            // for body form set 
            var body_form_data = new FormData();
            body_form_data.append('file', file);
            var opt = $this.getUserAuthorizationHeaders();
            $this.http.post($this.config.baseUrl + "user/firebase/attachment/", body_form_data, opt)
                .map(function (res) { return res.json(); }).subscribe(function (res) {
                if (res.status) {
                    resolve(res.uploaded_data);
                }
                else {
                    resolve(res.uploaded_data);
                }
            });
        });
    };
    /*
         set current user as current chat typing
    */
    ChatService.prototype.isTypingService = function (current_chat_key, status) {
        var $this = this;
        return new Promise(function (resolve) {
            $this.set_current_user().then(function (current_user_id) {
                if (status) {
                    __WEBPACK_IMPORTED_MODULE_5_firebase___default.a.database().ref("/chats/" + current_chat_key + "/typing").set(current_user_id).then(function (snap) {
                        resolve();
                    });
                }
                else {
                    __WEBPACK_IMPORTED_MODULE_5_firebase___default.a.database().ref("/chats/" + current_chat_key + "/typing").set(0).then(function (snap) {
                        resolve();
                    });
                }
            });
        });
    };
    /*
        add event on chat id
        if already added then not add
    */
    ChatService.prototype.userTyping = function (current_chat_key) {
        var _this = this;
        return new Promise(function (resolve) {
            if ((_this.typing_event.indexOf(current_chat_key) < 0)) {
                _this.typing_event.push(current_chat_key);
                __WEBPACK_IMPORTED_MODULE_5_firebase___default.a.database()
                    .ref("/chats/" + current_chat_key + "/typing")
                    .on("value", function (snapshot) {
                    if (snapshot.val() != 0) {
                        _this.fetchUser(snapshot.val()).then(function (user) {
                            _this.myChats[_this.current_index].typing = user;
                            resolve(user);
                        });
                    }
                    else {
                        _this.myChats[_this.current_index].typing = {};
                        resolve({});
                    }
                });
            }
            else {
                resolve({});
            }
        });
    };
    /*
        create new user
        create chat
        create notification to all admin
    */
    ChatService.prototype.addNewChat = function (new_user_obj) {
        var $this = this;
        return new Promise(function (resolve) {
            var user = {
                'email': new_user_obj.chat_email,
                'id': 'new user',
                'image': 'assets/images/chat_user.png',
                'name': new_user_obj.chat_name,
                'status': 1,
                'type': 'guest' // here use type of user
            };
            __WEBPACK_IMPORTED_MODULE_5_firebase___default.a.database().ref("/users").push({
                'base': user
            }).then(function (value) {
                user.id = value.key; //new creted user id
                __WEBPACK_IMPORTED_MODULE_5_firebase___default.a.database().ref("/users/" + user.id + "/").set(user).then(function (new_value) {
                    // some onDisconnect operational event 
                    __WEBPACK_IMPORTED_MODULE_5_firebase___default.a.database().ref("/users/" + user.id + "/status").onDisconnect().set(0);
                    __WEBPACK_IMPORTED_MODULE_5_firebase___default.a.database().ref("/users/" + user.id + "/lastActive").onDisconnect().set(Date.now());
                    __WEBPACK_IMPORTED_MODULE_5_firebase___default.a.database().ref("/users/" + user.id + "/base/status").onDisconnect().set(0);
                    __WEBPACK_IMPORTED_MODULE_5_firebase___default.a.database().ref("/users/" + user.id + "/base/lastActive").onDisconnect().set(Date.now());
                    //set base->id=new created user id and new chat assign
                    __WEBPACK_IMPORTED_MODULE_5_firebase___default.a.database().ref("/users/" + user.id + "/base/").set(user).then(function (new_value) {
                        var args = {
                            'type': 'presale',
                            'primary_id': '0'
                        };
                        // this will create  new chat for new user
                        $this.new_chat(args, user, new_user_obj).then(function (rvalue) {
                            if (rvalue.hasOwnProperty('chat_key') && rvalue.chat_key) {
                                __WEBPACK_IMPORTED_MODULE_5_firebase___default.a.database().ref("/users/" + user.id + "/chats/" + rvalue.chat_key).set({
                                    'lastUpdate': Date.now(),
                                    'primary_id': 'primary_id_define',
                                    'time': Date.now(),
                                    'type': 'presale'
                                }).then(function (v) {
                                    // now push presale/personal (any)  chats push
                                    __WEBPACK_IMPORTED_MODULE_5_firebase___default.a.database().ref("/" + args.type + "/chats/").push({
                                        'key': rvalue.chat_key,
                                        'time': Date.now(),
                                        'user': user.id,
                                        'type': 'presale'
                                    }).then(function (pres) {
                                        // now make notification
                                        var noti_obj = {
                                            'chat_id': rvalue.chat_key,
                                            'sender': user.id,
                                            'type': 'chat_invite',
                                            'status': 0
                                        };
                                        var notified_admin_ids = $this.config.chat.chat_agents;
                                        // for all admin will be notified
                                        if (notified_admin_ids.length) {
                                            var notification_all_users_p_1 = []; // for all promise check if every admin notified or not.
                                            notified_admin_ids.map(function (admin_id, i) {
                                                notification_all_users_p_1.push($this.create_new_notification(noti_obj, admin_id).then(function (nk_obj) {
                                                }));
                                            });
                                            Promise.all(notification_all_users_p_1).then(function (values) {
                                                //console.log('resolved with notification, presale/general ,new user,chat push , new message');
                                                resolve({ 'chat_key': rvalue.chat_key, 'user': user });
                                            });
                                        }
                                    });
                                });
                            }
                        });
                    });
                });
            });
        });
    };
    /*
        non logged in
        create new chat id in chat table
        push first message in chat_id
    */
    ChatService.prototype.new_chat = function (args, user, new_user_obj) {
        return new Promise(function (resolve) {
            var _a;
            __WEBPACK_IMPORTED_MODULE_5_firebase___default.a.database().ref("/chats").push({
                time: Date.now(),
                lastUpdate: Date.now(),
                author: user.id,
                primary_id: args.primary_id,
                type: args.type,
                typing: 0,
                users: (_a = {},
                    _a[user.id] = Date.now(),
                    _a),
                messages: ''
            }).then(function (ck) {
                __WEBPACK_IMPORTED_MODULE_5_firebase___default.a.database().ref("/chats/" + ck.key + "/messages").push({
                    'message': new_user_obj.chat_message,
                    'time': Date.now(),
                    'user': user.id
                }).then(function (mk) {
                    resolve({ 'chat_key': ck.key, 'message_key': mk.key });
                });
            });
        });
    };
    /*
        Logged in user: start new chat then invite users
        non logged_in user will make notification to agent with chat id and invitatio
    */
    ChatService.prototype.start_new_chat = function (user, args) {
        var $this = this;
        return new Promise(function (resolve) {
            var _a;
            var time = Date.now();
            __WEBPACK_IMPORTED_MODULE_5_firebase___default.a.database().ref("/chats").push({
                'time': Date.now(),
                'lastUpdate': Date.now(),
                'author': user.id,
                'primary_id': args.primary_id,
                'type': args.type,
                'typing': 0,
                'users': (_a = {},
                    _a[user.id] = Date.now(),
                    _a),
                messages: ''
            }).then(function (chat_key) {
                //console.log('Here is our new chat_key:'+chat_key);
                __WEBPACK_IMPORTED_MODULE_5_firebase___default.a.database().ref("/users/" + user.id + "/chats/" + chat_key.key).set({
                    'lastUpdate': Date.now(),
                    'primary_id': args.primary_id,
                    'time': Date.now(),
                    'type': args.type
                }).then(function (result) {
                    /* now make notification if user nonLoggedIn */
                    if (!$this.config.isLoggedIn) {
                        var noti_obj_1 = {
                            'chat_id': chat_key.key,
                            'sender': user.id,
                            'type': 'chat_invite',
                            'status': 0
                        };
                        var notified_admin_ids = $this.config.chat.chat_agents;
                        notified_admin_ids.map(function (admin_id, i) {
                            $this.create_new_notification(noti_obj_1, admin_id).then(function (nk_obj) {
                            });
                        });
                    }
                    /* End of making notification to admin/agents  */
                    //console.log('chat_key');
                    resolve(chat_key);
                });
            });
        });
    };
    ChatService.prototype.start_new_chat_with_member = function (user, args, member_id) {
        var $this = this;
        return new Promise(function (resolve) {
            var _a;
            var time = Date.now();
            __WEBPACK_IMPORTED_MODULE_5_firebase___default.a.database().ref("/chats").push({
                'time': Date.now(),
                'lastUpdate': Date.now(),
                'author': user.id,
                'primary_id': args.primary_id,
                'type': args.type,
                'typing': 0,
                'users': (_a = {},
                    _a[user.id] = Date.now(),
                    _a[member_id] = Date.now(),
                    _a),
                messages: ''
            }).then(function (chat_key) {
                // console.log('chat_key');
                __WEBPACK_IMPORTED_MODULE_5_firebase___default.a.database().ref("/users/" + user.id + "/chats/" + chat_key.key).set({
                    'lastUpdate': Date.now(),
                    'primary_id': args.primary_id,
                    'time': Date.now(),
                    'type': args.type
                }).then(function (result) {
                    __WEBPACK_IMPORTED_MODULE_5_firebase___default.a.database().ref("/users/" + member_id + "/chats/" + chat_key.key).set({
                        'lastUpdate': Date.now(),
                        'primary_id': args.primary_id,
                        'time': Date.now(),
                        'type': args.type
                    }).then(function (result) {
                        // console.log('result');
                        resolve(chat_key);
                    });
                });
            });
        });
    };
    /*
        create notification to admin_id notification table
    */
    ChatService.prototype.create_new_notification = function (noti_obj, admin_id) {
        return new Promise(function (resolve) {
            __WEBPACK_IMPORTED_MODULE_5_firebase___default.a.database().ref("/notifications/" + admin_id + "/").push({
                'chat_id': noti_obj.chat_id,
                'sender': noti_obj.sender,
                'status': 0,
                'time': Date.now(),
                'type': noti_obj.type
            }).then(function (nk) {
                //console.log('create_new_notification');
                resolve({ 'notification_key': nk.key });
            });
        });
    };
    /*
        set current user if user logged
        or  non logged(in case of user present in storage)
        + return user object
    */
    ChatService.prototype.set_current_user = function () {
        var _this = this;
        return new Promise(function (resolve) {
            var current_user_id = 0; // set here user for both case:{logged_in} and {non logged_in}
            // resolve(current_user_id);
            if (_this.config.isLoggedIn) {
                current_user_id = _this.config.user.id;
                resolve(current_user_id);
            }
            else {
                _this.storage.get('non_logged_in').then(function (result) {
                    if (result) {
                        current_user_id = result.user.id;
                        _this.config.user = result.user;
                        resolve(current_user_id);
                    }
                });
            }
        });
    };
    /*
    check if child_added on chat_key
        if yes resolve()
        if not then add child_added
    */
    ChatService.prototype.child_added_event_handler = function (current_chat_key) {
        var _this = this;
        var $this = this;
        return new Promise(function (res) {
            if ($this.child_event_chat_keys.indexOf(current_chat_key) >= 0) {
                res('child event already added');
            }
            else {
                $this.child_event_chat_keys.push(current_chat_key);
                $this.current_index = _this.get_Current_index(current_chat_key); // get current index of chat_id in mychat array
                __WEBPACK_IMPORTED_MODULE_5_firebase___default.a.database()
                    .ref("/chats/" + current_chat_key + "/messages").limitToLast(1)
                    .on("child_added", function (mychat_snapshot) {
                    var message = mychat_snapshot.val();
                    $this.fetchUser(message.user).then(function (u) {
                        message.user = u;
                        message.message_key = mychat_snapshot.key;
                        var data = { key: current_chat_key, allMessages: [message] };
                        var t = 'key_not_exist'; // cheking for key exist or not
                        if ($this.myChats.length) {
                            $this.myChats.map(function (x, i) {
                                if (x.key == current_chat_key) {
                                    var check_message_exist_6 = 'message not found';
                                    $this.myChats[i].allMessages.map(function (y, j) {
                                        if (y.message_key == message.message_key) {
                                            check_message_exist_6 = 'message found';
                                        }
                                    });
                                    if (check_message_exist_6 === 'message not found') {
                                        $this.myChats[i].allMessages.unshift(message);
                                        $this.myChats[i].lastUpdate = message.time;
                                    }
                                    t = 'key_exist';
                                }
                            });
                            if (t == 'key_not_exist') {
                                $this.myChats.unshift(data);
                                $this.myChats[0].lastUpdate = message.time;
                            }
                        }
                        else {
                            $this.myChats.unshift(data);
                            $this.myChats[0].lastUpdate = message.time;
                        }
                        //console.log($this.myChats);
                        $this.last_entry = $this.myChats[$this.myChats.length - 1]; // end key
                        res('added child_event');
                    });
                });
            }
        });
    };
    /*
        create new user with given object
        without checking if user exist or not
    */
    ChatService.prototype.create_new_user = function (new_user_obj) {
        return new Promise(function (resolve) {
            var user = {
                'email': new_user_obj.chat_email,
                'id': 'new_user_obj.id',
                'image': 'assets/images/chat_user.png',
                'name': new_user_obj.chat_name,
                'status': new_user_obj.status
            };
            __WEBPACK_IMPORTED_MODULE_5_firebase___default.a.database().ref("/users").push({
                'base': user
            }).then(function (value) {
                user.id = value.key; //new creted user id
                // some onDisconnect operational event 
                __WEBPACK_IMPORTED_MODULE_5_firebase___default.a.database().ref("/users/" + user.id + "/status").onDisconnect().set(0);
                __WEBPACK_IMPORTED_MODULE_5_firebase___default.a.database().ref("/users/" + user.id + "/lastActive").onDisconnect().set(Date.now());
                __WEBPACK_IMPORTED_MODULE_5_firebase___default.a.database().ref("/users/" + user.id + "/base/status").onDisconnect().set(0);
                __WEBPACK_IMPORTED_MODULE_5_firebase___default.a.database().ref("/users/" + user.id + "/base/lastActive").onDisconnect().set(Date.now());
                //set base->id=new created user id and new chat assign
                __WEBPACK_IMPORTED_MODULE_5_firebase___default.a.database().ref("/users/" + user.id + "/base/").set(user).then(function (new_value) {
                    resolve('new user pushed');
                });
            });
        });
    };
    /*
        get all active user from firebase and send notification regarding chat key
    */
    ChatService.prototype.add_user_to_chat = function (current_chat_key, user) {
        var $this = this;
        return new Promise(function (res) {
            var noti_obj = {
                'chat_id': current_chat_key,
                'sender': $this.config.user.id,
                'type': 'chat_invite'
            };
            $this.create_new_notification(noti_obj, user.id).then(function (resolve) {
                //return => {'notification_key':nk.key}console.log(resolve);
                res(resolve);
            });
        });
    };
    ChatService.prototype.search_user_firebase = function (user_initials) {
        var $this = this;
        return new Promise(function (res) {
            __WEBPACK_IMPORTED_MODULE_5_firebase___default.a.database()
                .ref("/users/").orderByChild('name')
                .startAt("" + user_initials).endAt("" + user_initials + "\uF8FF")
                .once('value', function (snapdata) {
                if (snapdata.val() == null) {
                    $this.searched_users = [];
                    res($this.searched_users);
                }
                else {
                    var all_response_1 = snapdata.val();
                    var user_ids = [];
                    user_ids = Object.keys(snapdata.val());
                    var return_users_1 = [];
                    user_ids.map(function (key, i) {
                        if (all_response_1[key].status) {
                            return_users_1.push(all_response_1[key]);
                        }
                    });
                    $this.searched_users = return_users_1;
                    res($this.searched_users);
                }
            });
        });
    };
    /*
        Search online members from firebase
    */
    ChatService.prototype.search_online_members = function () {
        var $this = this;
        var online_users = [];
        return new Promise(function (res) {
            __WEBPACK_IMPORTED_MODULE_5_firebase___default.a.database()
                .ref("/users/").orderByChild('status').equalTo(1)
                .once('value', function (snapdata) {
                if (snapdata.val() == null) {
                    res(online_users);
                }
                else {
                    var all_response_2 = snapdata.val();
                    var user_ids = [];
                    user_ids = Object.keys(snapdata.val());
                    user_ids.map(function (key, i) {
                        if (all_response_2[key] != null) {
                            online_users.push(all_response_2[key]);
                        }
                    });
                    res(online_users);
                }
            });
        });
    };
    ChatService.prototype.register_new_user = function (new_user_obj) {
        var $this = this;
        var type = 'student'; // get type here admin or  student
        __WEBPACK_IMPORTED_MODULE_5_firebase___default.a.database()
            .ref("/users/" + new_user_obj.id)
            .once('value', function (snapdata) {
            if (snapdata.val() == null) {
                var user = {
                    'id': new_user_obj.id,
                    'image': new_user_obj.avatar,
                    'name': new_user_obj.name,
                    'status': 1
                };
                __WEBPACK_IMPORTED_MODULE_5_firebase___default.a.database().ref("/users/" + new_user_obj.id + "/id").set(new_user_obj.id);
                __WEBPACK_IMPORTED_MODULE_5_firebase___default.a.database().ref("/users/" + new_user_obj.id + "/image").set(new_user_obj.avatar);
                __WEBPACK_IMPORTED_MODULE_5_firebase___default.a.database().ref("/users/" + new_user_obj.id + "/name").set(new_user_obj.name);
                __WEBPACK_IMPORTED_MODULE_5_firebase___default.a.database().ref("/users/" + new_user_obj.id + "/type").set(type);
                __WEBPACK_IMPORTED_MODULE_5_firebase___default.a.database().ref("/users/" + new_user_obj.id + "/base").set(user)
                    .then(function (value) {
                    console.log('base set');
                    console.log(value);
                    // some onDisconnect operational event 
                    __WEBPACK_IMPORTED_MODULE_5_firebase___default.a.database().ref("/users/" + new_user_obj.id + "/status").set(1);
                    __WEBPACK_IMPORTED_MODULE_5_firebase___default.a.database().ref("/users/" + new_user_obj.id + "/status").onDisconnect().set(0);
                    __WEBPACK_IMPORTED_MODULE_5_firebase___default.a.database().ref("/users/" + new_user_obj.id + "/lastActive").set(Date.now());
                    __WEBPACK_IMPORTED_MODULE_5_firebase___default.a.database().ref("/users/" + new_user_obj.id + "/lastActive").onDisconnect().set(Date.now());
                    __WEBPACK_IMPORTED_MODULE_5_firebase___default.a.database().ref("/users/" + new_user_obj.id + "/base/status").set(1);
                    __WEBPACK_IMPORTED_MODULE_5_firebase___default.a.database().ref("/users/" + new_user_obj.id + "/base/status").onDisconnect().set(0);
                    __WEBPACK_IMPORTED_MODULE_5_firebase___default.a.database().ref("/users/" + new_user_obj.id + "/base/lastActive").set(Date.now());
                    __WEBPACK_IMPORTED_MODULE_5_firebase___default.a.database().ref("/users/" + new_user_obj.id + "/base/lastActive").onDisconnect().set(Date.now());
                    // //set base->id=new created user id and new chat assign
                    // firebase.database().ref(`/users/${user.id}/base/`).set(user).then((new_value) => {
                    // 	console.log('new user registered');
                    // });
                });
            }
            else {
                /*set status of user 1 if user logged_in int App also make
                    user status 0 if user not disconnect
                */
                // $this.config.user.id
                __WEBPACK_IMPORTED_MODULE_5_firebase___default.a.database().ref("/users/" + new_user_obj.id + "/status").set(1);
                __WEBPACK_IMPORTED_MODULE_5_firebase___default.a.database().ref("/users/" + new_user_obj.id + "/status").onDisconnect().set(0);
                __WEBPACK_IMPORTED_MODULE_5_firebase___default.a.database().ref("/users/" + new_user_obj.id + "/lastActive").set(Date.now());
                __WEBPACK_IMPORTED_MODULE_5_firebase___default.a.database().ref("/users/" + new_user_obj.id + "/lastActive").onDisconnect().set(Date.now());
                __WEBPACK_IMPORTED_MODULE_5_firebase___default.a.database().ref("/users/" + new_user_obj.id + "/base/status").set(1);
                __WEBPACK_IMPORTED_MODULE_5_firebase___default.a.database().ref("/users/" + new_user_obj.id + "/base/status").onDisconnect().set(0);
                __WEBPACK_IMPORTED_MODULE_5_firebase___default.a.database().ref("/users/" + new_user_obj.id + "/base/lastActive").set(Date.now());
                __WEBPACK_IMPORTED_MODULE_5_firebase___default.a.database().ref("/users/" + new_user_obj.id + "/base/lastActive").onDisconnect().set(Date.now());
            }
        });
    };
    ChatService.prototype.logout = function (new_user_obj) {
        var $this = this;
        var type = 'student'; // get type here admin or  student
        var user = {
            'id': new_user_obj.id,
            'image': new_user_obj.avatar,
            'name': new_user_obj.name,
            'status': 1
        };
        __WEBPACK_IMPORTED_MODULE_5_firebase___default.a.database().ref("/users/" + new_user_obj.id + "/status").set(0);
        __WEBPACK_IMPORTED_MODULE_5_firebase___default.a.database().ref("/users/" + new_user_obj.id + "/lastActive").set(Date.now());
        __WEBPACK_IMPORTED_MODULE_5_firebase___default.a.database().ref("/users/" + new_user_obj.id + "/base/status").set(0);
        __WEBPACK_IMPORTED_MODULE_5_firebase___default.a.database().ref("/users/" + new_user_obj.id + "/base/lastActive").set(Date.now());
    };
    ChatService.prototype.check_user_status = function (user_id) {
        var $this = this;
        return new Promise(function (resolve) {
            __WEBPACK_IMPORTED_MODULE_5_firebase___default.a.database()
                .ref("/users/" + user_id + "/base/status")
                .on('value', function (snapdata) {
                if (snapdata.val() == null) {
                    //user offline not registered to firebase
                    console.log('status=>  ' + snapdata.val());
                    resolve(0);
                }
                else {
                    if (snapdata.val()) {
                        //online
                        console.log('status=>  ' + snapdata.val());
                        resolve(1);
                    }
                    else {
                        //offline
                        console.log('status=>  ' + snapdata.val());
                        resolve(0);
                    }
                }
            });
        });
    };
    ChatService.prototype.getUserAuthorizationHeaders = function () {
        var userheaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        userheaders.append('Authorization', this.config.settings.access_token);
        return new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({ headers: userheaders });
    };
    ChatService.prototype.search_user_from_directory = function (user_initials) {
        var _this = this;
        var $this = this;
        var opt = this.getUserAuthorizationHeaders();
        return new Promise(function (resolve) {
            $this.http.post(_this.config.baseUrl + "user/alluser", { 'user_initials': user_initials }, opt).map(function (res) { return res.json(); }).subscribe(function (res) {
                if (res.status) {
                    resolve(res);
                }
                else {
                    resolve(res);
                }
            });
        });
    };
    ChatService.prototype.exit_from_chat = function (current_chat_key) {
        var $this = this;
        return new Promise(function (res) {
            var current_user_id = $this.config.user.id;
            var index = $this.get_Current_index(current_chat_key);
            $this.myChats.splice(index, 1); // Element removed
            __WEBPACK_IMPORTED_MODULE_5_firebase___default.a.database().ref("/chats/" + current_chat_key + "/users").off();
            __WEBPACK_IMPORTED_MODULE_5_firebase___default.a.database().ref("/chats/" + current_chat_key + "/messages").off();
            __WEBPACK_IMPORTED_MODULE_5_firebase___default.a.database().ref("/users/" + current_user_id + "/chats/").child(current_chat_key).remove();
            //firebase.database().ref(`/chats/${args.chat_id}/users/`).child(args.user.id).remove();
            res('exit');
        });
    };
    ChatService = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Http */],
            __WEBPACK_IMPORTED_MODULE_3__config__["a" /* ConfigService */],
            __WEBPACK_IMPORTED_MODULE_2__ionic_storage__["b" /* Storage */]])
    ], ChatService);
    return ChatService;
}());

//# sourceMappingURL=chat.js.map

/***/ }),

/***/ 89:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return WalletService; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_ionic_angular__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__ionic_storage__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__config__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__authentication__ = __webpack_require__(33);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__ionic_native_in_app_purchase__ = __webpack_require__(325);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_add_operator_map__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_rxjs_Observable__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_8_rxjs_Observable__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_rxjs_add_observable_of__ = __webpack_require__(40);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_rxjs_add_observable_of___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_9_rxjs_add_observable_of__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_rxjs_add_observable_fromPromise__ = __webpack_require__(60);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_rxjs_add_observable_fromPromise___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_10_rxjs_add_observable_fromPromise__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_rxjs_add_operator_toPromise__ = __webpack_require__(59);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_rxjs_add_operator_toPromise___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_11_rxjs_add_operator_toPromise__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};












var WalletService = /** @class */ (function () {
    function WalletService(storage, config, iap, auth, http, toast, loadingCtrl) {
        this.storage = storage;
        this.config = config;
        this.iap = iap;
        this.auth = auth;
        this.http = http;
        this.toast = toast;
        this.loadingCtrl = loadingCtrl;
        this.products = [];
        this.transactions = [];
        console.log(this.config.user);
        console.log('##### ' + this.config.isLoggedIn);
        if (this.config.isLoggedIn) {
            this.wallet = {
                'userid': this.config.user.id,
                'amount': 0,
            };
        }
    }
    WalletService.prototype.getWalletAmount = function () {
        return this.wallet.amount;
    };
    WalletService.prototype.getWallet = function (force) {
        var _this = this;
        if (force === void 0) { force = false; }
        console.log('WAllet CAlled in');
        if (this.config.isLoggedIn) {
            if (this.config.trackComponents('wallet') && !force) {
                if (this.wallet && this.wallet.userid == this.config.user.id) {
                    return __WEBPACK_IMPORTED_MODULE_8_rxjs_Observable__["Observable"].of(this.wallet);
                }
                else {
                    this.walletObservable = __WEBPACK_IMPORTED_MODULE_8_rxjs_Observable__["Observable"].fromPromise(this.storage.get('wallet').then(function (wallet) {
                        if (wallet && wallet.userid == _this.config.user.id) {
                            _this.wallet = wallet;
                            console.log(_this.wallet);
                            return _this.wallet;
                        }
                    }));
                }
            }
            else {
                console.log('making wallet hit #3');
                var opt = this.auth.getUserAuthorizationHeaders();
                console.log(opt);
                this.walletObservable = this.http.get(this.config.baseUrl + "user/wallet", opt)
                    .map(function (response) {
                    console.log('Got wallet hit response');
                    var body = response.json();
                    if (body) {
                        console.log('Wallet API call result');
                        console.log(body);
                        _this.wallet = body;
                        _this.config.updateComponents('wallet', 1);
                        console.log('amount =' + _this.wallet.amount);
                        return _this.wallet;
                    }
                });
            }
        }
        return this.walletObservable;
    };
    //Returns Promise Always use .then and .catch to avoid errors
    WalletService.prototype.getProducts = function () {
        var walletproducts = [];
        if (this.config.wallet.length) {
            for (var i = 0; i < this.config.wallet.length; i++) {
                walletproducts.push(this.config.wallet[i].product_id);
            }
        }
        return this.iap
            .getProducts(walletproducts);
    };
    WalletService.prototype.getTransactions = function (args) {
        var _this = this;
        if ((this.config.trackComponents('transactions') && this.config.trackComponents('transactions') <= this.transactions.length) && !args.force) {
            if (this.transactions.length) {
                return __WEBPACK_IMPORTED_MODULE_8_rxjs_Observable__["Observable"].of(this.transactions);
            }
            else {
                this.transactionsObservable = __WEBPACK_IMPORTED_MODULE_8_rxjs_Observable__["Observable"].fromPromise(this.storage.get('transactions').then(function (transactions) {
                    if (transactions) {
                        _this.transactions = transactions;
                        return _this.transactions;
                    }
                }));
            }
        }
        else {
            var opt = this.auth.getUserAuthorizationHeaders();
            this.transactionsObservable = this.http.get(this.config.baseUrl + "user/wallet/transactions?type=" + args.type + "&per_page=" + this.config.settings.per_view + "&paged=" + args.paged, opt)
                .map(function (response) {
                var body = response.json();
                if (body) {
                    _this.transactions = _this.mergeTransactions(_this.transactions, body);
                    _this.storage.set('transactions', _this.transactions);
                    console.log(_this.transactions.length);
                    return _this.transactions;
                }
            });
        }
        return this.transactionsObservable;
    };
    WalletService.prototype.mergeTransactions = function (trx, trans) {
        console.log('1');
        for (var i = 0; i < trans.length; i++) {
            var merge = 1;
            for (var j = 0; j < trx.length; j++) {
                //console.log(trx[j].transactionid + ' == '+ trans[i].transactionid);
                if (trx[j].transactionid == trans[i].transactionid) {
                    merge = 0;
                    break;
                }
            }
            if (merge) {
                trx.push(trans[i]);
            }
        }
        return trx;
    };
    WalletService.prototype.walletPayment = function (args) {
        var _this = this;
        var transaction;
        var opt = this.auth.getUserAuthorizationHeaders();
        transaction = {
            'userid': this.config.user.id,
            'transactionid': this.config.timestamp,
            'pid': args.extras.course.course_id,
            'status': args.type,
            'store': 'wallet',
            'date': this.config.timestamp,
            'amount': args.amount,
            'points': args.amount,
            'description': args.extras.course.course.name,
            'more': {
                'type': 'subscribe_course',
                'course': args.extras.course.course.id,
                'pricing': args.extras.pricing,
            }
        };
        return this.http.post(this.config.baseUrl + "user/wallet/update", transaction, opt)
            .map(function (response) {
            var body = response.json();
            if (body) {
                if (body.status == 'success') {
                    _this.wallet.amount = body.points;
                    _this.transactions.push(transaction);
                    _this.storage.set('wallet', _this.wallet);
                    _this.storage.set('transactions', _this.transactions);
                }
                return body;
            }
        });
    };
    WalletService.prototype.buyProduct = function (product) {
        var _this = this;
        var transaction;
        var loading = this.loadingCtrl.create({
            content: '<img src="assets/images/bubbles.svg">',
            duration: 3000,
            spinner: 'hide',
            showBackdrop: true,
        });
        loading.present();
        if (product.productId == 'sample') {
            var opt = this.auth.getUserAuthorizationHeaders();
            transaction = {
                'userid': this.config.user.id,
                'transactionid': this.config.timestamp,
                'pid': 'sample',
                'status': 'credit',
                'store': 'sample',
                'date': this.config.timestamp,
                'amount': 10,
                'points': 10,
                'description': product.title,
            };
            return this.http.post(this.config.baseUrl + "user/wallet/update", transaction, opt)
                .map(function (response) {
                var body = response.json();
                if (body) {
                    var toast = _this.toast.create({
                        message: body.message,
                        duration: 1000,
                        position: 'bottom'
                    });
                    toast.present();
                    if (body.status == 'success') {
                        _this.wallet.amount = body.points;
                        _this.transactions.push(transaction);
                        _this.storage.set('wallet', _this.wallet);
                        _this.storage.set('transactions', _this.transactions);
                    }
                    loading.dismiss().catch(function (err) { return console.log(err); });
                    return body;
                }
            }).toPromise();
        }
        else {
            return this.iap
                .buy(product.productId)
                .then(function (data) {
                console.log(data);
                if (data) {
                    var points = 0;
                    for (var k = 0; k < _this.config.wallet.length; k++) {
                        if (product.productId == _this.config.wallet[k].product_id) {
                            points = _this.config.wallet[k].points;
                        }
                    }
                    transaction = {
                        'userid': _this.config.user.id,
                        'transactionid': data.transactionId,
                        'pid': product.productId,
                        'status': 'credit',
                        'store': 'google',
                        'date': _this.config.timestamp,
                        'amount': product.price,
                        'points': points,
                        'description': product.title,
                        'reciept': data.receipt,
                        'signature': data.signature,
                    };
                    //this.wallet.amount = this.wallet.amount + 
                    var opt = _this.auth.getUserAuthorizationHeaders();
                    return _this.http.post(_this.config.baseUrl + "user/wallet/update", transaction, opt)
                        .map(function (response) {
                        var body = response.json();
                        if (body) {
                            var toast = _this.toast.create({
                                message: body.message,
                                duration: 1000,
                                position: 'bottom'
                            });
                            toast.present();
                            if (body.status == 'success') {
                                _this.wallet.amount = body.points;
                                _this.transactions.push(transaction);
                                _this.storage.set('wallet', _this.wallet);
                                _this.storage.set('transactions', _this.transactions);
                            }
                            return body;
                        }
                        loading.dismiss().catch(function (err) { return console.log(err); });
                    }).subscribe(function (res) {
                        return _this.iap.consume(data.productType, data.receipt, data.signature);
                    });
                }
            })
                .catch(function (err) {
                loading.dismiss().catch(function (err) { return console.log(err); });
                console.log(err);
            });
        }
    };
    WalletService.prototype.restorePurchases = function () {
        return this.iap.restorePurchases();
    };
    WalletService.prototype.walletPayment_batch = function (args) {
        var _this = this;
        var $this = this;
        console.log('walletPayment_batch func');
        return new Promise(function (resolve) {
            var transaction;
            var opt = _this.auth.getUserAuthorizationHeaders();
            transaction = {
                'userid': _this.config.user.id,
                'transactionid': _this.config.timestamp,
                'pid': args.name,
                'status': args.buy_method,
                'store': 'wallet',
                'date': _this.config.timestamp,
                'amount': args.price.sale_price,
                'points': args.price.sale_price,
                'description': args.name,
                'more': {
                    'type': 'buying_course',
                    'batch_id': args.id,
                    'batch_name': args.name,
                    'pricing': args.price.sale_price,
                }
            };
            _this.http.post(_this.config.baseUrl + "user/wallet/update", transaction, opt)
                .map(function (res) { return res.json(); })
                .subscribe(function (res) {
                var body = res;
                if (body) {
                    if (body.status == 'success') {
                        _this.wallet.amount = body.points;
                        _this.transactions.push(transaction);
                        _this.storage.set('wallet', _this.wallet);
                        _this.storage.set('transactions', _this.transactions);
                    }
                    console.log('walletPayment_batch body');
                    console.log(body);
                }
                resolve(res);
            });
        });
    };
    WalletService = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_3__ionic_storage__["b" /* Storage */],
            __WEBPACK_IMPORTED_MODULE_4__config__["a" /* ConfigService */],
            __WEBPACK_IMPORTED_MODULE_6__ionic_native_in_app_purchase__["a" /* InAppPurchase */],
            __WEBPACK_IMPORTED_MODULE_5__authentication__["a" /* AuthenticationService */],
            __WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Http */],
            __WEBPACK_IMPORTED_MODULE_2_ionic_angular__["q" /* ToastController */],
            __WEBPACK_IMPORTED_MODULE_2_ionic_angular__["j" /* LoadingController */]])
    ], WalletService);
    return WalletService;
}());

//# sourceMappingURL=wallet.js.map

/***/ }),

/***/ 953:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MatchAnswers; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var MatchAnswers = /** @class */ (function () {
    function MatchAnswers(elementRef) {
        this.elementRef = elementRef;
    }
    MatchAnswers.prototype.ngOnInit = function () {
    };
    MatchAnswers = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Directive"])({
            selector: '[MatchAnswers]'
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"]])
    ], MatchAnswers);
    return MatchAnswers;
}());

//# sourceMappingURL=match.js.map

/***/ }),

/***/ 954:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Fillblank; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var Fillblank = /** @class */ (function () {
    function Fillblank(elementRef) {
        this.elementRef = elementRef;
    }
    Fillblank.prototype.ngOnInit = function () {
    };
    Fillblank = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Directive"])({
            selector: '[fillblank]' // Attribute selector
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"]])
    ], Fillblank);
    return Fillblank;
}());

//# sourceMappingURL=fillblank.js.map

/***/ }),

/***/ 955:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Select; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var Select = /** @class */ (function () {
    function Select(elementRef) {
        this.elementRef = elementRef;
    }
    Select.prototype.ngOnInit = function () {
        this.elementRef.nativeElement.innerHTML = '<select>\
    <option>SELECT1</option>\
    <option>SELECT2</option>\
    <option>SELECT2</option>\
    </select>';
    };
    Select = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Directive"])({
            selector: '[select]' // Attribute selector
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"]])
    ], Select);
    return Select;
}());

//# sourceMappingURL=select.js.map

/***/ }),

/***/ 956:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AbsoluteDrag; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(6);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var AbsoluteDrag = /** @class */ (function () {
    function AbsoluteDrag(element, renderer, domCtrl) {
        this.element = element;
        this.renderer = renderer;
        this.domCtrl = domCtrl;
    }
    AbsoluteDrag.prototype.ngAfterViewInit = function () {
        var _this = this;
        this.renderer.setElementStyle(this.element.nativeElement, 'position', 'fixed');
        this.renderer.setElementStyle(this.element.nativeElement, 'left', this.startLeft + 'px');
        this.renderer.setElementStyle(this.element.nativeElement, 'top', this.startTop + 'px');
        var hammer = new window['Hammer'](this.element.nativeElement);
        hammer.get('pan').set({ direction: window['Hammer'].DIRECTION_ALL });
        hammer.on('pan', function (ev) {
            _this.handlePan(ev);
        });
    };
    AbsoluteDrag.prototype.handlePan = function (ev) {
        var _this = this;
        var newLeft = ev.center.x;
        var newTop = ev.center.y;
        this.domCtrl.write(function () {
            _this.renderer.setElementClass(_this.element.nativeElement, 'dragged', true);
            _this.renderer.setElementStyle(_this.element.nativeElement, 'left', newLeft + 'px');
            _this.renderer.setElementStyle(_this.element.nativeElement, 'top', newTop + 'px');
        });
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])('startLeft'),
        __metadata("design:type", Object)
    ], AbsoluteDrag.prototype, "startLeft", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])('startTop'),
        __metadata("design:type", Object)
    ], AbsoluteDrag.prototype, "startTop", void 0);
    AbsoluteDrag = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Directive"])({
            selector: '[absolute-drag]'
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"], __WEBPACK_IMPORTED_MODULE_0__angular_core__["Renderer"], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["e" /* DomController */]])
    ], AbsoluteDrag);
    return AbsoluteDrag;
}());

//# sourceMappingURL=absolute-drag.js.map

/***/ }),

/***/ 978:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MembersDirectoryPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_map__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__services_config__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__services_members__ = __webpack_require__(205);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__profile_profile__ = __webpack_require__(22);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






var MembersDirectoryPage = /** @class */ (function () {
    function MembersDirectoryPage(navCtrl, config, membersService, navParams, nav, toastCtrl, loadingCtrl) {
        this.navCtrl = navCtrl;
        this.config = config;
        this.membersService = membersService;
        this.navParams = navParams;
        this.nav = nav;
        this.toastCtrl = toastCtrl;
        this.loadingCtrl = loadingCtrl;
        this.profilePage = __WEBPACK_IMPORTED_MODULE_5__profile_profile__["a" /* ProfilePage */];
        this.loadmore = 1;
        /* filter options */
        this.filterby = '';
        this.sortby = '';
        /* search options */
        this.searchTerm = '';
    }
    MembersDirectoryPage.prototype.ngOnInit = function () {
        var $this = this;
        console.log('init GroupdirectoryPage');
        var args = {};
        this.args = args;
        $this.loadmore = 0;
        this.get_members('ngoninit', args).then(function (resolve) {
            if (resolve.length == $this.config.members_directory.per_page) {
                $this.loadmore = 1;
            }
        });
    };
    MembersDirectoryPage.prototype.doInfinite = function ($event) {
        var $this = this;
        var args = {};
        args = this.args;
        $this.loadmore = 0;
        this.get_members('infinite', args).then(function (resolve) {
            if (resolve.length == $this.config.members_directory.per_page) {
                $this.loadmore = 1;
            }
            $event.complete();
        });
    };
    MembersDirectoryPage.prototype.doRefresh = function ($event) {
        var $this = this;
        $this.reset_fil();
        var args = {};
        this.args = args;
        $this.loadmore = 0;
        this.get_members('refresh', args).then(function (resolve) {
            if (resolve.length == $this.config.members_directory.per_page) {
                $this.loadmore = 1;
            }
            $event.complete();
        });
    };
    MembersDirectoryPage.prototype.reset_fil = function () {
        var $this = this;
        $this.filterby = '';
        $this.sortby = '';
        $this.searchTerm = '';
    };
    MembersDirectoryPage.prototype.get_members = function (activity, args) {
        var _this = this;
        var $this = this;
        var loading = this.loadingCtrl.create({
            content: '<img src="assets/images/bubbles.svg">',
            duration: 3000,
            spinner: 'hide',
            showBackdrop: true,
        });
        loading.present();
        return new Promise(function (resolve) {
            $this.membersService.get_all_members(activity, args).then(function (res) {
                if (res.status) {
                }
                else {
                    var toast = _this.toastCtrl.create({
                        message: res.message,
                        duration: 3000,
                        position: 'bottom'
                    });
                    toast.present();
                }
                console.log('loading dismiss');
                loading.dismiss();
                resolve(res);
            });
        });
    };
    /* filter by alphabet , lastActive , newlyCreated  and mostMembers */
    MembersDirectoryPage.prototype.onFilterOptions = function ($event) {
        var $this = this;
        var args = this.return_args_obj();
        this.args = args;
        $this.loadmore = 0;
        this.get_members('filterby', args).then(function (resolve) {
            if (resolve.length == $this.config.members_directory.per_page) {
                $this.loadmore = 1;
            }
        });
    };
    MembersDirectoryPage.prototype.onSortOptions = function ($event) {
        var $this = this;
        var args = this.return_args_obj();
        this.args = args;
        $this.loadmore = 0;
        this.get_members('sortby', args).then(function (resolve) {
            if (resolve.length == $this.config.members_directory.per_page) {
                $this.loadmore = 1;
            }
        });
    };
    MembersDirectoryPage.prototype.return_args_obj = function () {
        var $this = this;
        var S_term = false;
        if (this.searchTerm) {
            S_term = $this.searchTerm;
        }
        var args = {
            'search_terms': S_term,
            'type': $this.sortby,
            'scope': $this.filterby
        };
        return args;
    };
    MembersDirectoryPage.prototype.ionViewDidLoad = function () {
        this.filterSelectOptions = {
            title: this.config.get_translation('filter_options'),
            okText: this.config.get_translation('okay'),
            cancelText: this.config.get_translation('dismiss'),
        };
        this.sortSelectOptions = {
            title: this.config.get_translation('sort_options'),
            okText: this.config.get_translation('okay'),
            cancelText: this.config.get_translation('dismiss'),
        };
    };
    /* Search by keyword */
    MembersDirectoryPage.prototype.onSearchInput = function () {
        console.log('onSearchInput');
        console.log(this.searchTerm);
        var $this = this;
        if (this.searchTerm) {
            if (this.searchTerm.length >= 3) {
                var args = {};
                var S_term = false;
                if (this.searchTerm) {
                    S_term = $this.searchTerm;
                }
                args = {
                    'search_terms': S_term,
                    'type': $this.filterby
                };
                this.args = args;
                this.loadmore = 0;
                this.get_members('search', args).then(function (resolve) {
                    console.log('onSearchInput res');
                    if (resolve.length == $this.config.members_directory.per_page) {
                        $this.loadmore = 1;
                    }
                });
            }
            else {
                // do nothing
            }
        }
    };
    MembersDirectoryPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-membersdirectory',template:/*ion-inline-start:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\pages\membersdirectory\membersdirectory.html"*/'<ion-header>\n    <ion-navbar  color="transparent" >\n        <ion-buttons start>\n            <button ion-button menuToggle>\n                <ion-icon name="md-menu"></ion-icon>\n            </button>\n        </ion-buttons>\n        <ion-title>{{config.get_translation(\'members_directory\')}}</ion-title>\n            <ion-buttons end>\n                <button ion-button [navPush]="profilePage" [navParams]="userdata">\n                    <ion-icon name="md-contact" *ngIf="!config.isLoggedIn"></ion-icon>\n                    <img *ngIf="config.isLoggedIn" [src]="config.user?.avatar">\n                </button>\n            </ion-buttons>\n    </ion-navbar>\n</ion-header>\n<ion-content padding>\n    <ion-refresher (ionRefresh)="doRefresh($event)">\n        <ion-refresher-content pullingText="{{config.get_translation(\'pull_to_refresh\')}}"\n          pullingIcon="arrow-dropdown"\n          refreshingSpinner="circles"\n          refreshingText="{{config.get_translation(\'refreshing\')}}"></ion-refresher-content>\n    </ion-refresher>\n    <ion-row>\n        <ion-col>\n            <div class="filter_sort_select">\n                <ion-item>\n                    <ion-select placeholder="{{this.config.get_translation(\'filter_options\')}}" (ionChange)="onFilterOptions($event)" [selectOptions]="filterSelectOptions" [(ngModel)]="filterby" okText="{{config.get_translation(\'ok\')}}" cancelText="{{config.get_translation(\'cancel\')}}">\n                        <ion-option value="all">All</ion-option>\n                        <ion-option value="instructors">Instructor</ion-option>\n                    </ion-select>\n                </ion-item>\n            </div>\n        </ion-col>\n        <ion-col>\n            <div class="filter_sort_select">\n                <ion-item>\n                    <ion-select placeholder="{{this.config.get_translation(\'sort_options\')}}" (ionChange)="onSortOptions($event)" [selectOptions]="sortSelectOptions" [(ngModel)]="sortby" okText="{{config.get_translation(\'ok\')}}" cancelText="{{config.get_translation(\'cancel\')}}">\n                        <ion-option value="active">{{this.config.get_translation(\'lastActive\')}}</ion-option>\n                        <ion-option value="alphabetical">{{this.config.get_translation(\'alphabetical\')}}</ion-option>\n                        <ion-option value="newest">{{this.config.get_translation(\'newlyCreated\')}}</ion-option>\n                    </ion-select>\n                </ion-item>\n            </div>\n        </ion-col>\n    </ion-row>\n    <ion-row>\n            <ion-searchbar [(ngModel)]="searchTerm" debounced-input placeholder="{{config.get_translation(\'directory_search_placeholder\')}}" (ionInput)="onSearchInput()"></ion-searchbar>\n    </ion-row> \n    <div>\n        <div *ngIf="membersService.all_members && membersService.all_members.length" class="all_members">\n            <div  *ngFor="let member of membersService.all_members">\n                <MemberBlock  [member]="member"></MemberBlock>\n            </div>\n        </div>\n        <div *ngIf="!(membersService.all_members && membersService.all_members.length)">\n            <div class="message" [innerHtml]="this.config.get_translation(\'no_member\')">\n            </div>\n        </div>\n\n    </div>\n    <ion-infinite-scroll *ngIf="loadmore" (ionInfinite)="doInfinite($event)">\n            <ion-infinite-scroll-content></ion-infinite-scroll-content>\n    </ion-infinite-scroll>  \n</ion-content>'/*ion-inline-end:"E:\good day\abdelrahmn\mobileapps\Nouveau dossier (3)\local\elearningapp\src\pages\membersdirectory\membersdirectory.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_3__services_config__["a" /* ConfigService */],
            __WEBPACK_IMPORTED_MODULE_4__services_members__["a" /* MembersService */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* ToastController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* LoadingController */]])
    ], MembersDirectoryPage);
    return MembersDirectoryPage;
}());

//# sourceMappingURL=membersdirectory.js.map

/***/ })

},[579]);
//# sourceMappingURL=main.js.map